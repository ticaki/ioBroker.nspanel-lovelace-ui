import type { RGB } from '../const/Color';
import { Color } from '../const/Color';
import type { mydps } from './config-manager-const';

export const ButtonNavigationDef: Record<
    ScriptConfig.channelRoles,
    {
        iconOn: AllIcons;
        iconOff: AllIcons;
        colorOn: string | RGB;
        colorOff: string | RGB;
        stateName: mydps;
        textOn?: string;
        textOff?: string;
        colorScale?: ScriptConfig.IconColorElement;
    }
> = {
    airCondition: {
        iconOn: 'air-conditioner',
        iconOff: 'air-conditioner',
        colorOn: Color.hot,
        colorOff: Color.cold,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    blind: {
        iconOn: 'window-shutter-open',
        iconOff: 'window-shutter',
        colorOn: Color.open,
        colorOff: Color.close,
        textOn: 'open',
        textOff: 'close',
        stateName: 'ACTUAL',
    },
    button: {
        iconOn: 'gesture-tap-button',
        iconOff: 'gesture-tap-button',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'pressed',
        textOff: 'press',
        stateName: 'ACTUAL',
    },
    ct: {
        iconOn: 'lightbulb',
        iconOff: 'lightbulb-outline',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    dimmer: {
        iconOn: 'lightbulb',
        iconOff: 'lightbulb-outline',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    door: {
        iconOn: 'door-open',
        iconOff: 'door-closed',
        colorOn: Color.open,
        colorOff: Color.close,
        textOn: 'open',
        textOff: 'close',
        stateName: 'ACTUAL',
    },
    gate: {
        iconOn: 'gate-open',
        iconOff: 'gate',
        colorOn: Color.open,
        colorOff: Color.close,
        textOn: 'open',
        textOff: 'close',
        stateName: 'ACTUAL',
    },
    hue: {
        iconOn: 'lightbulb',
        iconOff: 'lightbulb-outline',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ON',
    },
    humidity: {
        iconOn: 'water-percent',
        iconOff: 'water-percent',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        colorScale: { val_min: 0, val_max: 100, val_best: 50, mode: 'triGrad' },
        stateName: 'ACTUAL',
    },
    info: {
        iconOn: 'information-outline',
        iconOff: 'information-off-outline',
        colorOn: Color.info,
        colorOff: Color.off,
        textOn: 'info',
        textOff: 'no info',
        stateName: 'ACTUAL',
    },
    'level.mode.fan': {
        iconOn: 'fan',
        iconOff: 'fan-off',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    'level.timer': {
        iconOn: 'timer',
        iconOff: 'timer-off',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    light: {
        iconOn: 'lightbulb',
        iconOff: 'lightbulb-outline',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    lock: {
        iconOn: 'lock-open',
        iconOff: 'lock',
        colorOn: Color.open,
        colorOff: Color.close,
        textOn: 'unlocked',
        textOff: 'locked',
        stateName: 'ACTUAL',
    },
    media: {
        iconOn: 'play',
        iconOff: 'pause',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'play',
        textOff: 'pause',
        stateName: 'STATE',
    },
    motion: {
        iconOn: 'motion',
        iconOff: 'motion-outline',
        colorOn: Color.attention,
        colorOff: Color.off,
        textOn: 'motion',
        textOff: 'no motion',
        stateName: 'ACTUAL',
    },
    rgb: {
        iconOn: 'lightbulb',
        iconOff: 'lightbulb-outline',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    rgbSingle: {
        iconOn: 'lightbulb',
        iconOff: 'lightbulb-outline',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    select: {
        iconOn: 'menu-down',
        iconOff: 'menu-down',
        colorOn: Color.activated,
        colorOff: Color.deactivated,
        textOn: 'selected',
        textOff: 'not selected',
        stateName: 'ACTUAL',
    },
    'sensor.alarm.flood': {
        iconOn: 'water-alert-outline',
        iconOff: 'water-outline',
        colorOn: Color.attention,
        colorOff: Color.off,
        textOn: 'alarm',
        textOff: 'no alarm',
        stateName: 'ACTUAL',
    },
    slider: {
        iconOn: 'tune',
        iconOff: 'tune',
        colorOn: Color.good,
        colorOff: Color.bad,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    socket: {
        iconOn: 'power-socket-de',
        iconOff: 'power-plug-off',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    temperature: {
        iconOn: 'thermometer',
        iconOff: 'thermometer',
        colorOn: Color.hot,
        colorOff: Color.cold,
        colorScale: { val_min: -20, val_max: 40, val_best: 22, mode: 'quadriGradAnchor' },
        stateName: 'ACTUAL',
    },
    thermostat: {
        iconOn: 'thermostat',
        iconOff: 'thermostat',
        colorOn: Color.hot,
        colorOff: Color.cold,
        colorScale: { val_min: -20, val_max: 40, val_best: 22, mode: 'quadriGradAnchor' },
        stateName: 'ACTUAL',
    },
    timeTable: {
        iconOn: 'timetable',
        iconOff: 'timetable',
        colorOn: Color.on,
        colorOff: Color.off,
        textOn: 'on',
        textOff: 'off',
        stateName: 'ACTUAL',
    },
    'value.humidity': {
        iconOn: 'water-percent',
        iconOff: 'water-percent',
        colorOn: Color.on,
        colorOff: Color.off,
        colorScale: { val_min: 0, val_max: 100, val_best: 50, mode: 'triGrad' },
        stateName: 'ACTUAL',
    },
    'value.temperature': {
        iconOn: 'thermostat',
        iconOff: 'thermostat',
        colorOn: Color.hot,
        colorOff: Color.cold,
        colorScale: { val_min: -20, val_max: 40, val_best: 22, mode: 'quadriGradAnchor' },
        stateName: 'ACTUAL',
    },
    volume: {
        iconOn: 'volume-high',
        iconOff: 'volume-mute',
        colorOn: Color.on,
        colorOff: Color.off,
        stateName: 'ACTUAL',
    },
    window: {
        iconOn: 'window-open-variant',
        iconOff: 'window-closed-variant',
        colorOn: Color.open,
        colorOff: Color.close,
        textOn: 'open',
        textOff: 'close',
        stateName: 'ACTUAL',
    },
    warning: {
        iconOn: 'alert-circle-outline',
        iconOff: 'alert-circle-outline',
        colorOn: Color.attention,
        colorOff: Color.off,
        textOn: 'warning',
        textOff: 'no warning',
        stateName: 'ACTUAL',
    },
};
