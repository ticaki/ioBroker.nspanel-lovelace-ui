{
  "version": 3,
  "sources": ["../../src/lib/definition.ts"],
  "sourcesContent": ["import { settings, device, room } from './types-d';\n\ntype ChangeTypeToChannelAndState<Obj> = Obj extends object\n    ? {\n          [K in keyof Obj]-?: ChangeTypeToChannelAndState<Obj[K]>;\n      } & customChannelType\n    : ioBroker.StateObject;\nexport type ChangeToChannel<Obj, T> = Obj extends object\n    ? { [K in keyof Obj]-?: customChannelType & T }\n    : ioBroker.StateObject;\n\nexport type ChangeTypeOfKeys<Obj, N> = Obj extends object ? { [K in keyof Obj]-?: ChangeTypeOfKeys<Obj[K], N> } : N;\n\nexport type customChannelType = {\n    _channel: ioBroker.ChannelObject | ioBroker.DeviceObject;\n};\n\nexport const defaultChannel: ioBroker.ChannelObject = {\n    _id: '',\n    type: 'channel',\n    common: {\n        name: 'Hey no description... ',\n    },\n    native: {},\n};\n\nexport const genericStateObjects: {\n    default: ioBroker.StateObject;\n    customString: ioBroker.StateObject;\n    devices: ioBroker.FolderObject;\n    rooms: ioBroker.FolderObject;\n    settings: ioBroker.FolderObject;\n    global: ioBroker.FolderObject;\n    presense: ioBroker.StateObject;\n    deviceDB: ioBroker.StateObject;\n} = {\n    default: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.state',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    deviceDB: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.deviceDB',\n            type: 'string',\n            role: 'json',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    presense: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.presense',\n            type: 'boolean',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    customString: {\n        _id: 'User_State',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.customString',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    devices: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'devices.folder',\n        },\n        native: {},\n    },\n    rooms: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'rooms.folder',\n        },\n        native: {},\n    },\n    settings: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'settings.folder',\n        },\n        native: {},\n    },\n    global: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'settings.global',\n        },\n        native: {},\n    },\n};\n\nexport type statesObjectsType = {\n    state: ioBroker.StateObject;\n    rooms: customChannelType | ChangeTypeToChannelAndState<room>;\n    devices: customChannelType | ChangeTypeToChannelAndState<device>;\n    settings: customChannelType & { config: customChannelType | ChangeTypeToChannelAndState<settings> };\n};\n\nexport const statesObjects: statesObjectsType = {\n    state: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.state',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    rooms: {\n        _channel: {\n            _id: '',\n            type: 'device',\n            common: {\n                name: 'room.channel',\n            },\n            native: {},\n        },\n        restart: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.restart',\n                type: 'boolean',\n                role: 'button',\n                read: false,\n                write: true,\n            },\n            native: {},\n        },\n        known_irks: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.known_irks',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        known_macs: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.known_macs',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        query: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.query',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        exclude: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.exclude',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: true,\n            },\n            native: {},\n        },\n        status: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.status',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: true,\n            },\n            native: {},\n        },\n        max_distance: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.distance',\n                type: 'number',\n                role: 'value',\n                unit: 'm',\n                read: true,\n                write: true,\n            },\n            native: {},\n        },\n        absorption: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.absorption',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: true,\n            },\n            native: {},\n        },\n        tx_ref_rssi: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.tx_ref_rssi',\n                type: 'number',\n                role: 'value',\n                unit: 'db',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        rx_adj_rssi: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.rx_adj_rssi',\n                type: 'number',\n                role: 'value',\n                unit: 'db',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        include: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.include',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: true,\n            },\n            native: {},\n        },\n        count_ids: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.count_ids',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        arduino_ota: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.arduino_ota',\n                type: 'boolean',\n                role: 'switch',\n                read: true,\n                write: true,\n            },\n            native: {\n                convert: 'val ? \"ON\" : \"OFF\"',\n            },\n        },\n        auto_update: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.auto_update',\n                type: 'boolean',\n                role: 'switch',\n                read: true,\n                write: true,\n            },\n            native: {\n                convert: 'val ? \"ON\" : \"OFF\"',\n            },\n        },\n        prerelease: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.prerelease',\n                type: 'boolean',\n                role: 'switch',\n                read: true,\n                write: true,\n            },\n            native: {\n                convert: 'val ? \"ON\" : \"OFF\"',\n            },\n        },\n        motion: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.motion',\n                type: 'boolean',\n                role: 'indicator',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        switch: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.switch',\n                type: 'boolean',\n                role: 'indicator',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        button: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.button',\n                type: 'boolean',\n                role: 'indicator',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        pir_timeout: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.pri_timeout',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        radar_timeout: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.radar_timeout',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        switch_1_timeout: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.switch_1_timeout',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        switch_2_timeout: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.switch_2_timeout',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        button_1: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.button_1',\n                type: 'boolean',\n                role: 'indicator',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        button_1_timeout: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.button_1_timeout',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        button_2_timeout: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'room.button_2_timeout',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        led_1: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'room.led_1.channel',\n                },\n                native: {},\n            },\n            state: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.led_1.state',\n                    type: 'boolean',\n                    role: 'indicator',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            brightness: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.led_1.brightness',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            color: {\n                _channel: {\n                    _id: '',\n                    type: 'channel',\n                    common: {\n                        name: 'room.led_1.color.channel',\n                    },\n                    native: {},\n                },\n                r: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'red',\n                        type: 'number',\n                        role: 'value',\n                        read: true,\n                        write: false,\n                    },\n                    native: {},\n                },\n                g: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'green',\n                        type: 'number',\n                        role: 'value',\n                        read: true,\n                        write: false,\n                    },\n                    native: {},\n                },\n                b: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'blue',\n                        type: 'number',\n                        role: 'value',\n                        read: true,\n                        write: false,\n                    },\n                    native: {},\n                },\n            },\n        },\n        telemetry: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'room.telemetry.channel',\n                },\n                native: {},\n            },\n            ip: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.ip',\n                    type: 'string',\n                    role: 'text',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            uptime: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.uptime',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            firm: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.firm',\n                    type: 'string',\n                    role: 'text',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            rssi: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.rssi',\n                    type: 'number',\n                    role: 'value',\n                    unit: 'db',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            ver: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.ver',\n                    type: 'string',\n                    role: 'text',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            count: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.count',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            adverts: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.adverts',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            seen: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.seen',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            reported: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.reported',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            freeHeap: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.freeheap',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            maxHeap: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.maxHeap',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            scanStack: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.scanStack',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            loopStack: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.loopStack',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            bleStack: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'room.telemetry.bleStack',\n                    type: 'number',\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n        },\n    },\n    devices: {\n        _channel: {\n            _id: '',\n            type: 'device',\n            common: {\n                name: 'devices.channel',\n            },\n            native: {},\n        },\n        mac: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.mac',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        id: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.id',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        name: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.name',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        disc: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.disc',\n                type: 'string',\n                role: 'text',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        idType: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.idType',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        'rssi@1m': {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.rssi@1m',\n                type: 'number',\n                role: 'value',\n                unit: 'db',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        rssi: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.rssi',\n                type: 'number',\n                role: 'value',\n                unit: 'db',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        raw: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.raw',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        distance: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.distance',\n                type: 'number',\n                role: 'value',\n                unit: 'm',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        int: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.int',\n                type: 'number',\n                role: 'value',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n        close: {\n            _id: '',\n            type: 'state',\n            common: {\n                name: 'devices.close',\n                type: 'boolean',\n                role: 'indicator',\n                read: true,\n                write: false,\n            },\n            native: {},\n        },\n    },\n    settings: {\n        _channel: {\n            _id: '',\n            type: 'channel',\n            common: {\n                name: 'settings.channel',\n            },\n            native: {},\n        },\n        config: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'settings.config.channel',\n                },\n                native: {},\n            },\n            id: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'settings.config.id',\n                    type: 'string',\n                    role: 'text',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n            name: {\n                _id: '',\n                type: 'state',\n                common: {\n                    name: 'devices.name',\n                    type: 'string',\n                    role: 'text',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            },\n        },\n    },\n};\n\nexport const Defaults = {\n    state: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'No definition',\n\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n};\n\n/******************************* Begin CONFIG Parameter *******************************/\n\n    // DE: liefert bei true detailliertere Meldundgen im Log.\n    // EN: if true, provides more detailed messages in the log.\n    export const Debug: boolean = false;\n\n    /***** 1. Tasmota-Config *****/\n\n    // DE: Anpassen an die Verzeichnisse der MQTT-Adapter-Instanz\n    // EN: Adapt to the MQTT adapter instance directories\n    export const NSPanelReceiveTopic: string = 'mqtt.0.SmartHome.NSPanel_1.tele.RESULT';\n    export const NSPanelSendTopic: string = 'mqtt.0.SmartHome.NSPanel_1.cmnd.CustomSend';\n\n    // DE: nur \u00E4ndern, falls der User im Tasmota vor dem Kompilieren umbenannt wurde (Standard Tasmota: admin)\n    // EN: only change if the user was renamed in Tasmota before compiling (default Tasmota: admin)\n    export const tasmota_web_admin_user: string = 'admin';\n\n    // DE: setzten, falls \"Web Admin Password\" in Tasmota vergeben\n    // EN set if \"Web Admin Password\" is assigned in Tasmota\n    export const tasmota_web_admin_password: string = '';\n\n    // DE: Setzen der bevorzugten Tasmota32-Version (f\u00FCr Updates)\n    // EN: Set preferred Tasmota32 version (for updates)\n    export const tasmotaOtaVersion: string = 'tasmota32-DE.bin';\n    // DE: Es k\u00F6nnen ebenfalls andere Versionen verwendet werden wie zum Beispiel:\n    // EN: Other versions can also be used, such as:\n    // 'tasmota32-nspanel.bin' or 'tasmota32.bin' or 'tasmota32-DE.bin' or etc.\n\n    /***** 2. Directories in 0_userdata.0... *****/\n\n    // DE: Anpassen an das jeweilige NSPanel\n    // EN: Adapt to the respective NSPanel\n    export const NSPanel_Path = '0_userdata.0.NSPanel.1.';\n\n    // DE: Pfad f\u00FCr gemeinsame Nutzung durch mehrere Panels (bei Nutzung der cardAlarm/cardUnlock)\n    // EN: Path for sharing between multiple panels (when using cardAlarm/cardUnlock)\n    export const NSPanel_Alarm_Path = '0_userdata.0.NSPanel.';\n\n    /***** 3. Weather adapter Config *****/\n\n    // DE: M\u00F6gliche Wetteradapter 'accuweather.0.' oder 'daswetter.0.'\n    // EN: Possible weather adapters 'accuweather.0.' or 'the weather.0.'\n    export const weatherAdapterInstance: string = 'accuweather.0.';\n\n    // DE: M\u00F6gliche Werte: 'Min', 'Max' oder 'MinMax' im Screensaver\n    // EN: Possible values: 'Min', 'Max' or 'MinMax' in the screensaver\n    export const weatherScreensaverTempMinMax: string = 'MinMax';\n\n    // DE: Dieser Alias wird automatisch f\u00FCr den gew\u00E4hlten Wetter erstellt und kann entsprechend angepasst werden\n    // EN: This alias is automatically created for the selected weather and can be adjusted accordingly\n    export const weatherEntityPath: string = 'alias.0.Wetter';\n\n    /***** 4. Color constants for use in the PageItems *****/\n\n    // DE: Bei Bedarf k\u00F6nnen weitere Farben definiert werden\n    // EN: If necessary, additional colors can be defined\n    export const HMIOff: RGB = { red: 68, green: 115, blue: 158 }; // Blue-Off - Original Entity Off\n    export const HMIOn: RGB = { red: 3, green: 169, blue: 244 }; // Blue-On\n    export const HMIDark: RGB = { red: 29, green: 29, blue: 29 }; // Original Background Color\n    export const Off: RGB = { red: 253, green: 128, blue: 0 }; // Orange-Off - nicer color transitions\n    export const On: RGB = { red: 253, green: 216, blue: 53 };\n    export const MSRed: RGB = { red: 251, green: 105, blue: 98 };\n    export const MSYellow: RGB = { red: 255, green: 235, blue: 156 };\n    export const MSGreen: RGB = { red: 121, green: 222, blue: 121 };\n    export const Red: RGB = { red: 255, green: 0, blue: 0 };\n    export const White: RGB = { red: 255, green: 255, blue: 255 };\n    export const Yellow: RGB = { red: 255, green: 255, blue: 0 };\n    export const Green: RGB = { red: 0, green: 255, blue: 0 };\n    export const Blue: RGB = { red: 0, green: 0, blue: 255 };\n    export const DarkBlue: RGB = { red: 0, green: 0, blue: 136 };\n    export const Gray: RGB = { red: 136, green: 136, blue: 136 };\n    export const Black: RGB = { red: 0, green: 0, blue: 0 };\n    export const Cyan: RGB = { red: 0, green: 255, blue: 255 };\n    export const Magenta: RGB = { red: 255, green: 0, blue: 255 };\n    export const colorSpotify: RGB = { red: 30, green: 215, blue: 96 };\n    export const colorAlexa: RGB = { red: 49, green: 196, blue: 243 };\n    export const colorSonos: RGB = { red: 216, green: 161, blue: 88 };\n    export const colorRadio: RGB = { red: 255, green: 127, blue: 0 };\n    export const BatteryFull: RGB = { red: 96, green: 176, blue: 62 };\n    export const BatteryEmpty: RGB = { red: 179, green: 45, blue: 25 };\n\n    //Menu Icon Colors\n    export const Menu: RGB = { red: 150, green: 150, blue: 100 };\n    export const MenuLowInd: RGB = { red: 255, green: 235, blue: 156 };\n    export const MenuHighInd: RGB = { red: 251, green: 105, blue: 98 };\n\n    //Dynamische Indikatoren (Abstufung gr\u00FCn nach gelb nach rot)\n    export const colorScale0: RGB = { red: 99, green: 190, blue: 123 };\n    export const colorScale1: RGB = { red: 129, green: 199, blue: 126 };\n    export const colorScale2: RGB = { red: 161, green: 208, blue: 127 };\n    export const colorScale3: RGB = { red: 129, green: 217, blue: 126 };\n    export const colorScale4: RGB = { red: 222, green: 226, blue: 131 };\n    export const colorScale5: RGB = { red: 254, green: 235, blue: 132 };\n    export const colorScale6: RGB = { red: 255, green: 210, blue: 129 };\n    export const colorScale7: RGB = { red: 251, green: 185, blue: 124 };\n    export const colorScale8: RGB = { red: 251, green: 158, blue: 117 };\n    export const colorScale9: RGB = { red: 248, green: 131, blue: 111 };\n    export const colorScale10: RGB = { red: 248, green: 105, blue: 107 };\n\n    //Screensaver Default Theme Colors\n    export const scbackground: RGB = { red: 0, green: 0, blue: 0 };\n    export const scbackgroundInd1: RGB = { red: 255, green: 0, blue: 0 };\n    export const scbackgroundInd2: RGB = { red: 121, green: 222, blue: 121 };\n    export const scbackgroundInd3: RGB = { red: 255, green: 255, blue: 0 };\n    export const sctime: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctimeAMPM: RGB = { red: 255, green: 255, blue: 255 };\n    export const scdate: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctMainIcon: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctMainText: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast1: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast2: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast3: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast4: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctF1Icon: RGB = { red: 255, green: 235, blue: 156 };\n    export const sctF2Icon: RGB = { red: 255, green: 235, blue: 156 };\n    export const sctF3Icon: RGB = { red: 255, green: 235, blue: 156 };\n    export const sctF4Icon: RGB = { red: 255, green: 235, blue: 156 };\n    export const sctForecast1Val: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast2Val: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast3Val: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctForecast4Val: RGB = { red: 255, green: 255, blue: 255 };\n    export const scbar: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctMainIconAlt: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctMainTextAlt: RGB = { red: 255, green: 255, blue: 255 };\n    export const sctTimeAdd: RGB = { red: 255, green: 255, blue: 255 };\n\n    //Auto-Weather-Colors\n    export const swClearNight: RGB = { red: 150, green: 150, blue: 100 };\n    export const swCloudy: RGB = { red: 75, green: 75, blue: 75 };\n    export const swExceptional: RGB = { red: 255, green: 50, blue: 50 };\n    export const swFog: RGB = { red: 150, green: 150, blue: 150 };\n    export const swHail: RGB = { red: 200, green: 200, blue: 200 };\n    export const swLightning: RGB = { red: 200, green: 200, blue: 0 };\n    export const swLightningRainy: RGB = { red: 200, green: 200, blue: 150 };\n    export const swPartlycloudy: RGB = { red: 150, green: 150, blue: 150 };\n    export const swPouring: RGB = { red: 50, green: 50, blue: 255 };\n    export const swRainy: RGB = { red: 100, green: 100, blue: 255 };\n    export const swSnowy: RGB = { red: 150, green: 150, blue: 150 };\n    export const swSnowyRainy: RGB = { red: 150, green: 150, blue: 255 };\n    export const swSunny: RGB = { red: 255, green: 255, blue: 0 };\n    export const swWindy: RGB = { red: 150, green: 150, blue: 150 };\n\n    /***** 5. Script - Parameters *****/\n\n    // DE: F\u00FCr diese Option muss der Haken in setObjects in deiner javascript.X. Instanz gesetzt sein.\n    // EN: This option requires the check mark in setObjects in your javascript.X. instance must be set.\n    export const autoCreateAlias = true;\n\n    // DE: Verzeichnis f\u00FCr Auto-Aliase (wird per Default aus dem NSPanel-Verzeichnis gebildet und muss nicht ver\u00E4ndert werden)\n    // EN: Directory for auto aliases (is created by default from the NSPanel directory and does not need to be changed)\n    export const AliasPath: string = 'alias.0.' + NSPanel_Path.substring(13, NSPanel_Path.length);\n\n    // DE: Default-Farbe f\u00FCr Off-Zust\u00E4nde\n    // EN: Default color for off states\n    export const defaultOffColorParam: any = Off;\n\n    // DE: Default-Farbe f\u00FCr On-Zust\u00E4nde\n    // EN: Default color for on states\n    export const defaultOnColorParam: any = On;\n\n    export const defaultColorParam: any = Off;\n\n    // DE: Default-Hintergrundfarbe HMIDark oder Black\n    // EN: Default background color HMIDark or Black\n    export const defaultBackgroundColorParam: any = HMIDark;\n\n    /******************************** End CONFIG Parameter ********************************/\n\n    //-- Anfang f\u00FCr eigene Seiten -- z.T. selbstdefinierte Aliase erforderlich ----------------\n    //-- Start for your own pages -- some self-defined aliases required ----------------\n\n    //-- https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Page-%E2%80%90-Typen_How-2_Beispiele\n\n    //-- ENDE f\u00FCr eigene Seiten -- z.T. selbstdefinierte Aliase erforderlich -------------------------\n    //-- END for your own pages -- some self-defined aliases required ------------------------\n\n    /***********************************************************************************************\n     **  Service Pages mit Auto-Alias (Nachfolgende Seiten werden mit Alias automatisch angelegt) **\n     **  https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Service-Men%C3%BC             **\n     ***********************************************************************************************/\n\n    /* DE: German\n       Wenn das Service Men\u00FC abgesichert werden soll, kann eine cardUnlock vorgeschaltet werden.\n       F\u00FCr diesen Fall ist folgende Vorgehensweise erforderlich:\n       - cardUnlock Seite \"Unlock_Service\" in der Config unter pages auskommentieren (\"//\" entfernen)\n       - Servicemen\u00FC aus pages \"NSPanel_Service\" unter pages kommentieren (\"//\" hinzuf\u00FCgen)\n    */\n\n    /*************************************************************************************************\n     ** Service pages with auto alias (subsequent pages are automatically created with alias)      **\n     ** https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Service-Men%C3%BC               **\n     ************************************************************************************************/\n\n    /* EN: English\n        If the service menu needs to be secured, a cardUnlock can be installed upstream.\n        In this case, the following procedure is required:\n        - comment out cardUnlock page \"Unlock_Service\" in the config under pages (remove \"//\")\n        - Comment service menu from pages \"NSPanel_Service\" under pages (add \"//\")\n    */\n\n    //Level 0 (if service pages are used with cardUnlock)\n    export const Unlock_Service: PageType = {\n        type: 'cardUnlock',\n        heading: findLocaleServMenu('service_pages'),\n        useColor: true,\n        items: [\n            /*PageItem*/ {\n                id: 'alias.0.NSPanel.Unlock',\n                targetPage: 'NSPanel_Service_SubPage',\n                autoCreateALias: true,\n            },\n        ],\n    };\n\n    //Level_0 (if service pages are used without cardUnlock)\n    export const NSPanel_Service: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('service_menu'),\n        useColor: true,\n        items: [\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Infos',\n                icon: 'information-outline',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('infos'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Einstellungen',\n                icon: 'monitor-edit',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('settings'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Firmware',\n                icon: 'update',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('firmware'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.rebootNSPanel',\n                name: findLocaleServMenu('reboot'),\n                icon: 'refresh',\n                offColor: MSRed,\n                onColor: MSGreen,\n                buttonText: findLocaleServMenu('start'),\n            },\n        ],\n    };\n\n    //Level_0 (if service pages are used with cardUnlock)\n    export const NSPanel_Service_SubPage: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('service_menu'),\n        useColor: true,\n        subPage: true,\n        parent: Unlock_Service,\n        home: 'Unlock_Service',\n        items: [\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Infos',\n                icon: 'information-outline',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('infos'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Einstellungen',\n                icon: 'monitor-edit',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('settings'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Firmware',\n                icon: 'update',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('firmware'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.rebootNSPanel',\n                name: findLocaleServMenu('reboot'),\n                icon: 'refresh',\n                offColor: MSRed,\n                onColor: MSGreen,\n                buttonText: findLocaleServMenu('start'),\n            },\n        ],\n    };\n\n    //Level_1\n    export const NSPanel_Infos: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('nspanel_infos'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Service,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Wifi_Info_1',\n                icon: 'wifi',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('wifi'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Sensoren',\n                icon: 'memory',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('sensors_hardware'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_IoBroker',\n                icon: 'information-outline',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('info_iobroker'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Update.UpdateMessage',\n                name: findLocaleServMenu('update_message'),\n                icon: 'message-alert-outline',\n                offColor: HMIOff,\n                onColor: MSGreen,\n            },\n        ],\n    };\n    //Level_2\n    export const NSPanel_Wifi_Info_1: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('nspanel_wifi1'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Infos,\n        next: 'NSPanel_Wifi_Info_2',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'ipAddress',\n                name: findLocaleServMenu('ip_address'),\n                icon: 'ip-network-outline',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.BSSId',\n                name: findLocaleServMenu('mac_address'),\n                icon: 'check-network',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.RSSI',\n                name: findLocaleServMenu('rssi'),\n                icon: 'signal',\n                unit: '%',\n                colorScale: { val_min: 100, val_max: 0 },\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.Signal',\n                name: findLocaleServMenu('wifi_signal'),\n                icon: 'signal-distance-variant',\n                unit: 'dBm',\n                colorScale: { val_min: 0, val_max: -100 },\n            },\n        ],\n    };\n\n    export const NSPanel_Wifi_Info_2: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('nspanel_wifi2'),\n        useColor: true,\n        subPage: true,\n        prev: 'NSPanel_Wifi_Info_1',\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.SSId',\n                name: findLocaleServMenu('ssid'),\n                icon: 'signal-distance-variant',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.Mode',\n                name: findLocaleServMenu('mode'),\n                icon: 'signal-distance-variant',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.Channel',\n                name: findLocaleServMenu('channel'),\n                icon: 'timeline-clock-outline',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Wifi.AP',\n                name: findLocaleServMenu('accesspoint'),\n                icon: 'router-wireless-settings',\n                offColor: Menu,\n                onColor: Menu,\n            },\n        ],\n    };\n\n    export const NSPanel_Sensoren: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('sensors1'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Infos,\n        next: 'NSPanel_Hardware',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Sensor.ANALOG.Temperature',\n                name: findLocaleServMenu('room_temperature'),\n                icon: 'home-thermometer-outline',\n                unit: '\u00B0C',\n                colorScale: { val_min: 0, val_max: 40, val_best: 22 },\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Sensor.ESP32.Temperature',\n                name: findLocaleServMenu('esp_temperature'),\n                icon: 'thermometer',\n                unit: '\u00B0C',\n                colorScale: { val_min: 0, val_max: 100, val_best: 50 },\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Sensor.TempUnit',\n                name: findLocaleServMenu('temperature_unit'),\n                icon: 'temperature-celsius',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Sensor.Time',\n                name: findLocaleServMenu('refresh'),\n                icon: 'clock-check-outline',\n                offColor: Menu,\n                onColor: Menu,\n            },\n        ],\n    };\n\n    export const NSPanel_Hardware: PageEntities = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('hardware2'),\n        useColor: true,\n        subPage: true,\n        prev: 'NSPanel_Sensoren',\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Product',\n                name: findLocaleServMenu('product'),\n                icon: 'devices',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Hardware',\n                name: findLocaleServMenu('esp32_hardware'),\n                icon: 'memory',\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Display.Model',\n                name: findLocaleServMenu('nspanel_version'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Uptime',\n                name: findLocaleServMenu('operating_time'),\n                icon: 'timeline-clock-outline',\n                offColor: Menu,\n                onColor: Menu,\n            },\n        ],\n    };\n\n    export const NSPanel_IoBroker: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('info_iobroker'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Infos,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'IoBroker.ScriptVersion',\n                name: findLocaleServMenu('script_version_nspanelts'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'IoBroker.NodeJSVersion',\n                name: findLocaleServMenu('nodejs_version'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'IoBroker.JavaScriptVersion',\n                name: findLocaleServMenu('instance_javascript'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'IoBroker.ScriptName',\n                name: findLocaleServMenu('scriptname'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n        ],\n    };\n\n    //Level_1\n    export const NSPanel_Einstellungen: PageType = {\n        type: 'cardGrid',\n        heading: findLocaleServMenu('settings'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Service,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Screensaver',\n                icon: 'monitor-dashboard',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('screensaver'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Relays',\n                icon: 'electric-switch',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('relays'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.temperatureUnitNumber',\n                icon: 'gesture-double-tap',\n                name: findLocaleServMenu('temp_unit'),\n                offColor: Menu,\n                onColor: Menu,\n                modeList: ['\u00B0C', '\u00B0F', 'K'],\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.localeNumber',\n                icon: 'select-place',\n                name: findLocaleServMenu('language'),\n                offColor: Menu,\n                onColor: Menu,\n                modeList: [\n                    'en-US',\n                    'de-DE',\n                    'nl-NL',\n                    'da-DK',\n                    'es-ES',\n                    'fr-FR',\n                    'it-IT',\n                    'ru-RU',\n                    'nb-NO',\n                    'nn-NO',\n                    'pl-PL',\n                    'pt-PT',\n                    'af-ZA',\n                    'ar-SY',\n                    'bg-BG',\n                    'ca-ES',\n                    'cs-CZ',\n                    'el-GR',\n                    'et-EE',\n                    'fa-IR',\n                    'fi-FI',\n                    'he-IL',\n                    'hr-xx',\n                    'hu-HU',\n                    'hy-AM',\n                    'id-ID',\n                    'is-IS',\n                    'lb-xx',\n                    'lt-LT',\n                    'ro-RO',\n                    'sk-SK',\n                    'sl-SI',\n                    'sv-SE',\n                    'th-TH',\n                    'tr-TR',\n                    'uk-UA',\n                    'vi-VN',\n                    'zh-CN',\n                    'zh-TW',\n                ],\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_Script',\n                icon: 'code-json',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('script'),\n                buttonText: findLocaleServMenu('more'),\n            },\n        ],\n    };\n\n    //Level_2\n    export const NSPanel_Screensaver: PageType = {\n        type: 'cardGrid',\n        heading: findLocaleServMenu('screensaver'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Einstellungen,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_ScreensaverDimmode',\n                icon: 'sun-clock',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('dimmode'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_ScreensaverBrightness',\n                icon: 'brightness-5',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('brightness'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_ScreensaverLayout',\n                icon: 'page-next-outline',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('layout'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_ScreensaverWeather',\n                icon: 'weather-partly-rainy',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('weather'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_ScreensaverDateformat',\n                icon: 'calendar-expand-horizontal',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('date_format'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_ScreensaverIndicators',\n                icon: 'monitor-edit',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('indicators'),\n            },\n        ],\n    };\n\n    //Level_3\n    export const NSPanel_ScreensaverDimmode: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('dimmode'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Screensaver,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Dimmode.brightnessDay',\n                name: findLocaleServMenu('brightness_day'),\n                icon: 'brightness-5',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 5,\n                maxValue: 10,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Dimmode.brightnessNight',\n                name: findLocaleServMenu('brightness_night'),\n                icon: 'brightness-4',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 0,\n                maxValue: 4,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Dimmode.hourDay',\n                name: findLocaleServMenu('hour_day'),\n                icon: 'sun-clock',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 0,\n                maxValue: 23,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Dimmode.hourNight',\n                name: findLocaleServMenu('hour_night'),\n                icon: 'sun-clock-outline',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 0,\n                maxValue: 23,\n            },\n        ],\n    };\n\n    //Level_3\n    export const NSPanel_ScreensaverBrightness: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('brightness'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Screensaver,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'ScreensaverInfo.activeBrightness',\n                name: findLocaleServMenu('brightness_activ'),\n                icon: 'brightness-5',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 20,\n                maxValue: 100,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Screensaver.timeoutScreensaver',\n                name: findLocaleServMenu('screensaver_timeout'),\n                icon: 'clock-end',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 0,\n                maxValue: 60,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Screensaver.screenSaverDoubleClick',\n                name: findLocaleServMenu('wakeup_doublecklick'),\n                icon: 'gesture-two-double-tap',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_3\n    export const NSPanel_ScreensaverLayout: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('layout'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Screensaver,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Screensaver.alternativeScreensaverLayout',\n                name: findLocaleServMenu('alternative_layout'),\n                icon: 'page-previous-outline',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Screensaver.ScreensaverAdvanced',\n                name: findLocaleServMenu('advanced_layout'),\n                icon: 'page-next-outline',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_3\n    export const NSPanel_ScreensaverWeather: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('weather_parameters'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Screensaver,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'ScreensaverInfo.weatherForecast',\n                name: findLocaleServMenu('weather_forecast_offon'),\n                icon: 'weather-sunny-off',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'ScreensaverInfo.weatherForecastTimer',\n                name: findLocaleServMenu('weather_forecast_change_switch'),\n                icon: 'devices',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'ScreensaverInfo.entityChangeTime',\n                name: findLocaleServMenu('weather_forecast_change_time'),\n                icon: 'cog-sync',\n                offColor: Menu,\n                onColor: Menu,\n                minValue: 15,\n                maxValue: 60,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Screensaver.autoWeatherColorScreensaverLayout',\n                name: findLocaleServMenu('weather_forecast_icon_colors'),\n                icon: 'format-color-fill',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_3\n    export const NSPanel_ScreensaverDateformat: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('date_format'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Screensaver,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Dateformat.Switch.weekday',\n                name: findLocaleServMenu('weekday_large'),\n                icon: 'calendar-expand-horizontal',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Dateformat.Switch.month',\n                name: findLocaleServMenu('month_large'),\n                icon: 'calendar-expand-horizontal',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_3\n    export const NSPanel_ScreensaverIndicators: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('indicators'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Screensaver,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Config.MRIcons.alternateMRIconSize.1',\n                name: findLocaleServMenu('mr_icon1_size'),\n                icon: 'format-size',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.MRIcons.alternateMRIconSize.2',\n                name: findLocaleServMenu('mr_icon2_size'),\n                icon: 'format-size',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_2\n    export const NSPanel_Relays: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('relays'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Einstellungen,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Relay.1',\n                name: findLocaleServMenu('relay1_onoff'),\n                icon: 'power',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Relay.2',\n                name: findLocaleServMenu('relay2_onoff'),\n                icon: 'power',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_2\n    export const NSPanel_Script: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('script'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Einstellungen,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Config.ScripgtDebugStatus',\n                name: findLocaleServMenu('debugmode_offon'),\n                icon: 'code-tags-check',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.MQTT.portCheck',\n                name: findLocaleServMenu('port_check_offon'),\n                icon: 'check-network',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n        ],\n    };\n\n    //Level_1\n    export const NSPanel_Firmware: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('firmware'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Service,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'autoUpdate',\n                name: findLocaleServMenu('automatically_updates'),\n                icon: 'power',\n                offColor: HMIOff,\n                onColor: HMIOn,\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_FirmwareTasmota',\n                icon: 'usb-flash-drive',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('tasmota_firmware'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_FirmwareBerry',\n                icon: 'usb-flash-drive',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('berry_driver'),\n                buttonText: findLocaleServMenu('more'),\n            },\n            /*PageItem*/ {\n                navigate: true,\n                id: 'NSPanel_FirmwareNextion',\n                icon: 'cellphone-cog',\n                offColor: Menu,\n                onColor: Menu,\n                name: findLocaleServMenu('nextion_tft_firmware'),\n                buttonText: findLocaleServMenu('more'),\n            },\n        ],\n    };\n\n    export const NSPanel_FirmwareTasmota: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('tasmota'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Firmware,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota.Version',\n                name: findLocaleServMenu('installed_release'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Tasmota_Firmware.onlineVersion',\n                name: findLocaleServMenu('available_release'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ { id: 'Divider' },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Update.UpdateTasmota',\n                name: findLocaleServMenu('update_tasmota'),\n                icon: 'refresh',\n                offColor: HMIOff,\n                onColor: MSGreen,\n                buttonText: findLocaleServMenu('start'),\n            },\n        ],\n    };\n\n    export const NSPanel_FirmwareBerry: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('berry_driver'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Firmware,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Display.BerryDriver',\n                name: findLocaleServMenu('installed_release'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Berry_Driver.onlineVersion',\n                name: findLocaleServMenu('available_release'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ { id: 'Divider' },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Update.UpdateBerry',\n                name: findLocaleServMenu('update_berry_driver'),\n                icon: 'refresh',\n                offColor: HMIOff,\n                onColor: MSGreen,\n                buttonText: findLocaleServMenu('start'),\n            },\n        ],\n    };\n\n    export const NSPanel_FirmwareNextion: PageType = {\n        type: 'cardEntities',\n        heading: findLocaleServMenu('nextion_tft'),\n        useColor: true,\n        subPage: true,\n        parent: NSPanel_Firmware,\n        home: 'NSPanel_Service',\n        items: [\n            /*PageItem*/ {\n                id: AliasPath + 'Display_Firmware.TFT.currentVersion',\n                name: findLocaleServMenu('installed_release'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Display_Firmware.TFT.desiredVersion',\n                name: findLocaleServMenu('desired_release'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Display.Model',\n                name: findLocaleServMenu('nspanel_model'),\n                offColor: Menu,\n                onColor: Menu,\n            },\n            /*PageItem*/ {\n                id: AliasPath + 'Config.Update.UpdateNextion',\n                name: 'Nextion TFT Update',\n                icon: 'refresh',\n                offColor: HMIOff,\n                onColor: MSGreen,\n                buttonText: findLocaleServMenu('start'),\n            },\n        ],\n    };\n\n    // End of Service Pages\n\n    /***********************************************************************\n     **                                                                   **\n     **                           Configuration                           **\n     **                                                                   **\n     ***********************************************************************/\n\n    export const config: Config = {\n        // Seiteneinteilung / Page division\n        // Hauptseiten / Mainpages\n        pages: [\n            NSPanel_Service, //Auto-Alias Service Page\n            //Unlock_Service            //Auto-Alias Service Page (Service Pages used with cardUnlock)\n        ],\n        // Unterseiten / Subpages\n        subPages: [\n            NSPanel_Service_SubPage, //Auto-Alias Service Page (only used with cardUnlock)\n            NSPanel_Infos, //Auto-Alias Service Page\n            NSPanel_Wifi_Info_1, //Auto-Alias Service Page\n            NSPanel_Wifi_Info_2, //Auto-Alias Service Page\n            NSPanel_Sensoren, //Auto-Alias Service Page\n            NSPanel_Hardware, //Auto-Alias Service Page\n            NSPanel_IoBroker, //Auot-Alias Service Page\n            NSPanel_Einstellungen, //Auto-Alias Service Page\n            NSPanel_Screensaver, //Auto-Alias Service Page\n            NSPanel_ScreensaverDimmode, //Auto-Alias Service Page\n            NSPanel_ScreensaverBrightness, //Auto-Alias Service Page\n            NSPanel_ScreensaverLayout, //Auto-Alias Service Page\n            NSPanel_ScreensaverWeather, //Auto-Alias Service Page\n            NSPanel_ScreensaverDateformat, //Auto-Alias Service Page\n            NSPanel_ScreensaverIndicators, //Auto-Alias Service Page\n            NSPanel_Relays, //Auto-Alias Service Page\n            NSPanel_Script, //Auto-Alias Service Page\n            NSPanel_Firmware, //Auto-Alias Service Page\n            NSPanel_FirmwareTasmota, //Auto-Alias Service Page\n            NSPanel_FirmwareBerry, //Auto-Alias Service Page\n            NSPanel_FirmwareNextion, //Auto-Alias Service Page\n        ],\n\n        /***********************************************************************\n         **                                                                   **\n         **                    Screensaver Configuration                      **\n         **                                                                   **\n         ***********************************************************************/\n        leftScreensaverEntity: [\n            // Examples for Advanced-Screensaver: https://github.com/joBr99/nspanel-lovelace-ui/wiki/ioBroker-Config-Screensaver#entity-status-icons-ab-v400\n        ],\n\n        bottomScreensaverEntity: [\n            // bottomScreensaverEntity 1\n            {\n                ScreensaverEntity: 'accuweather.0.Daily.Day1.Sunrise',\n                ScreensaverEntityFactor: 1,\n                ScreensaverEntityDecimalPlaces: 0,\n                ScreensaverEntityDateFormat: { hour: '2-digit', minute: '2-digit' }, // Description at Wiki-Pages\n                ScreensaverEntityIconOn: 'weather-sunset-up',\n                ScreensaverEntityIconOff: null,\n                ScreensaverEntityText: 'Sonne',\n                ScreensaverEntityUnitText: '%',\n                ScreensaverEntityIconColor: MSYellow, //{'val_min': 0, 'val_max': 100}\n            },\n            // bottomScreensaverEntity 2\n            {\n                ScreensaverEntity: 'accuweather.0.Current.WindSpeed',\n                ScreensaverEntityFactor: 1000 / 3600,\n                ScreensaverEntityDecimalPlaces: 1,\n                ScreensaverEntityIconOn: 'weather-windy',\n                ScreensaverEntityIconOff: null,\n                ScreensaverEntityText: 'Wind',\n                ScreensaverEntityUnitText: 'm/s',\n                ScreensaverEntityIconColor: { val_min: 0, val_max: 120 },\n            },\n            // bottomScreensaverEntity 3\n            {\n                ScreensaverEntity: 'accuweather.0.Current.WindGust',\n                ScreensaverEntityFactor: 1000 / 3600,\n                ScreensaverEntityDecimalPlaces: 1,\n                ScreensaverEntityIconOn: 'weather-tornado',\n                ScreensaverEntityIconOff: null,\n                ScreensaverEntityText: 'B\u00F6en',\n                ScreensaverEntityUnitText: 'm/s',\n                ScreensaverEntityIconColor: { val_min: 0, val_max: 120 },\n            },\n            // bottomScreensaverEntity 4\n            {\n                ScreensaverEntity: 'accuweather.0.Current.WindDirectionText',\n                ScreensaverEntityFactor: 1,\n                ScreensaverEntityDecimalPlaces: 0,\n                ScreensaverEntityIconOn: 'windsock',\n                ScreensaverEntityIconOff: null,\n                ScreensaverEntityText: 'Windr.',\n                ScreensaverEntityUnitText: '\u00B0',\n                ScreensaverEntityIconColor: White,\n            },\n            // bottomScreensaverEntity 5 (for Alternative and Advanced Screensaver)\n            {\n                ScreensaverEntity: 'accuweather.0.Current.RelativeHumidity',\n                ScreensaverEntityFactor: 1,\n                ScreensaverEntityDecimalPlaces: 1,\n                ScreensaverEntityIconOn: 'water-percent',\n                ScreensaverEntityIconOff: null,\n                ScreensaverEntityText: 'Feuchte',\n                ScreensaverEntityUnitText: '%',\n                ScreensaverEntityIconColor: { val_min: 0, val_max: 100, val_best: 65 },\n            },\n            // bottomScreensaverEntity 6 (for Advanced Screensaver)\n            {\n                ScreensaverEntity: NSPanel_Path + 'Relay.1',\n                ScreensaverEntityIconOn: 'coach-lamp-variant',\n                ScreensaverEntityText: 'Street',\n                ScreensaverEntityOnColor: Yellow,\n                ScreensaverEntityOffColor: White,\n                ScreensaverEntityOnText: 'Is ON',\n                ScreensaverEntityOffText: 'Not ON',\n            },\n            // Examples for Advanced-Screensaver: https://github.com/joBr99/nspanel-lovelace-ui/wiki/ioBroker-Config-Screensaver#entity-status-icons-ab-v400\n        ],\n\n        indicatorScreensaverEntity: [\n            // Examples for Advanced-Screensaver: https://github.com/joBr99/nspanel-lovelace-ui/wiki/ioBroker-Config-Screensaver#entity-status-icons-ab-v400\n        ],\n\n        // Status Icon\n        mrIcon1ScreensaverEntity: {\n            ScreensaverEntity: NSPanel_Path + 'Relay.1',\n            ScreensaverEntityIconOn: 'lightbulb',\n            ScreensaverEntityIconOff: null,\n            ScreensaverEntityValue: null,\n            ScreensaverEntityValueDecimalPlace: 0,\n            ScreensaverEntityValueUnit: null,\n            ScreensaverEntityOnColor: On,\n            ScreensaverEntityOffColor: HMIOff,\n        },\n        mrIcon2ScreensaverEntity: {\n            ScreensaverEntity: NSPanel_Path + 'Relay.2',\n            ScreensaverEntityIconOn: 'lightbulb',\n            ScreensaverEntityIconOff: null,\n            ScreensaverEntityValue: null,\n            ScreensaverEntityValueDecimalPlace: 0,\n            ScreensaverEntityValueUnit: null,\n            ScreensaverEntityOnColor: On,\n            ScreensaverEntityOffColor: HMIOff,\n        },\n        // ------ DE: Ende der Screensaver Einstellungen --------------------\n        // ------ EN: End of screensaver settings ---------------------------\n        //-------DE: Anfang Einstellungen f\u00FCr Hardware Button, wenn Sie softwareseitig genutzt werden (Rule2) -------------\n        //-------EN: Start Settings for Hardware Button, if used in software (Rule2) --------------------------------------\n        // DE: Konfiguration des linken Schalters des NSPanels\n        // EN: Configuration of the left switch of the NSPanel\n        button1: {\n            // DE: M\u00F6gliche Werte wenn Rule2 definiert: 'page', 'toggle', 'set' - Wenn nicht definiert --> mode: null\n            // EN: Possible values if Rule2 defined: 'page', 'toggle', 'set' - If not defined --> mode: null\n            mode: null,\n            // DE: Zielpage - Verwendet wenn mode = page\n            // EN: Target page - Used if mode = page\n            page: null,\n            // DE: Zielentity - Verwendet wenn mode = set oder toggle\n            // EN: Target entity - Used if mode = set or toggle\n            entity: null,\n            // DE: Zielwert - Verwendet wenn mode = set\n            // EN: Target value - Used if mode = set\n            setValue: null,\n        },\n\n        // DE: Konfiguration des rechten Schalters des NSPanels\n        // EN: Configuration of the right switch of the NSPanel\n        button2: {\n            mode: null,\n            page: null,\n            entity: null,\n            setValue: null,\n        },\n        //--------- DE: Ende - Einstellungen f\u00FCr Hardware Button, wenn Sie softwareseitig genutzt werden (Rule2) -------------\n        //--------- EN: End - settings for hardware button if they are used in software (Rule2) ------------------------------\n        // DE: WICHTIG !! Parameter nicht \u00E4ndern  WICHTIG!!\n        // EN: IMPORTANT !! Do not change parameters IMPORTANT!!\n        panelRecvTopic: NSPanelReceiveTopic,\n        panelSendTopic: NSPanelSendTopic,\n        weatherEntity: weatherEntityPath,\n        defaultOffColor: defaultOffColorParam,\n        defaultOnColor: defaultOnColorParam,\n        defaultColor: defaultColorParam,\n        defaultBackgroundColor: defaultBackgroundColorParam,\n    };\n\n    // _________________________________ DE: Ab hier keine Konfiguration mehr _____________________________________\n    // _________________________________ EN:  No more configuration from here _____________________________________\n\n    export const scriptVersion: string = 'v4.3.3.33';\n    export const tft_version: string = 'v4.3.3';\n    export const desired_display_firmware_version = 53;\n    export const berry_driver_version = 9;\n\n    export const tasmotaOtaUrl: string = 'http://ota.tasmota.com/tasmota32/release/';"],
  "mappings": "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",
  "names": []
}
