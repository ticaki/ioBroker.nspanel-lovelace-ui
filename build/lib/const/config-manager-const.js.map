{
  "version": 3,
  "sources": ["../../../src/lib/const/config-manager-const.ts"],
  "sourcesContent": ["import type { NspanelLovelaceUi } from '../types/NspanelLovelaceUi';\nimport { arrayOfAll, type StateRole } from '../types/pages';\nimport type { ConfigButtonFunction, DataItemsOptions } from '../types/types';\n\nexport const CustomTemplates: ConfigManager.CustomTemplate[] = [\n    {\n        device: 'shutter',\n        states: [\n            { 'button.open.blind': true },\n            { 'button.close.blind': true },\n            { 'button.open.tilt': true },\n            { 'button.close.tilt': true },\n            { 'button.stop.tilt': true },\n            { 'button.stop.blind': true },\n            { 'level.blind': true },\n        ],\n    },\n];\n\nexport function isButton(F: any): F is ConfigButtonFunction {\n    if (F === undefined) {\n        return false;\n    }\n    if (F === null) {\n        return true;\n    }\n\n    return (\n        'mode' in F &&\n        ((F.mode === 'page' && F.page) || ('state' in F && (F.mode === 'switch' || F.mode === 'button') && F.state))\n    );\n}\n\n/**\n * Wenn ein State angelegt wird muss gleich ein Namen f\u00FCr das der Device und das Device selbst angegeben werden.\n * Die Seite auf der das Device angezeigt wird, sollte in einem Pick oder wie das hei\u00DFt angegeben werden,\n * Ich denke nicht das ich dort schon bekannte Seiten angeben kann, die anzeigbaren DAten im Custom sind\n * statisch und das pick hat kein sendto. Die Seiten m\u00FCsste man jedoch nur einmal in einem State f\u00FCr ein Device angeben.\n * Also brauche ich an der stelle ein sendToSelect das manuelle eingaben erlaubt. mal testen\n */\n\nexport function isConfig(F: any, adapter: NspanelLovelaceUi): F is ScriptConfig.Config {\n    if (F === undefined) {\n        return false;\n    }\n    const requiredFields: (keyof ScriptConfig.Config)[] = [\n        'panelTopic',\n        'weatherEntity',\n        'defaultOnColor',\n        'defaultOffColor',\n        'defaultBackgroundColor',\n        'pages',\n        'subPages',\n        'buttonLeft',\n        'buttonRight',\n        'bottomScreensaverEntity',\n        'favoritScreensaverEntity',\n        'alternateScreensaverEntity',\n        'leftScreensaverEntity',\n        'indicatorScreensaverEntity',\n        'mrIcon1ScreensaverEntity',\n        'mrIcon2ScreensaverEntity',\n    ];\n\n    for (const field of requiredFields) {\n        if (F[field] === undefined) {\n            adapter.log.warn(`Required field '${field}' is missing in config - Aborting for this panel`);\n            return false;\n        }\n    }\n    return true;\n}\n\nexport const arrayOfAllConfigRequiredFields = arrayOfAll<keyof ScriptConfig.Config>();\n\nexport const defaultConfig: ScriptConfig.Config = {\n    version: '0',\n    panelTopic: '',\n    weatherEntity: '',\n    bottomScreensaverEntity: [],\n    favoritScreensaverEntity: [],\n    alternateScreensaverEntity: [],\n    defaultOnColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    defaultOffColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    defaultBackgroundColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    pages: [],\n    subPages: [],\n    buttonLeft: null,\n    buttonRight: null,\n    leftScreensaverEntity: [],\n    indicatorScreensaverEntity: [],\n    mrIcon1ScreensaverEntity: {\n        type: 'script',\n        ScreensaverEntity: null,\n        ScreensaverEntityIconOn: null,\n        ScreensaverEntityIconSelect: undefined,\n        ScreensaverEntityIconOff: null,\n        ScreensaverEntityValue: null,\n        ScreensaverEntityValueDecimalPlace: null,\n        ScreensaverEntityValueUnit: null,\n        ScreensaverEntityOnColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n        ScreensaverEntityOffColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n    },\n    mrIcon2ScreensaverEntity: {\n        type: 'script',\n        ScreensaverEntity: null,\n        ScreensaverEntityIconOn: null,\n        ScreensaverEntityIconSelect: undefined,\n        ScreensaverEntityIconOff: null,\n        ScreensaverEntityValue: null,\n        ScreensaverEntityValueDecimalPlace: null,\n        ScreensaverEntityValueUnit: null,\n        ScreensaverEntityOnColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n        ScreensaverEntityOffColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n    },\n};\n\nexport type checkedDatapoints = {\n    [key: string]: checkedDatapointsUnion;\n};\nexport type checkedDatapointsUnion = { role: ScriptConfig.channelRoles } & (\n    | { role: 'motion'; data: { ACTUAL: DataItemsOptions | undefined } }\n    | {\n          role: 'dimmer';\n          data: {\n              SET: DataItemsOptions | undefined;\n              ACTUAL: DataItemsOptions | undefined;\n              ON_SET: DataItemsOptions | undefined;\n              ON_ACTUAL: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'ct';\n          data: {\n              DIMMER: DataItemsOptions | undefined;\n              ON: DataItemsOptions | undefined;\n              ON_ACTUAL: DataItemsOptions | undefined;\n              TEMPERATURE: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'window';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              COLORDEC: DataItemsOptions | undefined;\n              BUTTONTEXT: DataItemsOptions | undefined;\n          };\n      }\n    | { role: 'humidity'; data: { ACTUAL: DataItemsOptions | undefined } }\n    | {\n          role: 'hue';\n          data: {\n              DIMMER: DataItemsOptions | undefined;\n              ON: DataItemsOptions | undefined;\n              ON_ACTUAL: DataItemsOptions | undefined;\n              TEMPERATURE: DataItemsOptions | undefined;\n              HUE: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'info';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              COLORDEC: DataItemsOptions | undefined;\n              BUTTONTEXT: DataItemsOptions | undefined;\n              USERICON: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'blind';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              CLOSE: DataItemsOptions | undefined;\n              OPEN: DataItemsOptions | undefined;\n              STOP: DataItemsOptions | undefined;\n              TILT_ACTUAL: DataItemsOptions | undefined;\n              TILT_SET: DataItemsOptions | undefined;\n              TILT_CLOSE: DataItemsOptions | undefined;\n              TILT_OPEN: DataItemsOptions | undefined;\n              TILT_STOP: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'airCondition';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              SET2: DataItemsOptions | undefined;\n              AUTO: DataItemsOptions | undefined;\n              COOL: DataItemsOptions | undefined;\n              BOOST: DataItemsOptions | undefined;\n              ERROR: DataItemsOptions | undefined;\n              HEAT: DataItemsOptions | undefined;\n              HUMIDITY: DataItemsOptions | undefined;\n              MAINTAIN: DataItemsOptions | undefined;\n              MODE: DataItemsOptions | undefined;\n              OFF: DataItemsOptions | undefined;\n              POWER: DataItemsOptions | undefined;\n              SPEED: DataItemsOptions | undefined;\n              SWING: DataItemsOptions | undefined;\n              UNREACH: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'socket';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              COLORDEC: DataItemsOptions | undefined;\n              BUTTONTEXT: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'light';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              COLORDEC: DataItemsOptions | undefined;\n              BUTTONTEXT: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'volume';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              MUTE: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'rgb';\n          data: {\n              RED: DataItemsOptions | undefined;\n              GREEN: DataItemsOptions | undefined;\n              BLUE: DataItemsOptions | undefined;\n              ON_ACTUAL: DataItemsOptions | undefined;\n              ON: DataItemsOptions | undefined;\n              DIMMER: DataItemsOptions | undefined;\n              TEMPERATURE: DataItemsOptions | undefined;\n              WHITE: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'rgbSingle';\n          data: {\n              RGB: DataItemsOptions | undefined;\n              ON: DataItemsOptions | undefined;\n              DIMMER: DataItemsOptions | undefined;\n              TEMPERATURE: DataItemsOptions | undefined;\n              ON_ACTUAL: DataItemsOptions | undefined;\n          };\n      }\n    | { role: 'slider'; data: { SET: DataItemsOptions | undefined; ACTUAL: DataItemsOptions | undefined } }\n    | { role: 'button'; data: { SET: DataItemsOptions | undefined } }\n    | { role: 'buttonSensor'; data: { ACTUAL: DataItemsOptions | undefined } }\n    | { role: 'temperature'; data: { ACTUAL: DataItemsOptions | undefined } }\n    | {\n          role: 'value.temperature';\n          data: { ACTUAL: DataItemsOptions | undefined; USERICON: DataItemsOptions | undefined };\n      }\n    | {\n          role: 'thermostat';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              MODE: DataItemsOptions | undefined;\n              BOOST: DataItemsOptions | undefined;\n              AUTOMATIC: DataItemsOptions | undefined;\n              ERROR: DataItemsOptions | undefined;\n              LOWBAT: DataItemsOptions | undefined;\n              MANUAL: DataItemsOptions | undefined;\n              UNREACH: DataItemsOptions | undefined;\n              HUMIDITY: DataItemsOptions | undefined;\n              MAINTAIN: DataItemsOptions | undefined;\n              PARTY: DataItemsOptions | undefined;\n              POWER: DataItemsOptions | undefined;\n              VACATION: DataItemsOptions | undefined;\n              WINDOWOPEN: DataItemsOptions | undefined;\n              WORKING: DataItemsOptions | undefined;\n              USERICON: DataItemsOptions | undefined;\n          };\n      }\n    | { role: 'level.timer'; data: { ACTUAL: DataItemsOptions | undefined; STATE: DataItemsOptions | undefined } }\n    | { role: 'gate'; data: { ACTUAL: DataItemsOptions | undefined } }\n    | {\n          role: 'door';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              COLORDEC: DataItemsOptions | undefined;\n              BUTTONTEXT: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'level.mode.fan';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              MODE: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n              SPEED: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'lock';\n          data: {\n              ACTUAL: DataItemsOptions | undefined;\n              OPEN: DataItemsOptions | undefined;\n              SET: DataItemsOptions | undefined;\n          };\n      }\n    | {\n          role: 'warning';\n          data: {\n              INFO: DataItemsOptions | undefined;\n              LEVEL: DataItemsOptions | undefined;\n              TITLE: DataItemsOptions | undefined;\n          };\n      }\n    | { role: 'weatherforecast'; data: { ICON: DataItemsOptions | undefined; TEMP: DataItemsOptions | undefined } }\n    | { role: 'WIFI'; data: { ACTUAL: DataItemsOptions | undefined; SWITCH: DataItemsOptions | undefined } }\n);\n\nexport const checkedDatapoints: checkedDatapoints = {\n    motion: {\n        role: 'motion',\n        data: {\n            ACTUAL: undefined,\n        },\n    },\n    dimmer: {\n        role: 'dimmer',\n        data: {\n            SET: undefined,\n            ACTUAL: undefined,\n            ON_SET: undefined,\n            ON_ACTUAL: undefined,\n        },\n    },\n    ct: {\n        role: 'ct',\n        data: {\n            DIMMER: undefined,\n            ON: undefined,\n            ON_ACTUAL: undefined,\n            TEMPERATURE: undefined,\n        },\n    },\n    window: {\n        role: 'window',\n        data: {\n            ACTUAL: undefined,\n            COLORDEC: undefined,\n            BUTTONTEXT: undefined,\n        },\n    },\n    humidity: {\n        role: 'humidity',\n        data: {\n            ACTUAL: undefined,\n        },\n    },\n    hue: {\n        role: 'hue',\n        data: {\n            DIMMER: undefined,\n            ON: undefined,\n            ON_ACTUAL: undefined,\n            TEMPERATURE: undefined,\n            HUE: undefined,\n        },\n    },\n    info: {\n        role: 'info',\n        data: {\n            ACTUAL: undefined,\n            COLORDEC: undefined,\n            BUTTONTEXT: undefined,\n            USERICON: undefined,\n        },\n    },\n    blind: {\n        role: 'blind',\n        data: {\n            ACTUAL: undefined,\n            SET: undefined,\n            CLOSE: undefined,\n            OPEN: undefined,\n            STOP: undefined,\n            TILT_ACTUAL: undefined,\n            TILT_SET: undefined,\n            TILT_CLOSE: undefined,\n            TILT_OPEN: undefined,\n            TILT_STOP: undefined,\n        },\n    },\n    airCondition: {\n        role: 'airCondition',\n        data: {\n            ACTUAL: undefined,\n            SET: undefined,\n            SET2: undefined,\n            AUTO: undefined,\n            COOL: undefined,\n            BOOST: undefined,\n            ERROR: undefined,\n            HEAT: undefined,\n            HUMIDITY: undefined,\n            MAINTAIN: undefined,\n            MODE: undefined,\n            OFF: undefined,\n            POWER: undefined,\n            SPEED: undefined,\n            SWING: undefined,\n            UNREACH: undefined,\n        },\n    },\n    socket: {\n        role: 'socket',\n        data: {\n            ACTUAL: undefined,\n            SET: undefined,\n            COLORDEC: undefined,\n            BUTTONTEXT: undefined,\n        },\n    },\n    light: {\n        role: 'light',\n        data: {\n            ACTUAL: undefined,\n            SET: undefined,\n            COLORDEC: undefined,\n            BUTTONTEXT: undefined,\n        },\n    },\n    volume: {\n        role: 'volume',\n        data: {\n            ACTUAL: undefined,\n            SET: undefined,\n            MUTE: undefined,\n        },\n    },\n    rgb: {\n        role: 'rgb',\n        data: {\n            RED: undefined,\n            GREEN: undefined,\n            BLUE: undefined,\n            ON_ACTUAL: undefined,\n            ON: undefined,\n            DIMMER: undefined,\n            TEMPERATURE: undefined,\n            WHITE: undefined,\n        },\n    },\n    rgbSingle: {\n        role: 'rgbSingle',\n        data: {\n            RGB: undefined,\n            ON: undefined,\n            DIMMER: undefined,\n            TEMPERATURE: undefined,\n            ON_ACTUAL: undefined,\n        },\n    },\n    slider: {\n        role: 'slider',\n        data: {\n            SET: undefined,\n            ACTUAL: undefined,\n        },\n    },\n    button: {\n        role: 'button',\n        data: {\n            SET: undefined,\n        },\n    },\n    buttonSensor: {\n        role: 'buttonSensor',\n        data: {\n            ACTUAL: undefined,\n        },\n    },\n    temperature: {\n        role: 'temperature',\n        data: {\n            ACTUAL: undefined,\n        },\n    },\n    thermostat: {\n        role: 'thermostat',\n        data: {\n            ACTUAL: undefined,\n            SET: undefined,\n            MODE: undefined,\n            BOOST: undefined,\n            AUTOMATIC: undefined,\n            ERROR: undefined,\n            LOWBAT: undefined,\n            MANUAL: undefined,\n            UNREACH: undefined,\n            HUMIDITY: undefined,\n            MAINTAIN: undefined,\n            PARTY: undefined,\n            POWER: undefined,\n            VACATION: undefined,\n            WINDOWOPEN: undefined,\n            WORKING: undefined,\n            USERICON: undefined,\n        },\n    },\n    'level.timer': {\n        role: 'level.timer',\n        data: {\n            ACTUAL: undefined,\n            STATE: undefined,\n        },\n    },\n    gate: {\n        role: 'gate',\n        data: {\n            ACTUAL: undefined,\n        },\n    },\n    door: {\n        role: 'door',\n        data: {\n            ACTUAL: undefined,\n            COLORDEC: undefined,\n            BUTTONTEXT: undefined,\n        },\n    },\n    'level.mode.fan': {\n        role: 'level.mode.fan',\n        data: {\n            ACTUAL: undefined,\n            MODE: undefined,\n            SET: undefined,\n            SPEED: undefined,\n        },\n    },\n    lock: {\n        role: 'lock',\n        data: {\n            ACTUAL: undefined,\n            OPEN: undefined,\n            SET: undefined,\n        },\n    },\n    warning: {\n        role: 'warning',\n        data: {\n            INFO: undefined,\n            LEVEL: undefined,\n            TITLE: undefined,\n        },\n    },\n};\nexport type mydps =\n    | 'ACTUAL'\n    | 'noNeed'\n    | 'SET'\n    | 'ON_SET'\n    | 'ON_ACTUAL'\n    | 'DIMMER'\n    | 'ON'\n    | 'TEMPERATURE'\n    | 'COLORDEC'\n    | 'BUTTONTEXT'\n    | 'USERICON'\n    | 'CLOSE'\n    | 'OPEN'\n    | 'STOP'\n    | 'TILT_ACTUAL'\n    | 'TILT_SET'\n    | 'TILT_CLOSE'\n    | 'TILT_OPEN'\n    | 'TILT_STOP'\n    | 'SET2'\n    | 'AUTO'\n    | 'COOL'\n    | 'BOOST'\n    | 'ERROR'\n    | 'HEAT'\n    | 'HUMIDITY'\n    | 'MAINTAIN'\n    | 'MODE'\n    | 'OFF'\n    | 'POWER'\n    | 'SPEED'\n    | 'SWING'\n    | 'UNREACH'\n    | 'MUTE'\n    | 'RED'\n    | 'GREEN'\n    | 'BLUE'\n    | 'WHITE'\n    | 'RGB'\n    | 'STATE'\n    | 'INFO'\n    | 'LEVEL'\n    | 'TITLE'\n    | 'ICON'\n    | 'TEMP'\n    | 'SWITCH';\n\nexport type requiredDatapoints = {\n    motion: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    timeTable: {\n        data: {\n            noNeed: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    dimmer: {\n        data: {\n            SET: Datapoint;\n            ACTUAL: Datapoint;\n            ON_SET: Datapoint;\n            ON_ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    ct: {\n        data: {\n            DIMMER: Datapoint;\n            ON: Datapoint;\n            ON_ACTUAL: Datapoint;\n            TEMPERATURE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    window: {\n        data: {\n            ACTUAL: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'value.humidity': {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    humidity: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    hue: {\n        data: {\n            DIMMER: Datapoint;\n            ON: Datapoint;\n            ON_ACTUAL: Datapoint;\n            TEMPERATURE: Datapoint;\n            HUE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    info: {\n        data: {\n            ACTUAL: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n            USERICON: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    blind: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            CLOSE: Datapoint;\n            OPEN: Datapoint;\n            STOP: Datapoint;\n            TILT_ACTUAL: Datapoint;\n            TILT_SET: Datapoint;\n            TILT_CLOSE: Datapoint;\n            TILT_OPEN: Datapoint;\n            TILT_STOP: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    airCondition: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            SET2: Datapoint;\n            AUTO: Datapoint;\n            COOL: Datapoint;\n            BOOST: Datapoint;\n            ERROR: Datapoint;\n            HEAT: Datapoint;\n            HUMIDITY: Datapoint;\n            MAINTAIN: Datapoint;\n            MODE: Datapoint;\n            OFF: Datapoint;\n            POWER: Datapoint;\n            SPEED: Datapoint;\n            SWING: Datapoint;\n            UNREACH: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    socket: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    light: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    volume: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            MUTE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    rgb: {\n        data: {\n            RED: Datapoint;\n            GREEN: Datapoint;\n            BLUE: Datapoint;\n            ON_ACTUAL: Datapoint;\n            ON: Datapoint;\n            DIMMER: Datapoint;\n            TEMPERATURE: Datapoint;\n            WHITE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    rgbSingle: {\n        data: {\n            RGB: Datapoint;\n            ON: Datapoint;\n            DIMMER: Datapoint;\n            TEMPERATURE: Datapoint;\n            ON_ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    slider: {\n        data: {\n            SET: Datapoint;\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    button: {\n        data: {\n            SET: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    buttonSensor: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    temperature: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'value.temperature': {\n        data: {\n            ACTUAL: Datapoint;\n            USERICON: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    thermostat: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            MODE: Datapoint;\n            BOOST: Datapoint;\n            AUTOMATIC: Datapoint;\n            ERROR: Datapoint;\n            LOWBAT: Datapoint;\n            MANUAL: Datapoint;\n            UNREACH: Datapoint;\n            HUMIDITY: Datapoint;\n            MAINTAIN: Datapoint;\n            PARTY: Datapoint;\n            POWER: Datapoint;\n            VACATION: Datapoint;\n            WINDOWOPEN: Datapoint;\n            WORKING: Datapoint;\n            USERICON: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'level.timer': {\n        data: {\n            ACTUAL: Datapoint;\n            STATE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    gate: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    door: {\n        data: {\n            ACTUAL: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'level.mode.fan': {\n        data: {\n            ACTUAL: Datapoint;\n            MODE: Datapoint;\n            SET: Datapoint;\n            SPEED: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    lock: {\n        data: {\n            ACTUAL: Datapoint;\n            OPEN: Datapoint;\n            SET: Datapoint;\n        };\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    warning: {\n        data: {\n            INFO: Datapoint;\n            LEVEL: Datapoint;\n            TITLE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    weatherforecast: {\n        data: {\n            ICON: Datapoint;\n            TEMP: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    WIFI: {\n        data: {\n            ACTUAL: Datapoint;\n            SWITCH: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n};\n\ntype Datapoint = {\n    role: StateRole | StateRole[];\n    required: boolean;\n    useKey?: boolean;\n    type: ioBroker.StateCommon['type'];\n    writeable?: boolean;\n    trigger?: boolean;\n    description?: string;\n};\nexport const requiredScriptDataPoints: requiredDatapoints = {\n    motion: {\n        updatedVersion: true,\n        name: 'motion',\n        description: 'Status of the motion sensor or presence detector (motion or presence detected)',\n        data: { ACTUAL: { role: 'sensor.motion', type: 'boolean', required: true, writeable: false } },\n    },\n    timeTable: {\n        updatedVersion: true,\n        name: 'timeTable',\n        description: 'Time table for the heating',\n        data: { noNeed: { role: 'state', type: 'string', required: false, writeable: true } },\n    },\n    //l\u00E4uft im Script mit unter RGBsingle, muss nochmal gepr\u00FCft werden ob sinnvoll\n    /* cie: {\n        name: 'cie',\n        description: '',\n        data: {\n            CIE: { role: 'level.color.cie', type: 'string', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'boolean', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: true, writeable: true },\n        },\n    }, */\n    dimmer: {\n        updatedVersion: true,\n        name: 'dimmer',\n        description: 'Licht ein- / ausschalten und dimmen',\n        data: {\n            SET: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ACTUAL: { role: ['value.dimmer', 'level.dimmer'], type: 'number', required: false, writeable: false },\n            ON_SET: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: ['sensor.light', 'switch.light'], type: 'boolean', required: false, writeable: false },\n        },\n    },\n    ct: {\n        updatedVersion: true,\n        name: 'ct',\n        description: 'f\u00FCr Lampen die das wei\u00DFe Licht zwischen kalt und warm \u00E4ndern k\u00F6nnen',\n        data: {\n            DIMMER: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: ['sensor.light', 'switch.light'], type: 'boolean', required: false, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: true, writeable: true },\n        },\n    },\n    window: {\n        updatedVersion: true,\n        name: 'window',\n        description: '',\n        data: {\n            ACTUAL: { role: 'sensor.window', type: 'boolean', required: true, writeable: false },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern\n        },\n    },\n    humidity: {\n        updatedVersion: true,\n        name: 'humidity',\n        description: '',\n        data: { ACTUAL: { role: 'value.humidity', type: 'number', required: true, writeable: false } },\n    },\n    'value.humidity': {\n        updatedVersion: true,\n        name: 'humidity',\n        description: '',\n        data: { ACTUAL: { role: 'value.humidity', type: 'number', required: true, writeable: false } },\n    },\n    hue: {\n        updatedVersion: true,\n        name: 'hue',\n        description: '',\n        data: {\n            DIMMER: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: ['sensor.light', 'switch.light'], type: 'boolean', required: false, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: false, writeable: true },\n            HUE: { role: 'level.color.hue', type: 'number', required: true, writeable: true },\n            //SCENE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    info: {\n        updatedVersion: true,\n        name: 'info',\n        description: 'Universal Datenpunkt f\u00FCr diverse Anwendungen',\n        data: {\n            ACTUAL: { role: 'state', type: 'mixed', required: true, writeable: false, useKey: true },\n            COLORDEC: { role: 'value.rgb', type: 'number', required: false, writeable: false, useKey: true }, //Farbcode \u00FCber DP senden\n            BUTTONTEXT: { role: ['text'], type: 'string', required: false, writeable: false, useKey: true }, //Button-Text \u00FCber DP senden bei cardEntity\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false, useKey: true }, //Benutzerdefinierte Iconnamen \u00FCber DP senden\n        },\n    },\n    blind: {\n        updatedVersion: true,\n        name: 'blind',\n        description: '',\n        data: {\n            ACTUAL: { role: ['value.blind', 'level.blind'], type: 'number', required: false, writeable: false },\n            SET: { role: 'level.blind', type: 'number', required: true, writeable: true },\n            CLOSE: { role: 'button.close.blind', type: 'boolean', required: true, writeable: true },\n            OPEN: { role: 'button.open.blind', type: 'boolean', required: true, writeable: true },\n            STOP: { role: 'button.stop.blind', type: 'boolean', required: true, writeable: true },\n            TILT_ACTUAL: { role: ['level.tilt', 'value.tilt'], type: 'number', required: false, writeable: false },\n            TILT_SET: { role: 'level.tilt', type: 'number', required: false, writeable: true },\n            TILT_CLOSE: { role: 'button.close.tilt', type: 'boolean', required: false, writeable: true },\n            TILT_OPEN: { role: 'button.open.tilt', type: 'boolean', required: false, writeable: true },\n            TILT_STOP: { role: 'button.stop.tilt', type: 'boolean', required: false, writeable: true },\n        },\n    },\n    airCondition: {\n        name: 'airCondition',\n        description: '',\n        data: {\n            ACTUAL: {\n                role: ['level.temperature', 'value.temperature'],\n                type: 'number',\n                required: false,\n                writeable: false,\n            },\n            SET: { role: 'level.temperature', type: 'number', required: true, writeable: true },\n            SET2: { role: 'level.temperature', type: 'number', required: false, writeable: true },\n            AUTO: { role: 'state', type: 'boolean', required: false, writeable: false },\n            COOL: { role: 'state', type: 'boolean', required: false, writeable: false },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false, writeable: true },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false, writeable: false },\n            HEAT: { role: 'state', type: 'boolean', required: false, writeable: false },\n            HUMIDITY: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n            MODE: { role: 'level.mode.airconditioner', type: 'number', required: false, writeable: true },\n            OFF: { role: 'state', type: 'boolean', required: false, writeable: false }, //off\n            POWER: { role: 'switch.power', type: 'boolean', required: false, writeable: true }, //on\n            SPEED: { role: 'level.mode.fan', type: 'number', required: false, writeable: true },\n            SWING: { role: 'switch.mode.swing', type: 'boolean', required: false, writeable: true },\n            UNREACH: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n        },\n    },\n    socket: {\n        updatedVersion: true,\n        name: 'socket',\n        description: 'Steckdosen, Schalter, Relais, usw. schalten',\n        data: {\n            ACTUAL: { role: 'switch', type: 'boolean', required: true, writeable: false },\n            SET: { role: 'switch', type: 'boolean', required: false, writeable: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern bei cardEntity\n        },\n    },\n    light: {\n        updatedVersion: true,\n        name: 'light',\n        description: 'ein Lichtschalter',\n        data: {\n            ACTUAL: { role: ['switch.light', 'sensor.light'], type: 'boolean', required: true, writeable: false },\n            SET: { role: 'switch.light', type: 'boolean', required: false, writeable: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: 'text', type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern bei cardEntity\n        },\n    },\n    volume: {\n        updatedVersion: true,\n        name: 'volume',\n        description: '',\n        data: {\n            ACTUAL: { role: ['value.volume', 'level.volume'], type: 'number', required: false, writeable: false },\n            SET: { role: 'level.volume', type: 'number', required: true, writeable: true },\n            MUTE: { role: 'media.mute', type: 'boolean', required: false, writeable: true },\n        },\n    },\n    rgb: {\n        updatedVersion: true,\n        name: 'rgb',\n        description: 'Farblicht mit einzelnen Farbkan\u00E4len',\n        data: {\n            RED: { role: 'level.color.red', type: 'number', required: true, writeable: true },\n            GREEN: { role: 'level.color.green', type: 'number', required: true, writeable: true },\n            BLUE: { role: 'level.color.blue', type: 'number', required: true, writeable: true },\n            ON_ACTUAL: { role: ['sensor.light', 'switch.light'], type: 'boolean', required: true, writeable: false },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: false, writeable: true }, // entweder oder\n            WHITE: { role: 'level.color.white', type: 'number', required: false, writeable: true }, // mit pr\u00FCfen\n            //VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    rgbSingle: {\n        updatedVersion: true,\n        name: 'rgbSingle',\n        description: 'Farblicht ohne Farbkan\u00E4le',\n        data: {\n            RGB: { role: 'level.color.rgb', type: 'string', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: false, writeable: true },\n            ON_ACTUAL: { role: ['sensor.light', 'switch.light'], type: 'boolean', required: false, writeable: false },\n            // VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    slider: {\n        updatedVersion: true,\n        name: 'slider',\n        description: 'Slider to set a numerical value',\n        data: {\n            SET: { role: 'level', type: 'number', required: true, writeable: true },\n            ACTUAL: { role: ['value', 'level'], type: 'number', required: false, writeable: false },\n        },\n    },\n    button: {\n        updatedVersion: true,\n        name: 'button',\n        description: 'Switch',\n        data: { SET: { role: 'button', type: 'boolean', required: true, writeable: true } },\n    },\n    buttonSensor: {\n        updatedVersion: true,\n        name: 'buttonSensor',\n        description: 'Taster',\n        data: { ACTUAL: { role: 'button.press', type: 'boolean', required: true, writeable: false } },\n    },\n    temperature: {\n        updatedVersion: true,\n        name: 'temperature',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n        },\n    },\n    'value.temperature': {\n        updatedVersion: true,\n        name: 'value.temperature',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false }, // benutzerdefinierter Iconname \u00FCber DP senden\n        },\n    },\n    thermostat: {\n        name: 'thermostat',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n            SET: { role: 'level.temperature', type: 'number', required: true, writeable: true },\n            MODE: { role: 'level.mode.thermostat', type: 'number', required: true, writeable: true },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false, writeable: true },\n            AUTOMATIC: { role: 'state', type: 'boolean', required: true },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false, writeable: false },\n            LOWBAT: { role: 'indicator.maintenance.lowbat', type: 'boolean', required: false, writeable: false },\n            MANUAL: { role: 'state', type: 'boolean', required: false },\n            UNREACH: { role: 'indicator.maintenance.unreach', type: 'boolean', required: false, writeable: false },\n            HUMIDITY: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n            PARTY: { role: 'switch.mode.party', type: 'boolean', required: false },\n            POWER: { role: 'switch.power', type: 'boolean', required: false, writeable: true },\n            VACATION: { role: 'state', type: 'boolean', required: false },\n            WINDOWOPEN: { role: ['state', 'sensor.window'], type: 'boolean', required: false, writeable: false },\n            WORKING: { role: 'indicator.working', type: 'boolean', required: false, writeable: false },\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false }, // benutzerdefinierter Iconname \u00FCber DP senden\n        },\n    },\n    'level.timer': {\n        name: 'level.timer',\n        description: '',\n        data: {\n            ACTUAL: { role: 'timestamp', type: 'number', required: true, writeable: true },\n            STATE: { role: 'state', type: 'string', required: true, writeable: true },\n        },\n    },\n    gate: {\n        name: 'gate',\n        description: '',\n        data: { ACTUAL: { role: 'switch.gate', type: 'boolean', required: true, writeable: false } },\n    },\n    door: {\n        name: 'door',\n        description: '',\n        data: {\n            ACTUAL: { role: 'sensor.door', type: 'boolean', required: true, writeable: false },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, // Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, // Button-Text \u00FCber DP steuern\n        },\n    },\n    'level.mode.fan': {\n        name: 'level.mode.fan',\n        description: '',\n        data: {\n            ACTUAL: { role: 'state', type: 'boolean', required: true, writeable: false },\n            MODE: { role: 'state', type: 'number', required: true, writeable: true },\n            SET: { role: 'state', type: 'boolean', required: true, writeable: true },\n            SPEED: { role: 'state', type: 'number', required: true, writeable: true },\n        },\n    },\n    lock: {\n        name: 'lock',\n        description: 'T\u00FCrschloss',\n        data: {\n            ACTUAL: { role: 'state', type: 'boolean', required: true, writeable: false },\n            OPEN: { role: 'state', type: 'boolean', required: false, writeable: false },\n            SET: { role: 'switch.lock', type: 'boolean', required: true, writeable: true },\n        },\n    },\n    warning: {\n        name: 'warning',\n        description: '',\n        data: {\n            INFO: { role: 'weather.title', type: 'string', required: true, writeable: false },\n            LEVEL: { role: 'value.warning', type: 'number', required: true, writeable: false },\n            TITLE: { role: 'weather.title.short', type: 'string', required: true, writeable: false },\n        },\n    },\n    weatherforecast: {\n        name: 'weatherforecast',\n        description: '',\n        data: {\n            ICON: { role: 'weather.icon.forecast', type: 'string', required: true, writeable: false },\n            TEMP: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n        },\n    },\n    WIFI: {\n        name: 'WIFI',\n        description: '',\n        data: {\n            ACTUAL: { role: 'state', type: 'string', required: true, writeable: false },\n            SWITCH: { role: 'switch', type: 'boolean', required: false, writeable: true },\n        },\n    },\n};\n"],
  "mappings": "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",
  "names": []
}
