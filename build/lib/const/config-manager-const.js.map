{
  "version": 3,
  "sources": ["../../../src/lib/const/config-manager-const.ts"],
  "sourcesContent": ["import type { NspanelLovelaceUi } from '../types/NspanelLovelaceUi';\nimport { arrayOfAll, type StateRole } from '../types/pages';\nimport type { ConfigButtonFunction, DataItemsOptions } from '../types/types';\n\nexport const CustomTemplates: ConfigManager.CustomTemplate[] = [\n    {\n        device: 'shutter',\n        states: [\n            { 'button.open.blind': true },\n            { 'button.close.blind': true },\n            { 'button.open.tilt': true },\n            { 'button.close.tilt': true },\n            { 'button.stop.tilt': true },\n            { 'button.stop.blind': true },\n            { 'level.blind': true },\n        ],\n    },\n];\n\nexport function isButton(F: any): F is ConfigButtonFunction {\n    if (F === undefined) {\n        return false;\n    }\n    if (F === null) {\n        return true;\n    }\n\n    return (\n        'mode' in F &&\n        ((F.mode === 'page' && F.page) ||\n            ('state' in F && (F.mode === 'switch' || F.mode === 'button') && F.state && !F.state.endsWith('.')))\n    );\n}\n\n/**\n * Wenn ein State angelegt wird muss gleich ein Namen f\u00FCr das der Device und das Device selbst angegeben werden.\n * Die Seite auf der das Device angezeigt wird, sollte in einem Pick oder wie das hei\u00DFt angegeben werden,\n * Ich denke nicht das ich dort schon bekannte Seiten angeben kann, die anzeigbaren DAten im Custom sind\n * statisch und das pick hat kein sendto. Die Seiten m\u00FCsste man jedoch nur einmal in einem State f\u00FCr ein Device angeben.\n * Also brauche ich an der stelle ein sendToSelect das manuelle eingaben erlaubt. mal testen\n */\n\nexport function isConfig(F: any, adapter: NspanelLovelaceUi): F is ScriptConfig.Config {\n    if (F === undefined) {\n        return false;\n    }\n    const requiredFields: (keyof ScriptConfig.Config)[] = [\n        'panelTopic',\n        'weatherEntity',\n        'defaultOnColor',\n        'defaultOffColor',\n        'defaultBackgroundColor',\n        'pages',\n        'subPages',\n        'buttonLeft',\n        'buttonRight',\n        'bottomScreensaverEntity',\n        'favoritScreensaverEntity',\n        'alternateScreensaverEntity',\n        'leftScreensaverEntity',\n        'indicatorScreensaverEntity',\n        'mrIcon1ScreensaverEntity',\n        'mrIcon2ScreensaverEntity',\n    ];\n\n    for (const field of requiredFields) {\n        if (F[field] === undefined) {\n            adapter.log.warn(`Required field '${field}' is missing in config - Aborting for this panel`);\n            return false;\n        }\n    }\n    return true;\n}\n\nexport const arrayOfAllConfigRequiredFields = arrayOfAll<keyof ScriptConfig.Config>();\n\nexport const defaultConfig: ScriptConfig.Config = {\n    version: '0',\n    panelTopic: '',\n    weatherEntity: '',\n    bottomScreensaverEntity: [],\n    favoritScreensaverEntity: [],\n    alternateScreensaverEntity: [],\n    defaultOnColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    defaultOffColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    defaultBackgroundColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    pages: [],\n    subPages: [],\n    buttonLeft: null,\n    buttonRight: null,\n    leftScreensaverEntity: [],\n    indicatorScreensaverEntity: [],\n    mrIcon1ScreensaverEntity: {\n        type: 'script',\n        ScreensaverEntity: null,\n        ScreensaverEntityIconOn: null,\n        ScreensaverEntityIconSelect: undefined,\n        ScreensaverEntityIconOff: null,\n        ScreensaverEntityValue: null,\n        ScreensaverEntityValueDecimalPlace: null,\n        ScreensaverEntityValueUnit: null,\n        ScreensaverEntityOnColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n        ScreensaverEntityOffColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n    },\n    mrIcon2ScreensaverEntity: {\n        type: 'script',\n        ScreensaverEntity: null,\n        ScreensaverEntityIconOn: null,\n        ScreensaverEntityIconSelect: undefined,\n        ScreensaverEntityIconOff: null,\n        ScreensaverEntityValue: null,\n        ScreensaverEntityValueDecimalPlace: null,\n        ScreensaverEntityValueUnit: null,\n        ScreensaverEntityOnColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n        ScreensaverEntityOffColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n    },\n};\n\nexport type checkedDatapointsUnionWithNull = Record<\n    ScriptConfig.channelRoles,\n    Partial<Record<mydps, DataItemsOptions | undefined | null>>\n>;\n\nexport type checkedDatapointsUnion = Record<\n    ScriptConfig.channelRoles,\n    Partial<Record<mydps, DataItemsOptions | undefined>>\n>;\n\nexport const checkedDatapoints: checkedDatapointsUnionWithNull = {\n    motion: {\n        ACTUAL: null,\n    },\n    dimmer: {\n        SET: null,\n        ACTUAL: null,\n        ON_SET: null,\n        ON_ACTUAL: null,\n    },\n    ct: {\n        DIMMER: null,\n        ON: null,\n        ON_ACTUAL: null,\n        TEMPERATURE: null,\n    },\n    window: {\n        ACTUAL: null,\n        COLORDEC: null,\n        BUTTONTEXT: null,\n    },\n    humidity: {\n        ACTUAL: null,\n    },\n    'value.humidity': {\n        ACTUAL: null,\n    },\n    timeTable: {\n        noNeed: null,\n    },\n    hue: {\n        DIMMER: null,\n        ON: null,\n        ON_ACTUAL: null,\n        TEMPERATURE: null,\n        HUE: null,\n    },\n    info: {\n        ACTUAL: null,\n        COLORDEC: null,\n        BUTTONTEXT: null,\n        USERICON: null,\n    },\n    blind: {\n        ACTUAL: null,\n        SET: null,\n        CLOSE: null,\n        OPEN: null,\n        STOP: null,\n        TILT_ACTUAL: null,\n        TILT_SET: null,\n        TILT_CLOSE: null,\n        TILT_OPEN: null,\n        TILT_STOP: null,\n    },\n    airCondition: {\n        ACTUAL: null,\n        SET: null,\n        SET2: null,\n        BOOST: null,\n        ERROR: null,\n        HUMIDITY: null,\n        MAINTAIN: null,\n        MODE: null,\n        POWER: null,\n        SPEED: null,\n        SWING: null,\n        UNREACH: null,\n    },\n    socket: {\n        ACTUAL: null,\n        SET: null,\n        COLORDEC: null,\n        BUTTONTEXT: null,\n    },\n    light: {\n        ACTUAL: null,\n        SET: null,\n        COLORDEC: null,\n        BUTTONTEXT: null,\n    },\n    volume: {\n        ACTUAL: null,\n        SET: null,\n        MUTE: null,\n    },\n    rgb: {\n        RED: null,\n        GREEN: null,\n        BLUE: null,\n        ON_ACTUAL: null,\n        ON: null,\n        DIMMER: null,\n        TEMPERATURE: null,\n        WHITE: null,\n    },\n    rgbSingle: {\n        RGB: null,\n        ON: null,\n        DIMMER: null,\n        TEMPERATURE: null,\n        ON_ACTUAL: null,\n    },\n    slider: {\n        SET: null,\n        ACTUAL: null,\n    },\n    button: {\n        SET: null,\n    },\n    select: {\n        ACTUAL: null,\n        SET: null,\n    },\n    temperature: {\n        ACTUAL: null,\n    },\n    'value.temperature': {\n        ACTUAL: null,\n    },\n\n    thermostat: {\n        ACTUAL: null,\n        SET: null,\n        MODE: null,\n        BOOST: null,\n        //AUTOMATIC: null,\n        ERROR: null,\n        LOWBAT: null,\n        //MANUAL: null,\n        UNREACH: null,\n        HUMIDITY: null,\n        MAINTAIN: null,\n        PARTY: null,\n        POWER: null,\n        VACATION: null,\n        WINDOWOPEN: null,\n        WORKING: null,\n        USERICON: null,\n    },\n    'level.timer': {\n        ACTUAL: null,\n        SET: null,\n        STATE: null,\n        STATUS: null,\n    },\n    gate: {\n        ACTUAL: null,\n    },\n    door: {\n        ACTUAL: null,\n        COLORDEC: null,\n        BUTTONTEXT: null,\n    },\n    'level.mode.fan': {\n        ACTUAL: null,\n        MODE: null,\n        SET: null,\n        SPEED: null,\n    },\n    lock: {\n        ACTUAL: null,\n        OPEN: null,\n        SET: null,\n    },\n    warning: {\n        INFO: null,\n        LEVEL: null,\n        TITLE: null,\n    },\n};\nexport type mydps =\n    | 'ACTUAL'\n    | 'noNeed'\n    | 'SET'\n    | 'ON_SET'\n    | 'ON_ACTUAL'\n    | 'DIMMER'\n    | 'ON'\n    | 'TEMPERATURE'\n    | 'COLORDEC'\n    | 'BUTTONTEXT'\n    | 'USERICON'\n    | 'CLOSE'\n    | 'OPEN'\n    | 'STOP'\n    | 'TILT_ACTUAL'\n    | 'TILT_SET'\n    | 'TILT_CLOSE'\n    | 'TILT_OPEN'\n    | 'TILT_STOP'\n    | 'SET2'\n    | 'AUTO'\n    | 'COOL'\n    | 'BOOST'\n    | 'ERROR'\n    | 'HEAT'\n    | 'HUMIDITY'\n    | 'MAINTAIN'\n    | 'MODE'\n    | 'OFF'\n    | 'POWER'\n    | 'SPEED'\n    | 'SWING'\n    | 'UNREACH'\n    | 'MUTE'\n    | 'RED'\n    | 'GREEN'\n    | 'BLUE'\n    | 'WHITE'\n    | 'RGB'\n    | 'STATE'\n    | 'INFO'\n    | 'LEVEL'\n    | 'TITLE'\n    | 'ICON'\n    | 'TEMP'\n    | 'SWITCH'\n    | 'HUE'\n    | 'AUTOMATIC'\n    | 'LOWBAT'\n    | 'MANUAL'\n    | 'PARTY'\n    | 'VACATION'\n    | 'WINDOWOPEN'\n    | 'WORKING'\n    | 'VALUE'\n    | 'STATUS';\n\nexport type requiredDatapoints = {\n    motion: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    timeTable: {\n        data: {\n            noNeed: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    dimmer: {\n        data: {\n            SET: Datapoint;\n            ACTUAL: Datapoint;\n            ON_SET: Datapoint;\n            ON_ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    ct: {\n        data: {\n            DIMMER: Datapoint;\n            ON: Datapoint;\n            ON_ACTUAL: Datapoint;\n            TEMPERATURE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    window: {\n        data: {\n            ACTUAL: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'value.humidity': {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    humidity: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    hue: {\n        data: {\n            DIMMER: Datapoint;\n            ON: Datapoint;\n            ON_ACTUAL: Datapoint;\n            TEMPERATURE: Datapoint;\n            HUE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    info: {\n        data: {\n            ACTUAL: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n            USERICON: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    blind: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            CLOSE: Datapoint;\n            OPEN: Datapoint;\n            STOP: Datapoint;\n            TILT_ACTUAL: Datapoint;\n            TILT_SET: Datapoint;\n            TILT_CLOSE: Datapoint;\n            TILT_OPEN: Datapoint;\n            TILT_STOP: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    airCondition: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            SET2: Datapoint;\n            BOOST: Datapoint;\n            ERROR: Datapoint;\n            HUMIDITY: Datapoint;\n            MAINTAIN: Datapoint;\n            MODE: Datapoint;\n            POWER: Datapoint;\n            SPEED: Datapoint;\n            SWING: Datapoint;\n            UNREACH: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    socket: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    light: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    volume: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            MUTE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    rgb: {\n        data: {\n            RED: Datapoint;\n            GREEN: Datapoint;\n            BLUE: Datapoint;\n            ON_ACTUAL: Datapoint;\n            ON: Datapoint;\n            DIMMER: Datapoint;\n            TEMPERATURE: Datapoint;\n            WHITE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    rgbSingle: {\n        data: {\n            RGB: Datapoint;\n            ON: Datapoint;\n            DIMMER: Datapoint;\n            TEMPERATURE: Datapoint;\n            ON_ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    slider: {\n        data: {\n            SET: Datapoint;\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    button: {\n        data: {\n            SET: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    select: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    temperature: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'value.temperature': {\n        data: {\n            ACTUAL: Datapoint;\n            USERICON: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    thermostat: {\n        data: {\n            ACTUAL: Datapoint;\n            SET: Datapoint;\n            MODE: Datapoint;\n            BOOST: Datapoint;\n            //AUTOMATIC: Datapoint;\n            ERROR: Datapoint;\n            LOWBAT: Datapoint;\n            //MANUAL: Datapoint;\n            UNREACH: Datapoint;\n            HUMIDITY: Datapoint;\n            MAINTAIN: Datapoint;\n            PARTY: Datapoint;\n            POWER: Datapoint;\n            VACATION: Datapoint;\n            WINDOWOPEN: Datapoint;\n            WORKING: Datapoint;\n            USERICON: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'level.timer': {\n        data: {\n            ACTUAL: Datapoint;\n            STATE: Datapoint;\n            SET: Datapoint;\n            STATUS: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    gate: {\n        data: {\n            ACTUAL: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    door: {\n        data: {\n            ACTUAL: Datapoint;\n            COLORDEC: Datapoint;\n            BUTTONTEXT: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    'level.mode.fan': {\n        data: {\n            ACTUAL: Datapoint;\n            MODE: Datapoint;\n            SET: Datapoint;\n            SPEED: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    lock: {\n        data: {\n            ACTUAL: Datapoint;\n            OPEN: Datapoint;\n            SET: Datapoint;\n        };\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    warning: {\n        data: {\n            INFO: Datapoint;\n            LEVEL: Datapoint;\n            TITLE: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    weatherforecast: {\n        data: {\n            ICON: Datapoint;\n            TEMP: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n    WIFI: {\n        data: {\n            ACTUAL: Datapoint;\n            SWITCH: Datapoint;\n        } & Partial<Record<mydps, Datapoint>>;\n        updatedVersion?: boolean;\n        name: string;\n        description: string;\n    };\n};\n\ntype Datapoint = {\n    role: StateRole | StateRole[];\n    required: boolean;\n    useKey?: boolean;\n    type: ioBroker.StateCommon['type'] | ioBroker.StateCommon['type'][];\n    writeable?: boolean;\n    trigger?: boolean;\n    description?: string;\n};\nexport const requiredScriptDataPoints: requiredDatapoints = {\n    motion: {\n        updatedVersion: true,\n        name: 'motion',\n        description: 'Status of the motion sensor or presence detector (motion or presence detected)',\n        data: { ACTUAL: { role: 'sensor.motion', type: 'boolean', required: true, writeable: false, trigger: true } },\n    },\n    timeTable: {\n        updatedVersion: true,\n        name: 'timeTable',\n        description: 'Time table for the heating',\n        data: {\n            noNeed: {\n                role: 'state',\n                type: 'string',\n                required: false,\n                description: 'Just use the template for this - ask TT-Tom :)',\n            },\n        },\n    },\n    //l\u00E4uft im Script mit unter RGBsingle, muss nochmal gepr\u00FCft werden ob sinnvoll\n    /* cie: {\n        name: 'cie',\n        description: '',\n        data: {\n            CIE: { role: 'level.color.cie', type: 'string', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'boolean', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: true, writeable: true },\n        },\n    }, */\n    dimmer: {\n        updatedVersion: true,\n        name: 'dimmer',\n        description: 'Licht ein- / ausschalten und dimmen',\n        data: {\n            SET: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ACTUAL: {\n                role: ['value.dimmer', 'level.dimmer'],\n                type: 'number',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            ON_SET: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: {\n                role: ['sensor.light', 'switch.light'],\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n        },\n    },\n    ct: {\n        updatedVersion: true,\n        name: 'ct',\n        description: 'f\u00FCr Lampen die das wei\u00DFe Licht zwischen kalt und warm \u00E4ndern k\u00F6nnen',\n        data: {\n            DIMMER: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: {\n                role: ['sensor.light', 'switch.light'],\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            TEMPERATURE: {\n                role: 'level.color.temperature',\n                type: 'number',\n                required: true,\n                writeable: true,\n                trigger: true,\n            },\n        },\n    },\n    window: {\n        updatedVersion: true,\n        name: 'window',\n        description: '',\n        data: {\n            ACTUAL: { role: 'sensor.window', type: 'boolean', required: true, writeable: false, trigger: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern\n        },\n    },\n    humidity: {\n        updatedVersion: true,\n        name: 'humidity',\n        description: '',\n        data: { ACTUAL: { role: 'value.humidity', type: 'number', required: true, writeable: false, trigger: true } },\n    },\n    'value.humidity': {\n        updatedVersion: true,\n        name: 'humidity',\n        description: '',\n        data: { ACTUAL: { role: 'value.humidity', type: 'number', required: true, writeable: false, trigger: true } },\n    },\n    hue: {\n        updatedVersion: true,\n        name: 'hue',\n        description: '',\n        data: {\n            DIMMER: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: {\n                role: ['sensor.light', 'switch.light'],\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            TEMPERATURE: {\n                role: 'level.color.temperature',\n                type: 'number',\n                required: false,\n                writeable: true,\n                trigger: true,\n            },\n            HUE: { role: 'level.color.hue', type: 'number', required: true, writeable: true, trigger: true },\n            //SCENE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    info: {\n        updatedVersion: true,\n        name: 'info',\n        description: 'Universal Datenpunkt f\u00FCr diverse Anwendungen',\n        data: {\n            ACTUAL: {\n                role: 'state',\n                type: ['string', 'number', 'boolean', 'mixed'],\n                required: true,\n                writeable: false,\n                useKey: true,\n                trigger: true,\n            },\n            COLORDEC: { role: 'value.rgb', type: 'number', required: false, writeable: false, useKey: true }, //Farbcode \u00FCber DP senden\n            BUTTONTEXT: { role: ['text'], type: 'string', required: false, writeable: false, useKey: true }, //Button-Text \u00FCber DP senden bei cardEntity\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false, useKey: true }, //Benutzerdefinierte Iconnamen \u00FCber DP senden\n        },\n    },\n    blind: {\n        updatedVersion: true,\n        name: 'blind',\n        description: '',\n        data: {\n            ACTUAL: {\n                role: ['value.blind', 'level.blind'],\n                type: 'number',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            SET: { role: 'level.blind', type: 'number', required: true, writeable: true },\n            CLOSE: { role: 'button.close.blind', type: 'boolean', required: true, writeable: true },\n            OPEN: { role: 'button.open.blind', type: 'boolean', required: true, writeable: true },\n            STOP: { role: 'button.stop.blind', type: 'boolean', required: true, writeable: true },\n            TILT_ACTUAL: {\n                role: ['level.tilt', 'value.tilt'],\n                type: 'number',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            TILT_SET: { role: 'level.tilt', type: 'number', required: false, writeable: true },\n            TILT_CLOSE: { role: 'button.close.tilt', type: 'boolean', required: false, writeable: true },\n            TILT_OPEN: { role: 'button.open.tilt', type: 'boolean', required: false, writeable: true },\n            TILT_STOP: { role: 'button.stop.tilt', type: 'boolean', required: false, writeable: true },\n        },\n    },\n    airCondition: {\n        name: 'airCondition',\n        description: '',\n        data: {\n            ACTUAL: {\n                role: 'value.temperature',\n                type: 'number',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            SET: { role: 'level.temperature', type: 'number', useKey: true, required: true, writeable: true },\n            SET2: { role: 'level.temperature', type: 'number', useKey: true, required: false, writeable: true },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false, writeable: true, trigger: true },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false, writeable: false, trigger: true },\n            HUMIDITY: { role: 'value.humidity', type: 'number', required: false, writeable: false, trigger: true },\n            MAINTAIN: {\n                role: 'indicator.maintenance',\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            MODE: {\n                role: 'level.mode.airconditioner',\n                type: 'number',\n                required: false,\n                writeable: true,\n                trigger: true,\n                description: `0: OFF, 1: AUTO, 2: COOL, 3: HEAT, 4: ECO, 5: FAN_ONLY, 6: DRY - depend on array in common.states - check wiki for more`,\n            },\n            POWER: {\n                role: 'switch',\n                type: 'boolean',\n                required: false,\n                writeable: true,\n                description: 'use MODE for on/off',\n            }, //on\n            SPEED: { role: 'level.mode.fan', type: 'number', required: false, writeable: true, trigger: true },\n            SWING: { role: 'switch.mode.swing', type: 'boolean', required: false, writeable: true, trigger: true },\n            UNREACH: {\n                role: 'indicator.maintenance',\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n        },\n    },\n    socket: {\n        updatedVersion: true,\n        name: 'socket',\n        description: 'Steckdosen, Schalter, Relais, usw. schalten',\n        data: {\n            ACTUAL: { role: 'switch', type: 'boolean', required: true, writeable: false, trigger: true },\n            SET: { role: 'switch', type: 'boolean', required: false, writeable: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern bei cardEntity\n        },\n    },\n    light: {\n        updatedVersion: true,\n        name: 'light',\n        description: 'ein Lichtschalter',\n        data: {\n            ACTUAL: {\n                role: ['switch.light', 'sensor.light'],\n                type: 'boolean',\n                required: true,\n                writeable: false,\n                trigger: true,\n            },\n            SET: { role: 'switch.light', type: 'boolean', required: false, writeable: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: 'text', type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern bei cardEntity\n        },\n    },\n    volume: {\n        updatedVersion: true,\n        name: 'volume',\n        description: '',\n        data: {\n            ACTUAL: {\n                role: ['value.volume', 'level.volume'],\n                type: 'number',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            SET: { role: 'level.volume', type: 'number', required: true, writeable: true },\n            MUTE: { role: 'media.mute', type: 'boolean', required: false, writeable: true, trigger: true },\n        },\n    },\n    rgb: {\n        updatedVersion: true,\n        name: 'rgb',\n        description: 'Farblicht mit einzelnen Farbkan\u00E4len',\n        data: {\n            RED: { role: 'level.color.red', type: 'number', required: true, writeable: true, trigger: true },\n            GREEN: { role: 'level.color.green', type: 'number', required: true, writeable: true, trigger: true },\n            BLUE: { role: 'level.color.blue', type: 'number', required: true, writeable: true, trigger: true },\n            ON_ACTUAL: {\n                role: ['sensor.light', 'switch.light'],\n                type: 'boolean',\n                required: true,\n                writeable: false,\n                trigger: true,\n            },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true, trigger: true },\n            TEMPERATURE: {\n                role: 'level.color.temperature',\n                type: 'number',\n                required: false,\n                writeable: true,\n                trigger: true,\n            }, // entweder oder\n            WHITE: { role: 'level.color.white', type: 'number', required: false, writeable: true, trigger: true }, // mit pr\u00FCfen\n            //VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    rgbSingle: {\n        updatedVersion: true,\n        name: 'rgbSingle',\n        description: 'Farblicht ohne Farbkan\u00E4le',\n        data: {\n            RGB: { role: 'level.color.rgb', type: 'string', required: true, writeable: true, trigger: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true, trigger: true },\n            TEMPERATURE: {\n                role: 'level.color.temperature',\n                type: 'number',\n                required: false,\n                writeable: true,\n                trigger: true,\n            },\n            ON_ACTUAL: {\n                role: ['sensor.light', 'switch.light'],\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            // VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    slider: {\n        updatedVersion: true,\n        name: 'slider',\n        description: 'Slider to set a numerical value',\n        data: {\n            SET: { role: 'level', type: 'number', required: true, writeable: true },\n            ACTUAL: { role: ['value', 'level'], type: 'number', required: false, writeable: false, trigger: true },\n        },\n    },\n    button: {\n        updatedVersion: true,\n        name: 'button',\n        description: 'Switch',\n        data: { SET: { role: 'button', type: 'boolean', required: true, writeable: true } },\n    },\n    select: {\n        updatedVersion: true,\n        name: 'select',\n        description: 'Auswahlbox',\n        data: {\n            ACTUAL: {\n                role: ['value.mode.select', 'level.mode.select'],\n                type: 'number',\n                required: true,\n                writeable: false,\n                trigger: true,\n            },\n            SET: { role: 'level.mode.select', type: 'number', required: true, writeable: false, trigger: true },\n        },\n    },\n    temperature: {\n        updatedVersion: true,\n        name: 'temperature',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false, trigger: true },\n        },\n    },\n    'value.temperature': {\n        updatedVersion: true,\n        name: 'value.temperature',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false, trigger: true },\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false }, // benutzerdefinierter Iconname \u00FCber DP senden\n        },\n    },\n    thermostat: {\n        name: 'thermostat',\n        description: '',\n        data: {\n            ACTUAL: {\n                role: 'value.temperature',\n                type: 'number',\n                required: false,\n                writeable: false,\n            },\n            SET: { role: 'level.temperature', type: 'number', required: true, writeable: true },\n            MODE: { role: 'level.mode.thermostat', type: 'number', required: false, writeable: true },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false, writeable: true },\n            //AUTOMATIC: { role: 'state', type: 'boolean', required: false },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false, writeable: false },\n            LOWBAT: { role: 'indicator.maintenance.lowbat', type: 'boolean', required: false, writeable: false },\n            //MANUAL: { role: 'state', type: 'boolean', required: false },\n            UNREACH: { role: 'indicator.maintenance.unreach', type: 'boolean', required: false, writeable: false },\n            HUMIDITY: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n            PARTY: { role: 'switch.mode.party', type: 'boolean', required: false },\n            POWER: { role: 'switch.power', type: 'boolean', required: false, writeable: true },\n            VACATION: { role: 'state', type: 'boolean', useKey: true, required: false },\n            WINDOWOPEN: { role: ['state', 'sensor.window'], type: 'boolean', required: false, writeable: false },\n            WORKING: { role: 'indicator.working', type: 'boolean', required: false, writeable: false },\n            USERICON: { role: 'state', type: 'string', useKey: true, required: false, writeable: false }, // benutzerdefinierter Iconname \u00FCber DP senden\n        },\n    },\n    'level.timer': {\n        name: 'level.timer',\n        description: 'Ein countdown Timer (intern/extern) oder eine Uhrzeit (extern)',\n        data: {\n            ACTUAL: {\n                role: ['value.timer', 'level.timer', 'date'],\n                type: 'number',\n                required: false,\n                trigger: true,\n                writeable: false,\n                description: 'Das wird angezeigt - date in hh:mm, timer in mm:ss',\n            },\n            SET: {\n                role: ['level.timer', 'date'],\n                type: 'number',\n                required: false,\n                writeable: true,\n                description: 'Hier wird ein ge\u00E4nderter Wert hingeschrieben',\n            },\n            STATE: {\n                role: 'button',\n                type: 'boolean',\n                required: false,\n                writeable: true,\n                description: 'wenn die oberen nicht benutzt wird hier getriggert wenn ein interner Timer endet.',\n            },\n            STATUS: {\n                role: 'level.mode',\n                type: 'number',\n                required: false,\n                trigger: true,\n                writeable: true,\n                description: '0: OFF , 1: PAUSE, 2: ON/RUNNING',\n            },\n        },\n    },\n    gate: {\n        name: 'gate',\n        description: '',\n        data: { ACTUAL: { role: 'switch.gate', type: 'boolean', required: true, writeable: false } },\n    },\n    door: {\n        name: 'door',\n        description: '',\n        data: {\n            ACTUAL: { role: 'sensor.door', type: 'boolean', required: true, writeable: false },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, // Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, // Button-Text \u00FCber DP steuern\n        },\n    },\n    'level.mode.fan': {\n        name: 'level.mode.fan',\n        description: '',\n        data: {\n            ACTUAL: { role: 'state', type: 'boolean', required: true, writeable: false },\n            MODE: { role: 'state', type: 'number', required: true, writeable: true },\n            SET: { role: 'state', type: 'boolean', required: true, writeable: true },\n            SPEED: { role: 'state', type: 'number', required: true, writeable: true },\n        },\n    },\n    lock: {\n        name: 'lock',\n        description: 'T\u00FCrschloss',\n        data: {\n            ACTUAL: {\n                role: ['switch.lock', 'state'],\n                type: 'boolean',\n                required: false,\n                writeable: false,\n                trigger: true,\n            },\n            OPEN: { role: 'button', type: 'boolean', required: false, writeable: true },\n            SET: { role: 'switch.lock', type: 'boolean', required: true, writeable: true },\n        },\n    },\n    warning: {\n        name: 'warning',\n        description: '',\n        data: {\n            INFO: { role: 'weather.title', type: 'string', required: true, writeable: false },\n            LEVEL: { role: 'value.warning', type: 'number', required: true, writeable: false },\n            TITLE: { role: 'weather.title.short', type: 'string', required: true, writeable: false },\n        },\n    },\n    weatherforecast: {\n        name: 'weatherforecast',\n        description: '',\n        data: {\n            ICON: { role: 'weather.icon.forecast', type: 'string', required: true, writeable: false },\n            TEMP: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n        },\n    },\n    WIFI: {\n        name: 'WIFI',\n        description: '',\n        data: {\n            ACTUAL: { role: 'state', type: 'string', required: true, writeable: false },\n            SWITCH: { role: 'switch', type: 'boolean', required: false, writeable: true },\n        },\n    },\n};\n"],
  "mappings": "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",
  "names": []
}
