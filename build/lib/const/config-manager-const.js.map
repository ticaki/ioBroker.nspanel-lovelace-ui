{
  "version": 3,
  "sources": ["../../../src/lib/const/config-manager-const.ts"],
  "sourcesContent": ["export const CustomTemplates: ConfigManager.CustomTemplate[] = [\n    {\n        device: 'shutter',\n        states: [\n            { 'button.open.blind': true },\n            { 'button.close.blind': true },\n            { 'button.open.tilt': true },\n            { 'button.close.tilt': true },\n            { 'button.stop.tilt': true },\n            { 'button.stop.blind': true },\n            { 'level.blind': true },\n        ],\n    },\n];\n\n/**\n * Wenn ein State angelegt wird muss gleich ein Namen f\u00FCr das der Device und das Device selbst angegeben werden.\n * Die Seite auf der das Device angezeigt wird, sollte in einem Pick oder wie das hei\u00DFt angegeben werden,\n * Ich denke nicht das ich dort schon bekannte Seiten angeben kann, die anzeigbaren DAten im Custom sind\n * statisch und das pick hat kein sendto. Die Seiten m\u00FCsste man jedoch nur einmal in einem State f\u00FCr ein Device angeben.\n * Also brauche ich an der stelle ein sendToSelect das manuelle eingaben erlaubt. mal testen\n */\n\nexport function isConfig(F: any): F is ScriptConfig.Config {\n    if (F === undefined) {\n        return false;\n    }\n    const requiredFields = [\n        'panelTopic',\n        'weatherEntity',\n        'defaultColor',\n        'defaultOnColor',\n        'defaultOffColor',\n        'defaultBackgroundColor',\n        'pages',\n        'subPages',\n        'button1',\n        'button2',\n        'bottomScreensaverEntity',\n    ];\n\n    for (const field of requiredFields) {\n        if (F[field] === undefined) {\n            return false;\n        }\n    }\n    return true;\n}\nexport const defaultConfig: ScriptConfig.Config = {\n    version: '0',\n    panelTopic: '',\n    weatherEntity: '',\n    bottomScreensaverEntity: [],\n    favoritScreensaverEntity: [],\n    alternateScreensaverEntity: [],\n    defaultOnColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    defaultOffColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    defaultBackgroundColor: {\n        red: 0,\n        green: 0,\n        blue: 0,\n    },\n    pages: [],\n    subPages: [],\n    button1: {\n        mode: null,\n        page: null,\n        entity: null,\n        setValue: null,\n        setOn: undefined,\n        setOff: undefined,\n    },\n    button2: {\n        mode: null,\n        page: null,\n        entity: null,\n        setValue: null,\n        setOn: undefined,\n        setOff: undefined,\n    },\n    leftScreensaverEntity: [],\n    indicatorScreensaverEntity: [],\n    mrIcon1ScreensaverEntity: {\n        type: 'script',\n        ScreensaverEntity: null,\n        ScreensaverEntityIconOn: null,\n        ScreensaverEntityIconSelect: undefined,\n        ScreensaverEntityIconOff: null,\n        ScreensaverEntityValue: null,\n        ScreensaverEntityValueDecimalPlace: null,\n        ScreensaverEntityValueUnit: null,\n        ScreensaverEntityOnColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n        ScreensaverEntityOffColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n    },\n    mrIcon2ScreensaverEntity: {\n        type: 'script',\n        ScreensaverEntity: null,\n        ScreensaverEntityIconOn: null,\n        ScreensaverEntityIconSelect: undefined,\n        ScreensaverEntityIconOff: null,\n        ScreensaverEntityValue: null,\n        ScreensaverEntityValueDecimalPlace: null,\n        ScreensaverEntityValueUnit: null,\n        ScreensaverEntityOnColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n        ScreensaverEntityOffColor: {\n            red: 0,\n            green: 0,\n            blue: 0,\n        },\n    },\n};\n\ntype requiredDatapoints = {\n    [key: string]: {\n        data: {\n            [key: string]: {\n                role:\n                    | (ScriptConfig.roles | ConfigManager.ioBrokerRoles)\n                    | (ScriptConfig.roles | ConfigManager.ioBrokerRoles)[];\n                required: boolean;\n                type: ioBroker.StateCommon['type'];\n                writeable?: boolean;\n                description?: string;\n            };\n        };\n\n        name: string;\n        description: string;\n    };\n};\n\nexport const requiredScriptDataPoints: requiredDatapoints = {\n    motion: {\n        name: 'motion',\n        description: 'Status of the motion sensor or presence detector (motion or presence detected)',\n        data: { ACTUAL: { role: 'sensor.motion', type: 'boolean', required: true, writeable: false } },\n    },\n    //l\u00E4uft im Script mit unter RGBsingle, muss nochmal gepr\u00FCft werden ob sinnvoll\n    /* cie: {\n        name: 'cie',\n        description: '',\n        data: {\n            CIE: { role: 'level.color.cie', type: 'string', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'boolean', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: true, writeable: true },\n        },\n    }, */\n    dimmer: {\n        name: 'dimmer',\n        description: 'Licht ein- / ausschalten und dimmen',\n        data: {\n            SET: { role: 'level.dimmer', type: 'number', required: true, writeable: true },\n            ACTUAL: { role: 'value.dimmer', type: 'number', required: true, writeable: false },\n            ON_SET: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    timeTable: {\n        name: 'timeTable',\n        description: 'F\u00FCr die Anzeige der Abfahrtstafel / Route des Fahrplanadapters',\n        data: {\n            ACTUAL: { role: 'state', type: 'string', required: true, writeable: false },\n            VEHICLE: { role: 'state', type: 'string', required: true, writeable: false },\n            DIRECTION: { role: 'state', type: 'string', required: true, writeable: false },\n            DELAY: { role: 'state', type: 'boolean', required: true, writeable: false },\n        },\n    },\n    ct: {\n        name: 'ct',\n        description: 'f\u00FCr Lampen die das wei\u00DFe Licht zwischen kalt und warm \u00E4ndern k\u00F6nnen',\n        data: {\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: true, writeable: true },\n            VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    window: {\n        name: 'window',\n        description: '',\n        data: {\n            ACTUAL: { role: 'sensor.window', type: 'boolean', required: true, writeable: false },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern\n        },\n    },\n    humidity: {\n        name: 'humidity',\n        description: '',\n        data: { ACTUAL: { role: 'value.humidity', type: 'number', required: true, writeable: false } },\n    },\n    hue: {\n        name: 'hue',\n        description: '',\n        data: {\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: false, writeable: true },\n            HUE: { role: 'level.color.hue', type: 'number', required: true, writeable: true },\n            VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    info: {\n        name: 'info',\n        description: 'Universal Datenpunkt f\u00FCr diverse Anwendungen',\n        data: {\n            ACTUAL: { role: 'state', type: 'mixed', required: true, writeable: false },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP senden\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP senden bei cardEntity\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false }, //Benutzerdefinierte Iconnamen \u00FCber DP senden\n        },\n    },\n    blind: {\n        name: 'blind',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.blind', type: 'number', required: true, writeable: false },\n            SET: { role: 'level.blind', type: 'number', required: true, writeable: true },\n            CLOSE: { role: 'button.close.blind', type: 'boolean', required: true, writeable: true },\n            OPEN: { role: 'button.open.blind', type: 'boolean', required: true, writeable: true },\n            STOP: { role: 'button.stop.blind', type: 'boolean', required: true, writeable: true },\n            TILT_ACTUAL: { role: 'value.tilt', type: 'number', required: false, writeable: false },\n            TILT_SET: { role: 'level.tilt', type: 'number', required: false, writeable: true },\n            TILT_CLOSE: { role: 'button.close.tilt', type: 'boolean', required: false, writeable: true },\n            TILT_OPEN: { role: 'button.open.tilt', type: 'boolean', required: false, writeable: true },\n            TILT_STOP: { role: 'button.stop.tilt', type: 'boolean', required: false, writeable: true },\n        },\n    },\n    airCondition: {\n        name: 'airCondition',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n            SET: { role: 'level.temperature', type: 'number', required: true, writeable: true },\n            SET2: { role: 'level.temperature', type: 'number', required: true, writeable: true },\n            AUTO: { role: 'state', type: 'boolean', required: false, writeable: false },\n            COOL: { role: 'state', type: 'boolean', required: false, writeable: false },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false, writeable: true },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false, writeable: false },\n            HEAT: { role: 'state', type: 'boolean', required: false, writeable: false },\n            HUMINITY: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n            MODE: { role: 'level.mode.airconditioner', type: 'number', required: true, writeable: true },\n            OFF: { role: 'state', type: 'boolean', required: true, writeable: false },\n            POWER: { role: 'switch.power', type: 'boolean', required: false, writeable: true },\n            SPEED: { role: 'level.mode.fan', type: 'number', required: false, writeable: true },\n            SWING: { role: 'switch.mode.swing', type: 'boolean', required: false, writeable: true },\n            UNREACH: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n        },\n    },\n    socket: {\n        name: 'socket',\n        description: 'Steckdosen, Schalter, Relais, usw. schalten',\n        data: {\n            ACTUAL: { role: 'switch', type: 'boolean', required: true, writeable: false },\n            SET: { role: 'switch', type: 'boolean', required: false, writeable: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern bei cardEntity\n            STATE: { role: 'state', type: 'boolean', required: false, writeable: true }, // f\u00FCr monobutton\n        },\n    },\n    light: {\n        name: 'light',\n        description: 'ein Lichtschalter',\n        data: {\n            ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            SET: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, //Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, //Button-Text \u00FCber DP steuern bei cardEntity\n            VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    volume: {\n        name: 'volume',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.volume', type: 'number', required: true, writeable: false },\n            SET: { role: 'level.volume', type: 'number', required: true, writeable: true },\n            MUTE: { role: 'media.mute', type: 'boolean', required: true, writeable: true },\n        },\n    },\n    rgb: {\n        name: 'rgb',\n        description: 'Farblicht mit einzelnen Farbkan\u00E4len',\n        data: {\n            RED: { role: 'level.color.red', type: 'number', required: true, writeable: true },\n            GREEN: { role: 'level.color.green', type: 'number', required: true, writeable: true },\n            BLUE: { role: 'level.color.blue', type: 'number', required: true, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: false, writeable: true },\n            WHITE: { role: 'level.color.white', type: 'number', required: false, writeable: true },\n            VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    rgbSingle: {\n        name: 'rgbSingle',\n        description: 'Farblicht ohne Farbkan\u00E4le',\n        data: {\n            RGB: { role: 'level.color.rgb', type: 'string', required: true, writeable: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true, writeable: true },\n            DIMMER: { role: 'level.dimmer', type: 'number', required: false, writeable: true },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: false, writeable: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true, writeable: false },\n            VALUE: { role: 'state', type: 'number', required: false, writeable: true }, //f\u00FCr popupInSel\n        },\n    },\n    slider: {\n        name: 'slider',\n        description: 'Slider to set a numerical value',\n        data: {\n            SET: { role: 'level', type: 'number', required: true, writeable: true },\n            ACTUAL: { role: 'value', type: 'number', required: true, writeable: false },\n        },\n    },\n    button: {\n        name: 'button',\n        description: 'Switch',\n        data: { SET: { role: 'button', type: 'boolean', required: true, writeable: true } },\n    },\n    buttonSensor: {\n        name: 'buttonSensor',\n        description: 'Taster',\n        data: { ACTUAL: { role: 'button.press', type: 'boolean', required: true, writeable: true } },\n    },\n    temperature: {\n        name: 'temperature',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n            SECOND: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n        },\n    },\n    'value.temperature': {\n        name: 'value.temperature',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n            SECOND: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false }, // benutzerdefinierter Iconname \u00FCber DP senden\n        },\n    },\n    thermostat: {\n        name: 'thermostat',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n            SET: { role: 'level.temperature', type: 'number', required: true, writeable: true },\n            MODE: { role: 'level.mode.thermostat', type: 'number', required: true, writeable: true },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false, writeable: true },\n            AUTOMATIC: { role: 'state', type: 'boolean', required: true },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false, writeable: false },\n            LOWBAT: { role: 'indicator.maintenance.lowbat', type: 'boolean', required: false, writeable: false },\n            MANUAL: { role: 'state', type: 'boolean', required: false },\n            UNREACH: { role: 'indicator.maintenance.unreach', type: 'boolean', required: false, writeable: false },\n            HUMINITY: { role: 'value.humidity', type: 'number', required: false, writeable: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false, writeable: false },\n            PARTY: { role: 'switch.mode.party', type: 'boolean', required: false },\n            POWER: { role: 'switch.power', type: 'boolean', required: false, writeable: true },\n            VACATION: { role: 'state', type: 'boolean', required: false },\n            WINDOWOPEN: { role: ['state', 'sensor.window'], type: 'boolean', required: false, writeable: false },\n            WORKING: { role: 'indicator.working', type: 'boolean', required: false, writeable: false },\n            USERICON: { role: 'state', type: 'string', required: false, writeable: false }, // benutzerdefinierter Iconname \u00FCber DP senden\n        },\n    },\n    'level.timer': {\n        name: 'level.timer',\n        description: '',\n        data: {\n            ACTUAL: { role: 'timestamp', type: 'number', required: true, writeable: true },\n            STATE: { role: 'state', type: 'string', required: true, writeable: true },\n        },\n    },\n    gate: {\n        name: 'gate',\n        description: '',\n        data: { ACTUAL: { role: 'switch.gate', type: 'boolean', required: true, writeable: false } },\n    },\n    door: {\n        name: 'door',\n        description: '',\n        data: {\n            ACTUAL: { role: 'sensor.door', type: 'boolean', required: true, writeable: false },\n            COLORDEC: { role: 'state', type: 'number', required: false, writeable: false }, // Farbcode \u00FCber DP steuern\n            BUTTONTEXT: { role: ['state', 'text'], type: 'string', required: false, writeable: false }, // Button-Text \u00FCber DP steuern\n        },\n    },\n    'level.mode.fan': {\n        name: 'level.mode.fan',\n        description: '',\n        data: {\n            ACTUAL: { role: 'state', type: 'boolean', required: true, writeable: false },\n            MODE: { role: 'state', type: 'number', required: true, writeable: true },\n            SET: { role: 'state', type: 'boolean', required: true, writeable: true },\n            SPEED: { role: 'state', type: 'number', required: true, writeable: true },\n        },\n    },\n    lock: {\n        name: 'lock',\n        description: 'T\u00FCrschloss',\n        data: {\n            ACTUAL: { role: 'state', type: 'boolean', required: true, writeable: false },\n            OPEN: { role: 'state', type: 'boolean', required: false, writeable: false },\n            SET: { role: 'switch.lock', type: 'boolean', required: true, writeable: true },\n        },\n    },\n    warning: {\n        name: 'warning',\n        description: '',\n        data: {\n            INFO: { role: 'weather.title', type: 'string', required: true, writeable: false },\n            LEVEL: { role: 'value.warning', type: 'number', required: true, writeable: false },\n            TITLE: { role: 'weather.title.short', type: 'string', required: true, writeable: false },\n        },\n    },\n    weatherforecast: {\n        name: 'weatherforecast',\n        description: '',\n        data: {\n            ICON: { role: 'weather.icon.forecast', type: 'string', required: true, writeable: false },\n            TEMP: { role: 'value.temperature', type: 'number', required: true, writeable: false },\n        },\n    },\n    WIFI: {\n        name: 'WIFI',\n        description: '',\n        data: {\n            ACTUAL: { role: 'state', type: 'string', required: true, writeable: false },\n            SWITCH: { role: 'switch', type: 'boolean', required: false, writeable: true },\n        },\n    },\n};\n\nexport const requiredFeatureDatapoints: requiredDatapoints = {\n    cie: {\n        name: 'cie',\n        description: '',\n        data: {\n            CIE: { role: 'level.color.cie', type: 'string', required: true },\n            DIMMER: { role: 'level.dimmer', type: 'boolean', required: true },\n            ON: { role: 'switch.light', type: 'boolean', required: true },\n            ON_ACTUAL: { role: 'sensor.light', type: 'boolean', required: true },\n            TEMPERATURE: { role: 'level.color.temperature', type: 'number', required: true },\n        },\n    },\n    timeTable: {\n        name: 'timeTable',\n        description: '',\n        data: {\n            ACTUAL: { role: 'text', type: 'string', required: true },\n            VEHICLE: { role: 'text', type: 'string', required: true },\n            DIRECTION: { role: 'text', type: 'string', required: true },\n            DELAY: { role: 'indicator', type: 'boolean', required: true },\n        },\n    },\n    info: { name: 'info', description: '', data: { ACTUAL: { role: 'text', type: 'string', required: true } } },\n    airCondition: {\n        name: 'airCondition',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true },\n            SET: { role: 'level.temperature', type: 'number', required: true },\n            AUTO: { role: 'switch', type: 'boolean', required: false },\n            COOL: { role: 'switch', type: 'boolean', required: false },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false },\n            HEAT: { role: 'switch', type: 'boolean', required: false },\n            HUMINITY: { role: 'value.humidity', type: 'number', required: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false },\n            MODE: { role: 'level.mode.airconditioner', type: 'number', required: true },\n            OFF: { role: 'switch', type: 'boolean', required: true },\n            POWER: { role: 'switch.power', type: 'boolean', required: false },\n            SPEED: { role: 'level.mode.fan', type: 'number', required: false },\n            SWING: { role: 'switch.mode.swing', type: 'boolean', required: false },\n            UNREACH: { role: 'indicator.maintenance.unreach', type: 'boolean', required: false },\n        },\n    },\n    gate: {\n        name: 'gate',\n        description: '',\n        data: {\n            ACTUAL: { role: ['value.blind', 'value.blind'], type: 'number', required: true, writeable: false },\n            SET: { role: 'switch.gate', type: 'boolean', required: true, writeable: true },\n            STOP: { role: 'button.stop', type: 'boolean', required: true, writeable: true },\n        },\n    },\n    thermostat: {\n        name: 'thermostat',\n        description: '',\n        data: {\n            ACTUAL: { role: 'value.temperature', type: 'number', required: true },\n            SET: { role: 'level.temperature', type: 'number', required: true },\n            MODE: { role: 'level.mode.thermostat', type: 'number', required: true },\n            BOOST: { role: 'switch.mode.boost', type: 'boolean', required: false },\n            AUTOMATIC: { role: 'switch.mode.auto', type: 'boolean', required: true },\n            ERROR: { role: 'indicator.error', type: 'boolean', required: false },\n            LOWBAT: { role: 'indicator.maintenance.lowbat', type: 'boolean', required: false },\n            MANUAL: { role: 'switch.mode.manual', type: 'boolean', required: false },\n            UNREACH: { role: 'indicator.maintenance.unreach', type: 'boolean', required: false },\n            HUMINITY: { role: 'value.humidity', type: 'number', required: false },\n            MAINTAIN: { role: 'indicator.maintenance', type: 'boolean', required: false },\n            PARTY: { role: 'switch.mode.party', type: 'boolean', required: false },\n            POWER: { role: 'switch.power', type: 'boolean', required: false },\n            VACATION: { role: 'switch', type: 'boolean', required: false },\n            WINDOWOPEN: { role: 'sensor.window', type: 'boolean', required: false },\n            WORKING: { role: 'indicator.working', type: 'boolean', required: false },\n        },\n    },\n};\n"],
  "mappings": "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",
  "names": []
}
