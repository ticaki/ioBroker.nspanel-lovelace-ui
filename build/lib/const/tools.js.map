{
  "version": 3,
  "sources": ["../../../src/lib/const/tools.ts"],
  "sourcesContent": ["import { Dataitem } from '../classes/data-item';\nimport {\n    ChangeTypeOfPageItem,\n    ColorEntryType,\n    IconEntryType,\n    MessageItem,\n    PageItemLightDataItems,\n    TextEntryType,\n    ValueEntryType,\n    messageItemAllInterfaces,\n} from '../types/type-pageItem';\nimport { ChangeTypeOfKeys } from './definition';\nimport { Library } from '../classes/library';\nimport { RGB } from '../types/Color';\nimport { HMIOff, HMIOn, Interpolate, White, hsv2rgb, rgb_dec565, scale } from './Color';\nimport { Icons } from './icon_mapping';\n\nexport const messageItemDefault: MessageItem = {\n    type: 'input_sel',\n    intNameEntity: '',\n    icon: '',\n    iconColor: '',\n    displayName: '',\n    optionalValue: '',\n};\n\nexport async function getValueEntryNumber(\n    i: ChangeTypeOfPageItem<ValueEntryType, Dataitem | undefined>,\n): Promise<number | null> {\n    if (!i) return null;\n    const nval = i.value && (await i.value.getNumber());\n    if (nval !== null && nval !== undefined) {\n        let res = nval * ((i.factor && (await i.factor.getNumber())) ?? 1);\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) {\n                res = scale(res, min, max, 0, 100);\n            }\n        }\n        return res;\n    }\n    return null;\n}\n\nexport async function getIconEntryValue(\n    i: ChangeTypeOfPageItem<IconEntryType, Dataitem | undefined>,\n    on: boolean | null,\n    def: string,\n    defOff: string | null = null,\n): Promise<string> {\n    on = on ?? true;\n    if (!i) return Icons.GetIcon(on ? def : defOff ?? def);\n    const icon = i.true.value && (await i.true.value.getString());\n    if (!on) {\n        return Icons.GetIcon((i.false.value && (await i.false.value.getString())) ?? defOff ?? icon ?? def);\n    }\n    return Icons.GetIcon(icon ?? def);\n}\nexport async function getIconEntryColor(\n    i: ChangeTypeOfPageItem<IconEntryType, Dataitem | undefined>,\n    on: boolean | number | null,\n    def: string | RGB | number,\n    defOff: string | RGB | null = null,\n): Promise<string> {\n    on = on ?? true;\n    if (typeof def === 'number') def = String(def);\n    else if (typeof def !== 'string') def = String(rgb_dec565(def));\n\n    if (typeof defOff === 'number') defOff = String(def);\n    else if (defOff === null) defOff = null;\n    else if (typeof defOff !== 'string') defOff = String(rgb_dec565(defOff));\n\n    if (!i) return def;\n    const icon = i.true.color && (await i.true.color.getRGBDec());\n    if (!on) {\n        return (i.false.color && (await i.false.color.getRGBDec())) ?? defOff ?? icon ?? def;\n    }\n    return icon ?? def;\n}\nexport async function GetIconColor(\n    item: ChangeTypeOfPageItem<IconEntryType, Dataitem | undefined>,\n    value: boolean | number | null,\n    def: string | RGB | number = HMIOn,\n    defOff: string | RGB | number = HMIOff,\n    useColor: boolean = true,\n    interpolateColor: boolean = true,\n    min: number | null = null,\n    max: number | null = null,\n): Promise<string> {\n    // dimmer\n    const defRGB = typeof def === 'object' ? def : null;\n    def = typeof def === 'string' ? def : typeof def === 'number' ? String(def) : String(rgb_dec565(def));\n    if (item === undefined || value === null) return def;\n    const defOffRGB = typeof defOff === 'object' ? defOff : null;\n    const newDefOff: string | null =\n        defOff === null\n            ? null\n            : typeof def === 'string'\n              ? def\n              : typeof def === 'number'\n                ? String(def)\n                : String(rgb_dec565(def));\n\n    const onColor = item.true.color && (await item.true.color.getRGBValue());\n    const offColor = item.false.color && (await item.false.color.getRGBValue());\n    if (useColor && interpolateColor && typeof value === 'number') {\n        let val: number = typeof value === 'number' ? value : 0;\n        const maxValue = ((item.maxBri && (await item.maxBri.getNumber())) || max) ?? 100;\n        const minValue = ((item.minBri && (await item.minBri.getNumber())) || min) ?? 0;\n        val = val > maxValue ? maxValue : val;\n        val = val < minValue ? minValue : val;\n\n        return String(\n            rgb_dec565(\n                Interpolate(\n                    offColor ? offColor : defOffRGB ?? HMIOff,\n                    onColor ? onColor : defRGB ?? HMIOn,\n                    scale(100 - val, minValue, maxValue, 0, 1),\n                ),\n            ),\n        );\n    }\n    if (\n        (useColor && typeof value === 'boolean' && value) ||\n        (typeof value === 'number' && value > ((item.minBri !== undefined && (await item.minBri.getNumber())) || 0))\n    ) {\n        return onColor ? String(rgb_dec565(onColor)) : def;\n    }\n    return offColor ? String(rgb_dec565(offColor)) : newDefOff ?? def;\n}\n\nexport async function getEntryColor(\n    i: ChangeTypeOfPageItem<ColorEntryType, Dataitem | undefined>,\n    value: boolean | number,\n    def: string | number | RGB,\n): Promise<string> {\n    if (typeof def === 'number') def = String(def);\n    else if (typeof def !== 'string') def = String(rgb_dec565(def));\n    if (!i) return def;\n    const icon = i.true && (await i.true.getRGBDec());\n    if (!value) {\n        return (i.false && (await i.false.getRGBDec())) ?? icon ?? def;\n    }\n    return icon ?? def;\n}\nexport async function getEntryTextOnOff(\n    i: ChangeTypeOfKeys<TextEntryType, Dataitem | undefined> | undefined,\n    on: boolean | null,\n): Promise<string | null> {\n    if (!i) return null;\n    const value = i.true && (await i.true.getString());\n    if (!(on ?? true)) {\n        return (i.false && (await i.false.getString())) ?? value ?? null;\n    }\n    return value ?? null;\n}\n\nexport async function getValueEntryBoolean(\n    i: ChangeTypeOfPageItem<ValueEntryType, Dataitem | undefined> | undefined,\n): Promise<boolean | null> {\n    if (!i) return null;\n    const nval = i.value && (await i.value.getBoolean());\n    if (nval !== undefined) {\n        return nval;\n    }\n    return null;\n}\n\nexport async function getValueEntryString(\n    i: ChangeTypeOfPageItem<ValueEntryType, Dataitem | undefined> | undefined,\n): Promise<string | null> {\n    if (!i || !i.value) return null;\n    const nval = await getValueEntryNumber(i);\n    if (nval !== null && nval !== undefined) {\n        const d = (i.decimal && (await i.decimal.getNumber())) ?? null;\n        let result: string = String(nval);\n        if (d !== null) {\n            result = nval.toFixed(d);\n        }\n        return result + ((i.unit && (await i.unit.getString())) ?? '');\n    }\n    const res = await i.value.getString();\n    if (res != null) res + ((i.unit && (await i.unit.getString())) ?? '');\n    return res;\n}\n\nexport function getTranslation(library: Library, key1: any | string, key2?: string): string {\n    let result = key2 ?? key1;\n    if (key2 !== undefined) {\n        result = library.getLocalTranslation(key1, key2);\n    }\n    result = library.getTranslation(result || key1);\n    return result;\n}\n\nexport const getDecfromRGBThree = async (item: PageItemLightDataItems['data']): Promise<string | null> => {\n    if (!item) return String(rgb_dec565(White));\n    const red = (item.Red && (await item.Red.getNumber())) ?? -1;\n    const green = (item.Green && (await item.Green.getNumber())) ?? -1;\n    const blue = (item.Blue && (await item.Blue.getNumber())) ?? -1;\n    if (red === -1 || blue === -1 || green === -1) return null;\n    return String(rgb_dec565({ red, green, blue }));\n};\n\nexport const getDecfromHue = async (item: PageItemLightDataItems['data']): Promise<string | null> => {\n    if (!item || !item.hue) return null;\n    const hue = await item.hue.getNumber();\n    let saturation = Math.abs((item.saturation && (await item.saturation.getNumber())) ?? 1);\n    if (saturation > 1) saturation = 1;\n    if (hue === null) return null;\n    const arr = hsv2rgb(hue, saturation, 1);\n    return String(rgb_dec565({ red: arr[0], green: arr[1], blue: arr[2] }));\n};\n\nexport function formatInSelText(Text: string[] | string): string {\n    let splitText = Text;\n    if (!Array.isArray(splitText)) splitText = splitText.split(' ');\n    let lengthLineOne = 0;\n    const arrayLineOne: string[] = [];\n    for (let i = 0; i < splitText.length; i++) {\n        lengthLineOne += splitText[i].length + 1;\n        if (lengthLineOne > 12) {\n            break;\n        } else {\n            arrayLineOne[i] = splitText[i];\n        }\n    }\n    const textLineOne = arrayLineOne.join(' ');\n    const arrayLineTwo: string[] = [];\n    for (let i = arrayLineOne.length; i < splitText.length; i++) {\n        arrayLineTwo[i] = splitText[i];\n    }\n    let textLineTwo = arrayLineTwo.join(' ');\n    if (textLineTwo.length > 12) {\n        textLineTwo = textLineTwo.substring(0, 9) + '...';\n    }\n    if (textLineOne.length != 0) {\n        return textLineOne + '\\r\\n' + textLineTwo.trim();\n    } else {\n        return textLineTwo.trim();\n    }\n}\n\n/**\n * Create a part of the panel messsage for bottom icons. if event === '' u get '~~~~~~'.\n * default for event: input_sel\n * @param msg {Partial<MessageItem>}\n * @returns string\n */\nexport function getItemMesssage(msg: Partial<messageItemAllInterfaces> | undefined): string {\n    if (!msg || !msg.intNameEntity || !msg.type) return '~~~~~';\n    const id: string[] = [];\n    if (msg.mainId) id.push(msg.mainId);\n    if (msg.subId) id.push(msg.subId);\n    if (msg.intNameEntity) id.push(msg.intNameEntity);\n    return getPayload(\n        msg.type ?? messageItemDefault.type,\n        id.join('?') ?? messageItemDefault.intNameEntity,\n        msg.icon ?? messageItemDefault.icon,\n        msg.iconColor ?? messageItemDefault.iconColor,\n        msg.displayName ?? messageItemDefault.displayName,\n        msg.optionalValue ?? messageItemDefault.optionalValue,\n    );\n}\n\nexport function getPayloadArray(s: (string | any)[]): string {\n    return s.join('~');\n}\nexport function getPayload(...s: string[]): string {\n    return s.join('~');\n}\n"],
  "mappings": "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",
  "names": ["import_Color"]
}
