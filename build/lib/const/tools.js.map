{
  "version": 3,
  "sources": ["../../../src/lib/const/tools.ts"],
  "sourcesContent": ["import { isDataItem, type Dataitem } from '../classes/data-item';\nimport type {\n    ColorEntryType,\n    ColorEntryTypeNew,\n    IconEntryType,\n    MessageItem,\n    PageItemLightDataItems,\n    ScaledNumberType,\n    TextEntryType,\n    TextEntryType2,\n    TextSizeEntryType,\n    ValueEntryType,\n} from '../types/type-pageItem';\nimport type { Library } from '../classes/library';\nimport { Color, type RGB } from '../const/Color';\nimport { Icons } from './icon_mapping';\nimport type { ChangeTypeOfKeys } from '../types/pages';\nimport {\n    type IconColorElement,\n    isIconColorScaleElement,\n    isPartialColorScaleElement,\n    isPartialIconSelectScaleElement,\n    isValueDateFormat,\n} from '../types/types';\n\nexport const messageItemDefault: MessageItem = {\n    type: 'input_sel',\n    intNameEntity: '',\n    icon: '',\n    iconColor: '',\n    displayName: '',\n    optionalValue: '',\n};\nexport function ifValueEntryIs(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined>,\n    type: ioBroker.CommonType,\n): boolean {\n    if (i && i.value && i.value.type) {\n        return i.value.type === type;\n    }\n    return false;\n}\n\nexport async function setValueEntry(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined>,\n    value: number | boolean | string,\n    sca: boolean = true,\n): Promise<void> {\n    if (!i || !i.value) {\n        return;\n    }\n\n    let res: number | boolean | string = value;\n    if (typeof value === 'number') {\n        res = value / ((i.factor && (await i.factor.getNumber())) ?? 1);\n        if (sca && i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) {\n                res = Math.round(Color.scale(res, 0, 100, min, max));\n            }\n        }\n    }\n    if (i.set && i.set.writeable) {\n        await i.set.setStateAsync(res);\n    } else if (i.value.writeable) {\n        await i.value.setStateAsync(res);\n    } else if (i.set || i.value) {\n        const t = i.set || i.value;\n        t.log.warn(t.name || '???' + ' is not writeable');\n    }\n}\nexport async function getValueEntryNumber(\n    i: ChangeTypeOfKeys<ValueEntryType | ScaledNumberType, Dataitem | undefined>,\n    s: boolean = true,\n): Promise<number | null> {\n    if (!i) {\n        return null;\n    }\n    const nval = i.value && (await i.value.getNumber());\n    if (nval !== null && nval !== undefined) {\n        let res = nval * ((i.factor && (await i.factor.getNumber())) ?? 1);\n        if (s && i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) {\n                res = Color.scale(res, min, max, 0, 100);\n            }\n        }\n        const d = ('decimal' in i && i.decimal && (await i.decimal.getNumber())) ?? null;\n        if (d !== null && d !== false) {\n            res = Math.round(res * 10 ** d) / 10 ** d;\n        }\n        return res;\n    }\n    return null;\n}\nfunction getScaledNumberRaw(\n    n: number,\n    min: number | null,\n    max: number | null,\n    oldValue: number | null | false = null,\n): number {\n    if (min !== null && max !== null) {\n        if (oldValue === null) {\n            n = Math.round(Color.scale(n, min, max, 0, 100));\n        } else {\n            n = Color.scale(n, 0, 100, min, max);\n            if (oldValue !== false) {\n                if (oldValue >= n) {\n                    n = Math.floor(n);\n                } else {\n                    n = Math.ceil(n);\n                }\n            } else {\n                n = Math.round(n);\n            }\n        }\n    }\n    return n;\n}\n\nexport async function getScaledNumber(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n): Promise<number | null> {\n    if (!i) {\n        return null;\n    }\n    let nval = i.value && (await i.value.getNumber());\n    if (nval !== null && nval !== undefined) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            nval = getScaledNumberRaw(nval, min, max);\n        }\n        return nval;\n    }\n    return null;\n}\n\nexport async function getTemperaturColorFromValue(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n    dimmer: number = 100,\n): Promise<string | null> {\n    if (!i) {\n        return null;\n    }\n    let nval = i.value && (await i.value.getNumber());\n    const mode = i.mode && (await i.mode.getString());\n    let kelvin = 3500;\n    if (nval !== null && nval !== undefined) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            nval = getScaledNumberRaw(nval, min, max);\n        }\n        if (mode === 'mired') {\n            kelvin = 10 ** 6 / nval;\n        } else {\n            kelvin = nval;\n        }\n        kelvin = kelvin > 7000 ? 7000 : kelvin < 1800 ? 1800 : kelvin;\n\n        let r = Color.kelvinToRGB[Math.trunc(kelvin / 100) * 100];\n        r = Color.darken(r, Color.scale(dimmer, 100, 0, 0, 1));\n        return r ? String(Color.rgb_dec565(r)) : null;\n    }\n    return null;\n}\n\nexport async function getSliderCTFromValue(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n): Promise<string | null> {\n    if (!i) {\n        return null;\n    }\n    let nval = i.value && (await i.value.getNumber());\n    const mode = i.mode && (await i.mode.getString());\n    let r = 3500;\n    if (nval !== null && nval !== undefined) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) {\n                nval = Math.round(Color.scale(nval, max, min, 1800, 7000));\n            }\n        } else if (i.value && i.value.common && i.value.common.min !== undefined && i.value.common.max !== undefined) {\n            if (mode === 'mired') {\n                nval = Math.round(Color.scale(nval, i.value.common.max, i.value.common.min, 1800, 7000));\n            } else {\n                nval = Math.round(Color.scale(nval, i.value.common.min, i.value.common.max, 1800, 7000));\n            }\n        }\n        if (mode === 'mired') {\n            r = 10 ** 6 / nval;\n        } else {\n            r = nval;\n        }\n        r = r > 7000 ? 7000 : r < 1800 ? 1800 : r;\n\n        r = getScaledNumberRaw(r, 1800, 7000);\n        return r !== null ? String(r) : null;\n    }\n    return null;\n}\nexport async function setSliderCTFromValue(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n    value: number,\n): Promise<void> {\n    if (!i || !i.value) {\n        return;\n    }\n    const nval = (i.value && (await i.value.getNumber())) ?? null;\n    const mode = i.mode && (await i.mode.getString());\n    //value = 100 - value;\n    if (nval !== null) {\n        let r = getScaledNumberRaw(value, 1800, 7000, false);\n        r = r > 7000 ? 7000 : r < 1800 ? 1800 : r;\n        if (mode === 'mired') {\n            r = 10 ** 6 / r;\n        }\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) {\n                r = Math.round(Color.scale(nval, 7000, 1800, min, max));\n            }\n        }\n        if (i.value && i.value.common && i.value.common.min !== undefined && i.value.common.max !== undefined) {\n            if (mode === 'mired') {\n                r = Math.round(Color.scale(r, i.value.common.max, i.value.common.min, 1800, 7000));\n            } else {\n                r = Math.round(Color.scale(r, i.value.common.min, i.value.common.max, 1800, 7000));\n            }\n        }\n        if (i.set && i.set.writeable) {\n            await i.value.setStateAsync(r);\n        } else if (nval !== value) {\n            await i.value.setStateAsync(r);\n        }\n    }\n}\n\nexport async function setScaledNumber(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n    value: number,\n): Promise<void> {\n    if (!i || !i.value) {\n        return;\n    }\n    const nval = (await i.value.getNumber()) ?? null;\n    if (nval !== null) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            value = getScaledNumberRaw(value, await i.minScale.getNumber(), await i.maxScale.getNumber(), value);\n        }\n        if (i.set && i.set.writeable) {\n            await i.set.setStateAsync(value);\n        } else if (nval !== value) {\n            await i.value.setStateAsync(value);\n        }\n    }\n}\n\nexport async function getIconEntryValue(\n    i: ChangeTypeOfKeys<IconEntryType, Dataitem | undefined> | undefined,\n    on: boolean | number | null,\n    def: string,\n    defOff: string | null = null,\n    getText: boolean = false,\n): Promise<string> {\n    if (i === undefined) {\n        return '';\n    }\n    on = on ?? true;\n    if (!i) {\n        return Icons.GetIcon(on ? def : defOff || def);\n    }\n\n    const text = getText ? (i.true && i.true.text && (await getValueEntryString(i.true.text))) || null : null;\n    if (text !== null) {\n        const textFalse = (i.false && i.false.text && (await getValueEntryString(i.false.text))) || null;\n        if (typeof on === 'number' && textFalse !== null) {\n            const scale = i.scale && (await i.scale.getObject());\n            if (isPartialColorScaleElement(scale)) {\n                if ((scale.val_min && scale.val_min >= on) || (scale.val_max && scale.val_max <= on)) {\n                    return text;\n                }\n                textFalse;\n            }\n        }\n        if (!on) {\n            return textFalse || text;\n        }\n        return text;\n    }\n    const icon = (i.true && i.true.value && (await i.true.value.getString())) || null;\n    const scaleM = i.scale && (await i.scale.getObject());\n\n    if (typeof on === 'boolean') {\n        const scale = isPartialIconSelectScaleElement(scaleM) ? scaleM : { valIcon_min: 0, valIcon_max: 1 };\n\n        if (scale.valIcon_min === 1 && scale.valIcon_max === 0) {\n            on = !on;\n        }\n        if (scale.valIcon_best !== undefined && scale.valIcon_best == 0) {\n            on = !on;\n        }\n        if (!on) {\n            return Icons.GetIcon(\n                (i.false && i.false.value && (await i.false.value.getString())) || defOff || icon || def,\n            );\n        }\n    } else if (typeof on === 'number') {\n        const scale = isPartialIconSelectScaleElement(scaleM) ? scaleM : { valIcon_min: 0, valIcon_max: 1 };\n        const swap = scale.valIcon_min > scale.valIcon_max;\n        const min = swap ? scale.valIcon_max : scale.valIcon_min;\n        const max = swap ? scale.valIcon_min : scale.valIcon_max;\n        if (min < on && max > on) {\n            return Icons.GetIcon(\n                (i.unstable && i.unstable.value && (await i.unstable.value.getString())) || icon || def,\n            );\n        } else if ((!swap && max > on) || (swap && min < on)) {\n            return Icons.GetIcon(\n                (i.false && i.false.value && (await i.false.value.getString())) || defOff || icon || def,\n            );\n        }\n    }\n    return Icons.GetIcon(icon ?? def);\n}\n\nexport async function getIconEntryColor(\n    i: ChangeTypeOfKeys<ColorEntryTypeNew, Dataitem | undefined> | undefined,\n    value: boolean | number | null,\n    def: string | RGB | number,\n    defOff: string | RGB | null = null,\n): Promise<string> {\n    value = value ?? true;\n    if (typeof def === 'number') {\n        def = Color.decToRgb(def);\n    } else if (typeof def === 'string') {\n        def = Color.decToRgb(parseInt(def));\n    }\n\n    if (typeof defOff === 'number') {\n        defOff = Color.decToRgb(defOff);\n    } else if (defOff === null) {\n        defOff = null;\n    } else if (typeof defOff === 'string') {\n        defOff = Color.decToRgb(parseInt(defOff));\n    }\n\n    if (!i) {\n        return String(Color.rgb_dec565(def));\n    }\n    if (typeof value === 'boolean') {\n        const color = i.true && i.true.color && (await i.true.color.getRGBDec());\n        const scale = i.scale && (await i.scale.getObject());\n        if (scale) {\n            if (isIconColorScaleElement(scale)) {\n                if (scale.val_min === 1 && scale.val_max === 0) {\n                    value = !value;\n                }\n                if (scale.val_best !== undefined && scale.val_best == 0) {\n                    value = !value;\n                }\n            }\n        }\n        if (!value) {\n            return (\n                (i.false && i.false.color && (await i.false.color.getRGBDec())) ??\n                (defOff && String(Color.rgb_dec565(defOff))) ??\n                color ??\n                String(Color.rgb_dec565(def))\n            );\n        }\n        return color ?? String(Color.rgb_dec565(def));\n    } else if (typeof value === 'number') {\n        let cto = i.true && i.true.color && (await i.true.color.getRGBValue());\n        let cfrom = i.false && i.false.color && (await i.false.color.getRGBValue());\n        const scale = i.scale && (await i.scale.getObject());\n        if (cto && cfrom && scale) {\n            let rColor: RGB = cto;\n            if (isIconColorScaleElement(scale)) {\n                let vMin = scale.val_min < value ? scale.val_min : value;\n                let vMax = scale.val_max > value ? scale.val_max : value;\n                if (vMax < vMin) {\n                    const temp = vMax;\n                    vMax = vMin;\n                    vMin = temp;\n                    const temp2 = cto;\n                    cto = cfrom;\n                    cfrom = temp2;\n                }\n                let vBest = scale.val_best ?? undefined;\n                vBest = vBest !== undefined ? Math.min(vMax, Math.max(vMin, vBest)) : undefined;\n                let factor = 1;\n                const func =\n                    scale.mode === 'hue'\n                        ? Color.mixColorHue\n                        : scale.mode === 'cie'\n                          ? Color.mixColorCie\n                          : scale.mode === 'triGrad'\n                            ? Color.perc2color\n                            : Color.mixColor;\n                if (vMin == vMax) {\n                    rColor = cto;\n                } else if (vBest === undefined) {\n                    factor = (value - vMin) / (vMax - vMin);\n                    factor = Math.min(1, Math.max(0, factor));\n                    factor = getLogFromIconScale(scale, factor);\n                    rColor = func(cfrom, cto, factor);\n                } else if (value >= vBest) {\n                    cfrom = scale.val_best !== undefined && scale.color_best ? scale.color_best : cfrom;\n                    factor = 1 - (value - vBest) / (vMax - vBest);\n                    factor = Math.min(1, Math.max(0, factor));\n                    factor = getLogFromIconScale(scale, factor);\n                    rColor = func(cfrom, cto, factor);\n                } else {\n                    cto = scale.val_best !== undefined && scale.color_best ? scale.color_best : cto;\n                    factor = (value - vMin) / (vBest - vMin);\n                    factor = Math.min(1, Math.max(0, factor));\n                    factor = 1 - getLogFromIconScale(scale, 1 - factor);\n                    rColor = func(cfrom, cto, factor);\n                }\n                return String(Color.rgb_dec565(rColor));\n            } else if (isPartialColorScaleElement(scale)) {\n                if ((scale.val_min && scale.val_min >= value) || (scale.val_max && scale.val_max <= value)) {\n                    return String(Color.rgb_dec565(cto));\n                }\n                String(Color.rgb_dec565(cfrom));\n            }\n        }\n        if (value) {\n            if (cto) {\n                return String(Color.rgb_dec565(cto));\n            }\n        } else if (cfrom) {\n            return String(Color.rgb_dec565(cfrom));\n        } else if (cto) {\n            return String(Color.rgb_dec565(cto));\n        }\n    }\n    return String(Color.rgb_dec565(def));\n}\n\nfunction getLogFromIconScale(i: IconColorElement, factor: number): number {\n    if (i.log10 !== undefined) {\n        if (i.log10 === 'max') {\n            factor = factor * (90 / 10) + 1;\n            factor = factor < 1 ? 1 : factor > 10 ? 10 : factor;\n            factor = Math.log10(factor);\n        } else {\n            factor = (1 - factor) * (90 / 10) + 1;\n            factor = factor < 1 ? 1 : factor > 10 ? 10 : factor;\n            factor = Math.log10(factor);\n            factor = 1 - factor;\n        }\n    }\n    return factor;\n}\nexport async function GetIconColor(\n    item: ChangeTypeOfKeys<IconEntryType, Dataitem | undefined> | undefined | RGB,\n    value: boolean | number | null,\n    min: number | null = null,\n    max: number | null = null,\n    offColor: RGB | null = null,\n): Promise<string> {\n    // dimmer\n    if (item === undefined) {\n        return '';\n    }\n    if (Color.isRGB(item)) {\n        const onColor = item;\n        if (typeof value === 'number') {\n            let val: number = typeof value === 'number' ? value : 0;\n            const maxValue = max ?? 100;\n            const minValue = min ?? 0;\n            val = val > maxValue ? maxValue : val;\n            val = val < minValue ? minValue : val;\n            return String(\n                Color.rgb_dec565(\n                    !offColor\n                        ? Color.darken(onColor ? onColor : Color.HMIOn, Color.scale(val, maxValue, minValue, 0, 1))\n                        : Color.Interpolate(\n                              offColor,\n                              onColor ? onColor : Color.HMIOn,\n                              Color.scale(val, maxValue, minValue, 0, 1),\n                          ),\n                ),\n            );\n        }\n        if (value) {\n            return String(Color.rgb_dec565(onColor ? onColor : Color.HMIOn));\n        }\n        return String(Color.rgb_dec565(offColor ? offColor : Color.HMIOff));\n    }\n    const onColor = item.true && item.true.color && (await item.true.color.getRGBValue());\n    offColor = (item.false && item.false.color && (await item.false.color.getRGBValue())) || null;\n    if (typeof value === 'number') {\n        let val: number = typeof value === 'number' ? value : 0;\n        const maxValue = ((item.maxBri && (await item.maxBri.getNumber())) || max) ?? 100;\n        const minValue = ((item.minBri && (await item.minBri.getNumber())) || min) ?? 0;\n        val = val > maxValue ? maxValue : val;\n        val = val < minValue ? minValue : val;\n        return String(\n            Color.rgb_dec565(\n                !offColor\n                    ? Color.darken(onColor ? onColor : Color.HMIOn, Color.scale(val, maxValue, minValue, 0, 1))\n                    : Color.Interpolate(\n                          offColor,\n                          onColor ? onColor : Color.HMIOn,\n                          Color.scale(val, maxValue, minValue, 0, 1),\n                      ),\n            ),\n        );\n    }\n\n    if (value) {\n        return String(Color.rgb_dec565(onColor ? onColor : Color.HMIOn));\n    }\n    return String(Color.rgb_dec565(offColor ? offColor : Color.HMIOff));\n}\n\nexport async function getEntryColor(\n    i: ChangeTypeOfKeys<ColorEntryType, Dataitem | undefined> | undefined,\n    value: boolean | number,\n    def: string | number | RGB,\n): Promise<string> {\n    if (i === undefined) {\n        return '';\n    }\n    if (typeof def === 'number') {\n        def = String(def);\n    } else if (typeof def !== 'string') {\n        def = String(Color.rgb_dec565(def));\n    }\n    if (!i) {\n        return def;\n    }\n    const color = i.true && (await i.true.getRGBDec());\n    if (!value) {\n        return (i.false && (await i.false.getRGBDec())) ?? color ?? def;\n    }\n    return color ?? def;\n}\nexport async function getEntryTextOnOff(\n    i: ChangeTypeOfKeys<TextEntryType | TextEntryType2, Dataitem | undefined> | undefined | Dataitem,\n    on: boolean | number | null,\n    useCommon: boolean = false,\n): Promise<string | null> {\n    if (!i) {\n        return null;\n    }\n    if (typeof on === 'number') {\n        on = on > 0;\n    }\n    let value = '';\n    let v: string | null = null;\n    if (!isDataItem(i)) {\n        if (isDataItem(i.true)) {\n            //i = i as ChangeTypeOfKeys<TextEntryType, Dataitem>;\n            v = (i.true && (await i.true.getString())) ?? null;\n            if (useCommon) {\n                const states =\n                    ((i.true && i.true.common && i.true.common.states) as Record<string, string> | string[]) ?? null;\n                if (states && v !== null && typeof states === 'object') {\n                    if (!Array.isArray(states)) {\n                        v = states[v] ?? v;\n                    } else if (!isNaN(Number(v))) {\n                        v = states[Number(v)] ?? v;\n                    }\n                }\n            }\n            value = v ?? '';\n        } else {\n            value = (i.true && i.true.prefix && (await i.true.prefix.getString())) ?? '';\n            v = (i.true && i.true.value && (await i.true.value.getString())) ?? null;\n            value += v ?? '';\n            value += (i.true && i.true.suffix && (await i.true.suffix.getString())) ?? '';\n        }\n        if (!(on ?? true)) {\n            let value2 = '';\n            let v2: string | null = null;\n            if (isDataItem(i.false)) {\n                v2 = (i.false && (await i.false.getString())) ?? null;\n                if (useCommon) {\n                    const states =\n                        ((i.false && i.false.common && i.false.common.states) as Record<string, string> | string[]) ??\n                        null;\n                    if (states && v2 !== null && typeof states === 'object') {\n                        if (!Array.isArray(states)) {\n                            v2 = states[v2] ?? v2;\n                        } else if (!isNaN(Number(v2))) {\n                            v2 = states[Number(v2)] ?? v2;\n                        }\n                    }\n                }\n                value2 = v2 ?? '';\n            } else {\n                value2 = (i.false && i.false.prefix && (await i.false.prefix.getString())) ?? '';\n                v2 = (i.false && i.false.value && (await i.false.value.getString())) ?? null;\n                value2 += v2 ?? '';\n                value2 += (i.false && i.false.suffix && (await i.false.suffix.getString())) ?? '';\n            }\n\n            return v2 === null ? (v === null ? null : value) : value2;\n        }\n        return v === null ? null : value;\n    }\n    return (await i.getString()) ?? null;\n}\n\nexport async function getValueEntryBoolean(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined> | undefined,\n): Promise<boolean | null> {\n    if (!i) {\n        return null;\n    }\n    const nval = i.value && (await i.value.getBoolean());\n    if (nval !== undefined) {\n        return nval;\n    }\n    return null;\n}\nfunction isTextSizeEntryType(F: any): F is ChangeTypeOfKeys<TextSizeEntryType, Dataitem | undefined> {\n    return 'textSize' in (F as TextSizeEntryType);\n}\nexport async function getValueEntryString(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined> | undefined,\n    v: number | null = null,\n): Promise<string | null> {\n    if (!i || !i.value) {\n        return null;\n    }\n    const nval = v !== null ? v : await getValueEntryNumber(i);\n    const format = ((i.dateFormat && (await i.dateFormat.getObject())) as any) ?? null;\n    if (nval !== null && nval !== undefined) {\n        let res = '';\n        if (isValueDateFormat(format)) {\n            if (nval <= 0) {\n                return null;\n            }\n            const temp = new Date(nval);\n            if (isValidDate(temp)) {\n                res = temp.toLocaleString(format.local, format.format);\n            }\n        } else {\n            const d = ('decimal' in i && i.decimal && (await i.decimal.getNumber())) ?? null;\n            if (d !== null && d !== false) {\n                res = nval.toFixed(d);\n            } else {\n                res = String(nval);\n            }\n        }\n        res = res + ((i.unit && (await i.unit.getString())) ?? i.value.common.unit ?? '');\n        let opt = '';\n        if (isTextSizeEntryType(i)) {\n            opt = String((i.textSize && (await i.textSize.getNumber())) ?? '');\n        }\n        return res + (opt ? `\u00AC${opt}` : '');\n    }\n    let res = await i.value.getString();\n    let opt = '';\n    if (res != null) {\n        if (isValueDateFormat(format)) {\n            const temp = new Date(res);\n            if (isValidDate(temp)) {\n                res = temp.toLocaleString(format.local, format.format);\n            }\n        }\n        res += (i.unit && (await i.unit.getString())) ?? i.value.common.unit ?? '';\n        if (isTextSizeEntryType(i)) {\n            opt = String((i.textSize && (await i.textSize.getNumber())) ?? '');\n        }\n        res += opt ? `\u00AC${opt}` : '';\n    }\n    return res;\n}\n\nexport function getTranslation(library: Library, key1: any, key2?: string): string {\n    let result = key2 ?? key1;\n    if (key2 !== undefined) {\n        result = library.getLocalTranslation(key1, key2);\n    }\n    result = library.getTranslation(result || key1);\n    return result;\n}\n\nexport const getRGBfromRGBThree = async (item: PageItemLightDataItems['data']): Promise<RGB | null> => {\n    if (!item) {\n        return Color.White;\n    }\n    const red = (item.Red && (await item.Red.getNumber())) ?? -1;\n    const green = (item.Green && (await item.Green.getNumber())) ?? -1;\n    const blue = (item.Blue && (await item.Blue.getNumber())) ?? -1;\n    if (red === -1 || blue === -1 || green === -1) {\n        return null;\n    }\n    return { r: red, g: green, b: blue };\n};\nexport const getDecfromRGBThree = async (item: PageItemLightDataItems['data']): Promise<string | null> => {\n    const rgb = await getRGBfromRGBThree(item);\n    if (!rgb) {\n        return null;\n    }\n    return String(Color.rgb_dec565(rgb));\n};\nexport const setRGBThreefromRGB = async (item: PageItemLightDataItems['data'], c: RGB): Promise<void> => {\n    if (!item || !item.Red || !item.Green || !item.Blue) {\n        return;\n    }\n    await item.Red.setStateAsync(c.r);\n    await item.Green.setStateAsync(c.g);\n    await item.Blue.setStateAsync(c.b);\n};\n\nexport const getDecfromHue = async (item: PageItemLightDataItems['data']): Promise<string | null> => {\n    if (!item || !item.hue) {\n        return null;\n    }\n    const hue = await item.hue.getNumber();\n    let saturation = Math.abs((item.saturation && (await item.saturation.getNumber())) ?? 1);\n    if (saturation > 1) {\n        saturation = 1;\n    }\n    if (hue === null) {\n        return null;\n    }\n    const arr = Color.hsv2rgb(hue, saturation, 1);\n    return String(Color.rgb_dec565({ r: arr[0], g: arr[1], b: arr[2] }));\n};\n\nexport const setHuefromRGB = async (item: PageItemLightDataItems['data'], c: RGB): Promise<void> => {\n    if (!item || !item.hue || !Color.isRGB(c)) {\n        return;\n    }\n    if (!item.hue.writeable) {\n        return;\n    }\n    //let saturation = Math.abs((item.saturation && (await item.saturation.getNumber())) ?? 1);\n    //if (saturation > 1) saturation = 1;\n    const hue = Color.getHue(c.r, c.g, c.b);\n    await item.hue.setStateAsync(hue);\n};\n\nexport function formatInSelText(Text: string[] | string): string {\n    if (Text === undefined || Text === null) {\n        return `error`;\n    }\n    let splitText = Text;\n    if (typeof splitText === 'string') {\n        splitText = splitText.replaceAll('?', ' ').replaceAll('__', '_').replaceAll('_', ' ').split(' ');\n    }\n\n    let lengthLineOne = 0;\n    const arrayLineOne: string[] = [];\n    for (let i = 0; i < splitText.length; i++) {\n        lengthLineOne += splitText[i].length + 1;\n        if (lengthLineOne > 12) {\n            break;\n        } else {\n            arrayLineOne[i] = splitText[i];\n        }\n    }\n    const textLineOne = arrayLineOne.join(' ');\n    const arrayLineTwo: string[] = [];\n    for (let i = arrayLineOne.length; i < splitText.length; i++) {\n        arrayLineTwo[i] = splitText[i];\n    }\n    let textLineTwo = arrayLineTwo.join(' ');\n    if (textLineTwo.length > 12) {\n        textLineTwo = `${textLineTwo.substring(0, 9)}...`;\n    }\n    if (textLineOne.length != 0) {\n        return `${textLineOne}\\r\\n${textLineTwo.trim()}`;\n    }\n    return textLineTwo.trim();\n}\n\n/**\n * Create a part of the panel messsage for bottom icons. if event === '' u get '~~~~~~'.\n * default for event: input_sel\n *\n * @param msg {Partial<MessageItem>}\n * @returns string\n */\nexport function getItemMesssage(msg: Partial<MessageItem> | undefined): string {\n    if (!msg || !msg.intNameEntity || !msg.type) {\n        return '~~~~~';\n    }\n    const id: string[] = [];\n    if (msg.mainId) {\n        id.push(msg.mainId);\n    }\n    if (msg.subId) {\n        id.push(msg.subId);\n    }\n    if (msg.intNameEntity) {\n        id.push(msg.intNameEntity);\n    }\n    return getPayload(\n        msg.type ?? messageItemDefault.type,\n        id.join('?') ?? messageItemDefault.intNameEntity,\n        msg.icon ?? messageItemDefault.icon,\n        msg.iconColor ?? messageItemDefault.iconColor,\n        msg.displayName ?? messageItemDefault.displayName,\n        msg.optionalValue ?? messageItemDefault.optionalValue,\n    );\n}\n\nexport function getPayloadArray(s: any[]): string {\n    return s.join('~');\n}\nexport function getPayload(...s: string[]): string {\n    return s.join('~');\n}\n\n/**\n * Deep assign of jsons, dont use this for Json with objects/classes\n *\n * @param def Json with json, number, boolean, strings, null, undefined\n * @param source Json with json, number, boolean, strings, null, undefined\n * @param level ignore\n * @returns Json with json, number, boolean, strings, null, undefined\n */\nexport function deepAssign(def: Record<any, any>, source: Record<any, any>, level: number = 0): any {\n    if (level++ > 20) {\n        throw new Error('Max level reached! Circulating object is suspected!');\n    }\n    for (const k in def) {\n        if (typeof def[k] === 'object') {\n            if (source[k] === null || def[k] === null) {\n                source[k] = undefined;\n                def[k] = undefined;\n            } else if (source[k] !== undefined) {\n                def[k] = deepAssign(def[k], source[k]);\n            } else if (def[k] !== undefined) {\n                source[k] = def[k];\n            }\n        } else if (source[k] === undefined) {\n            source[k] = def[k];\n        } else if (def[k] === undefined) {\n            def[k] = source[k];\n        }\n    }\n    for (const k in source) {\n        if (typeof source[k] === 'object' && k in source) {\n            if (source[k] === null) {\n                source[k] = undefined;\n                def[k] = undefined;\n            } else if (def[k] === undefined) {\n                def[k] = source[k];\n            }\n        }\n    }\n    return Object.assign(def, source);\n}\n\nexport function getInternalDefaults(\n    type: ioBroker.StateCommon['type'],\n    role: ioBroker.StateCommon['role'],\n    write: boolean = true,\n): ioBroker.StateCommon {\n    return {\n        name: '',\n        type: type,\n        role: role,\n        read: true,\n        write: write,\n    };\n}\n\nexport function setTriggeredToState(theObject: any, exclude: string[]): void {\n    if (theObject instanceof Array) {\n        for (let i = 0; i < theObject.length; i++) {\n            setTriggeredToState(theObject[i], exclude);\n        }\n    } else {\n        for (const prop in theObject) {\n            if (exclude.indexOf(prop) !== -1) {\n                continue;\n            }\n            if (prop == 'type') {\n                if (theObject[prop] === 'triggered') {\n                    theObject[prop] = 'state';\n                }\n            }\n            if (theObject[prop] instanceof Object || theObject[prop] instanceof Array) {\n                setTriggeredToState(theObject[prop], exclude);\n            }\n        }\n    }\n}\n\nexport function getRegExp(s: string): RegExp | null {\n    if (!s.startsWith('/')) {\n        return null;\n    }\n    const i = s.lastIndexOf('/');\n    const reg = s.slice(1, i);\n    const arg = s.slice(i + 1);\n    if (!reg) {\n        return null;\n    }\n    return new RegExp(reg, arg ? arg : undefined);\n}\n\nexport function insertLinebreak(text: string, lineLength: number): string {\n    let counter = 0;\n    let a = 0;\n    let olda = a;\n    while (counter++ < 30) {\n        if (a + lineLength >= text.length) {\n            break;\n        }\n        const n = text.lastIndexOf('\\n', lineLength + a);\n        if (n > a) {\n            a = n;\n            continue;\n        }\n        a = text.lastIndexOf(' ', lineLength + a);\n        if (olda === a) {\n            break;\n        }\n        olda = a;\n        text = `${text.slice(0, a)}\\n${text.slice(++a)}`;\n    }\n    return text;\n}\n\nexport function isValidDate(d: Date): d is Date {\n    if (!d) {\n        return false;\n    }\n    return d instanceof Date && !isNaN(d.getTime());\n}\n"],
  "mappings": "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",
  "names": ["onColor", "res", "opt"]
}
