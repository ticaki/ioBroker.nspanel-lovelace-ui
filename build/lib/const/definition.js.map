{
  "version": 3,
  "sources": ["../../../src/lib/const/definition.ts"],
  "sourcesContent": ["import { Off, On, HMIDark } from './Color';\nimport { ScreensaverModeType, ScreensaverOptionsType } from '../types/types';\n\n/*type ChangeTypeToChannelAndState<Obj> = Obj extends object\n    ? {\n          [K in keyof Obj]-?: ChangeTypeToChannelAndState<Obj[K]>;\n      } & customChannelType\n    : ioBroker.StateObject;\nexport type ChangeToChannel<Obj, T> = Obj extends object\n    ? { [K in keyof Obj]-?: customChannelType & T }\n    : ioBroker.StateObject;\n*/\nexport type ChangeTypeOfKeys<Obj, N> = Obj extends object ? { [K in keyof Obj]-?: ChangeTypeOfKeys<Obj[K], N> } : N;\n\nexport type customChannelType = {\n    _channel: ioBroker.ChannelObject | ioBroker.DeviceObject;\n};\n\nexport const defaultChannel: ioBroker.ChannelObject = {\n    _id: '',\n    type: 'channel',\n    common: {\n        name: 'Hey no description... ',\n    },\n    native: {},\n};\n\nexport const genericStateObjects: {\n    default: ioBroker.StateObject;\n    customString: ioBroker.StateObject;\n    devices: ioBroker.FolderObject;\n    rooms: ioBroker.FolderObject;\n    settings: ioBroker.FolderObject;\n    global: ioBroker.FolderObject;\n    presense: ioBroker.StateObject;\n    deviceDB: ioBroker.StateObject;\n} = {\n    default: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.state',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    deviceDB: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.deviceDB',\n            type: 'string',\n            role: 'json',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    presense: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.presense',\n            type: 'boolean',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    customString: {\n        _id: 'User_State',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.customString',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    devices: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'devices.folder',\n        },\n        native: {},\n    },\n    rooms: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'rooms.folder',\n        },\n        native: {},\n    },\n    settings: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'settings.folder',\n        },\n        native: {},\n    },\n    global: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'settings.global',\n        },\n        native: {},\n    },\n};\n\nexport const Defaults = {\n    state: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'No definition',\n\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n};\n\n/******************************* Begin CONFIG Parameter *******************************/\n\n// DE: liefert bei true detailliertere Meldundgen im Log.\n// EN: if true, provides more detailed messages in the log.\nexport const Debug: boolean = false;\n\n/***** 1. Tasmota-Config *****/\n\n// DE: Anpassen an die Verzeichnisse der MQTT-Adapter-Instanz\n// EN: Adapt to the MQTT adapter instance directories\nexport const NSPanelReceiveTopic: string = 'mqtt.0.SmartHome.NSPanel_1.tele.RESULT';\nexport const NSPanelSendTopic: string = 'mqtt.0.SmartHome.NSPanel_1.cmnd.CustomSend';\n\n// DE: nur \u00E4ndern, falls der User im Tasmota vor dem Kompilieren umbenannt wurde (Standard Tasmota: admin)\n// EN: only change if the user was renamed in Tasmota before compiling (default Tasmota: admin)\nexport const tasmota_web_admin_user: string = 'admin';\n\n// DE: setzten, falls \"Web Admin Password\" in Tasmota vergeben\n// EN set if \"Web Admin Password\" is assigned in Tasmota\nexport const tasmota_web_admin_password: string = '';\n\n// DE: Setzen der bevorzugten Tasmota32-Version (f\u00FCr Updates)\n// EN: Set preferred Tasmota32 version (for updates)\nexport const tasmotaOtaVersion: string = 'tasmota32-DE.bin';\n// DE: Es k\u00F6nnen ebenfalls andere Versionen verwendet werden wie zum Beispiel:\n// EN: Other versions can also be used, such as:\n// 'tasmota32-nspanel.bin' or 'tasmota32.bin' or 'tasmota32-DE.bin' or etc.\n\n/***** 2. Directories in 0_userdata.0... *****/\n\n// DE: Anpassen an das jeweilige NSPanel\n// EN: Adapt to the respective NSPanel\nexport const NSPanel_Path = '0_userdata.0.NSPanel.1.';\n\n// DE: Pfad f\u00FCr gemeinsame Nutzung durch mehrere Panels (bei Nutzung der cardAlarm/cardUnlock)\n// EN: Path for sharing between multiple panels (when using cardAlarm/cardUnlock)\nexport const NSPanel_Alarm_Path = '0_userdata.0.NSPanel.';\n\n/***** 3. Weather adapter Config *****/\n\n// DE: M\u00F6gliche Wetteradapter 'accuweather.0.' oder 'daswetter.0.'\n// EN: Possible weather adapters 'accuweather.0.' or 'the weather.0.'\nexport const weatherAdapterInstance: string = 'accuweather.0.';\n\n// DE: M\u00F6gliche Werte: 'Min', 'Max' oder 'MinMax' im Screensaver\n// EN: Possible values: 'Min', 'Max' or 'MinMax' in the screensaver\nexport const weatherScreensaverTempMinMax: string = 'MinMax';\n\n// DE: Dieser Alias wird automatisch f\u00FCr den gew\u00E4hlten Wetter erstellt und kann entsprechend angepasst werden\n// EN: This alias is automatically created for the selected weather and can be adjusted accordingly\nexport const weatherEntityPath: string = 'alias.0.Wetter';\n\n/***** 4. Color constants for use in the PageItems *****/\n\n// DE: Bei Bedarf k\u00F6nnen weitere Farben definiert werden\n// EN: If necessary, additional colors can be defined\n\n/***** 5. Script - Parameters *****/\n\n// DE: F\u00FCr diese Option muss der Haken in setObjects in deiner javascript.X. Instanz gesetzt sein.\n// EN: This option requires the check mark in setObjects in your javascript.X. instance must be set.\nexport const autoCreateAlias = true;\n\n// DE: Verzeichnis f\u00FCr Auto-Aliase (wird per Default aus dem NSPanel-Verzeichnis gebildet und muss nicht ver\u00E4ndert werden)\n// EN: Directory for auto aliases (is created by default from the NSPanel directory and does not need to be changed)\nexport const AliasPath: string = 'alias.0.' + NSPanel_Path.substring(13, NSPanel_Path.length);\n\n// DE: Default-Farbe f\u00FCr Off-Zust\u00E4nde\n// EN: Default color for off states\nexport const defaultOffColorParam: any = Off;\n\n// DE: Default-Farbe f\u00FCr On-Zust\u00E4nde\n// EN: Default color for on states\nexport const defaultOnColorParam: any = On;\n\nexport const defaultColorParam: any = Off;\n\n// DE: Default-Hintergrundfarbe HMIDark oder Black\n// EN: Default background color HMIDark or Black\nexport const defaultBackgroundColorParam: any = HMIDark;\n\n/******************************** End CONFIG Parameter ********************************/\n\n//-- Anfang f\u00FCr eigene Seiten -- z.T. selbstdefinierte Aliase erforderlich ----------------\n//-- Start for your own pages -- some self-defined aliases required ----------------\n\n//-- https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Page-%E2%80%90-Typen_How-2_Beispiele\n\n//-- ENDE f\u00FCr eigene Seiten -- z.T. selbstdefinierte Aliase erforderlich -------------------------\n//-- END for your own pages -- some self-defined aliases required ------------------------\n\n/***********************************************************************************************\n **  Service Pages mit Auto-Alias (Nachfolgende Seiten werden mit Alias automatisch angelegt) **\n **  https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Service-Men%C3%BC             **\n ***********************************************************************************************/\n\n/* DE: German\n       Wenn das Service Men\u00FC abgesichert werden soll, kann eine cardUnlock vorgeschaltet werden.\n       F\u00FCr diesen Fall ist folgende Vorgehensweise erforderlich:\n       - cardUnlock Seite \"Unlock_Service\" in der Config unter pages auskommentieren (\"//\" entfernen)\n       - Servicemen\u00FC aus pages \"NSPanel_Service\" unter pages kommentieren (\"//\" hinzuf\u00FCgen)\n    */\n\n/*************************************************************************************************\n ** Service pages with auto alias (subsequent pages are automatically created with alias)      **\n ** https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Service-Men%C3%BC               **\n ************************************************************************************************/\n\n/* EN: English\n        If the service menu needs to be secured, a cardUnlock can be installed upstream.\n        In this case, the following procedure is required:\n        - comment out cardUnlock page \"Unlock_Service\" in the config under pages (remove \"//\")\n        - Comment service menu from pages \"NSPanel_Service\" under pages (add \"//\")\n    */\nexport const scriptVersion: string = 'v4.3.3.33';\nexport const tft_version: string = 'v4.3.3';\nexport const desired_display_firmware_version = 53;\nexport const berry_driver_version = 9;\n\nexport const tasmotaOtaUrl: string = 'http://ota.tasmota.com/tasmota32/release/';\n\nexport const ScreenSaverPlaces: [\n    keyof Pick<ScreensaverOptionsType, 'favoritEntity'>,\n    keyof Pick<ScreensaverOptionsType, 'leftEntity'>,\n    keyof Pick<ScreensaverOptionsType, 'bottomEntity'>,\n    keyof Pick<ScreensaverOptionsType, 'alternateEntity'>,\n    keyof Pick<ScreensaverOptionsType, 'indicatorEntity'>,\n] = ['favoritEntity', 'leftEntity', 'bottomEntity', 'alternateEntity', 'indicatorEntity'];\n\nexport const ScreenSaverAllPlaces: (keyof ScreensaverOptionsType)[] = [\n    'favoritEntity',\n    'leftEntity',\n    'bottomEntity',\n    'alternateEntity',\n    'indicatorEntity',\n    'mrIconEntity',\n];\n\nexport const ScreenSaverConst: Record<\n    ScreensaverModeType,\n    Record<keyof ScreensaverOptionsType, { maxEntries: number }>\n> = {\n    standard: {\n        leftEntity: {\n            maxEntries: 0,\n        },\n        bottomEntity: {\n            maxEntries: 4,\n        },\n        alternateEntity: {\n            maxEntries: 0,\n        },\n        indicatorEntity: {\n            maxEntries: 0,\n        },\n        mrIconEntity: {\n            maxEntries: 2,\n        },\n        favoritEntity: {\n            maxEntries: 1,\n        },\n    },\n    alternate: {\n        leftEntity: {\n            maxEntries: 0,\n        },\n        bottomEntity: {\n            maxEntries: 3,\n        },\n        alternateEntity: {\n            maxEntries: 1,\n        },\n        indicatorEntity: {\n            maxEntries: 0,\n        },\n        mrIconEntity: {\n            maxEntries: 2,\n        },\n        favoritEntity: {\n            maxEntries: 1,\n        },\n    },\n    advanced: {\n        leftEntity: {\n            maxEntries: 3,\n        },\n        bottomEntity: {\n            maxEntries: 6,\n        },\n        alternateEntity: {\n            maxEntries: 0,\n        },\n        indicatorEntity: {\n            maxEntries: 5,\n        },\n        mrIconEntity: {\n            maxEntries: 2,\n        },\n        favoritEntity: {\n            maxEntries: 1,\n        },\n    },\n};\n\n/*export const PageTypeDefinition: Record<PageTypeCards, { maxEntries: number }> = {\n    cardAlarm: {\n        maxEntries: 1,\n    },\n    cardChart: {\n        maxEntries: 1,\n    },\n    cardEntities: {\n        maxEntries: 5,\n    },\n    cardGrid: {\n        maxEntries: 6,\n    },\n    cardGrid2: {\n        maxEntries: 8,\n    },\n    cardLChart: {\n        maxEntries: 1,\n    },\n    cardMedia: {\n        maxEntries: 1,\n    },\n    cardPower: {\n        maxEntries: 1,\n    },\n    cardQR: {\n        maxEntries: 1,\n    },\n    cardThermo: {\n        maxEntries: 1,\n    },\n    cardUnlock: {\n        maxEntries: 1,\n    },\n};*/\n\nexport const ReiveTopicAppendix = '/tele/RESULT';\nexport const SendTopicAppendix = '/cmnd/CustomSend';\n"],
  "mappings": "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",
  "names": []
}
