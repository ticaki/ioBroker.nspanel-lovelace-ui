{
  "version": 3,
  "sources": ["../../../src/lib/types/type-pageItem.ts"],
  "sourcesContent": ["import type * as Types from './types';\nimport type { NSPanel } from './NSPanel';\n\nexport type PageLightItem = NSPanel.PageLightItem;\n\nexport type PageItemColorSwitch = NSPanel.PageItemColorSwitch;\n\nexport type IconBoolean = NSPanel.IconBoolean;\nexport type ThisCardMessageTypes = NSPanel.ThisCardMessageTypes;\n\nexport interface MessageItem extends NSPanel.MessageItemInterface {\n    mainId?: string;\n    subId?: string;\n}\nexport type entityUpdateDetailMessage = NSPanel.entityUpdateDetailMessage;\n\n//export type entityUpdateDetailMessageType = '2Sliders' | 'insel';\n\nexport interface MessageItemInterface {\n    type: Types.SerialTypePopup;\n    intNameEntity: string;\n    icon: string;\n    iconColor: string;\n    displayName: string;\n    optionalValue: string;\n}\nexport type MediaToolBoxAction = NSPanel.MediaToolBoxAction;\nexport type PageItemDataItems = NSPanel.PageItemDataItems;\n\nexport function isPageItemDataItemsOptions(obj: any): obj is NSPanel.PageItemDataItemsOptions {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    // With Template\n    if ('template' in obj && typeof obj.template === 'string') {\n        return true;\n    }\n\n    // Without Template, but with type and data\n    if ('type' in obj && typeof obj.type === 'string' && 'data' in obj) {\n        return true;\n    }\n\n    return false;\n}\nexport function islistCommandUnion(F: any): F is NSPanel.listCommandUnion {\n    switch (F as NSPanel.listCommandUnion) {\n        case 'flip': {\n            return true;\n        }\n    }\n    return false;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BO,SAAS,2BAA2B,KAAmD;AAC1F,MAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACjC,WAAO;AAAA,EACX;AAGA,MAAI,cAAc,OAAO,OAAO,IAAI,aAAa,UAAU;AACvD,WAAO;AAAA,EACX;AAGA,MAAI,UAAU,OAAO,OAAO,IAAI,SAAS,YAAY,UAAU,KAAK;AAChE,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AACO,SAAS,mBAAmB,GAAuC;AACtE,UAAQ,GAA+B;AAAA,IACnC,KAAK,QAAQ;AACT,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": []
}
