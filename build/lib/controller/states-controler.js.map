{
  "version": 3,
  "sources": ["../../../src/lib/controller/states-controler.ts"],
  "sourcesContent": ["// BaseClass extends\n\nimport { AdapterClassDefinition, BaseClass } from '../classes/library';\n\nexport class BaseClassTriggerd extends BaseClass {\n    protected updateTimeout: ioBroker.Timeout | undefined;\n    protected doUpdate: boolean = true;\n    protected minUpdateInterval: number;\n    constructor(adapter: AdapterClassDefinition, name: string = '', minUpdateInterval: number = 15000) {\n        super(adapter, name);\n        this.minUpdateInterval = minUpdateInterval;\n    }\n    async onStateTrigger(): Promise<boolean> {\n        if (this.updateTimeout) {\n            this.doUpdate = true;\n            return false;\n        } else {\n            this.updateTimeout = this.adapter.setTimeout(async () => {\n                if (this.unload) return;\n                this.updateTimeout = undefined;\n                if (this.doUpdate) {\n                    this.doUpdate = false;\n                    await this.onStateTrigger();\n                }\n            }, this.minUpdateInterval);\n            return true;\n        }\n    }\n    async delete(): Promise<void> {\n        if (this.updateTimeout) this.adapter.clearTimeout(this.updateTimeout);\n    }\n}\n\nexport class StatesDBReadOnly extends BaseClass {\n    private triggerDB: { [key: string]: { state: ioBroker.State; to: BaseClassTriggerd[]; ts: number } } = {};\n    private stateDB: { [key: string]: { state: ioBroker.State; ts: number } } = {};\n    timespan: number;\n    constructor(adapter: AdapterClassDefinition, name: string = '', timespan: number = 15000) {\n        super(adapter, name || 'StatesDBReadOnly');\n        this.timespan = timespan;\n    }\n\n    /**\n     * Set a subscript to a foreignState and write current state/value to db\n     * @param id state id\n     * @param from the page that handle the trigger\n     */\n    async setTrigger(id: string, from: BaseClassTriggerd): Promise<void> {\n        if (id.startsWith(this.adapter.namespace)) {\n            this.log.warn(`Id: ${id} refers to the adapter's own namespace, this is not allowed!`);\n            return;\n            //throw new Error(`Id: ${id} refers to the adapter's own namespace, this is not allowed!`);\n        }\n        if (this.triggerDB[id] !== undefined) {\n            if (this.triggerDB[id].to.indexOf(from) == -1) this.triggerDB[id].to.push(from);\n        } else {\n            const state = await this.adapter.getForeignStateAsync(id);\n            if (state) {\n                await this.adapter.subscribeForeignStatesAsync(id);\n                this.triggerDB[id] = {\n                    state,\n                    to: [from],\n                    ts: Date.now(),\n                };\n            }\n            this.log.debug(`Set to new trigger to ${id}`);\n        }\n    }\n\n    /**\n     * Read a state from DB or js-controller\n     * @param id state id with namespace\n     * @returns\n     */\n    async getState(id: string): Promise<ioBroker.State | null | undefined> {\n        if (this.triggerDB[id] !== undefined) {\n            return this.triggerDB[id].state;\n        } else if (this.stateDB[id]) {\n            if (Date.now() - this.timespan - this.stateDB[id].ts < 0) {\n                return this.stateDB[id].state;\n            }\n        }\n        const state = await this.adapter.getForeignStateAsync(id);\n        if (state) {\n            this.stateDB[id] = { state: state, ts: Date.now() };\n            return state;\n        }\n        throw new Error(`State id invalid ${id} no data!`);\n    }\n    async onStateChange(dp: string, state: ioBroker.State | null | undefined): Promise<void> {\n        if (dp && state && state.ack) {\n            if (this.triggerDB[dp]) {\n                if (this.triggerDB[dp].state) {\n                    this.log.debug(`Trigger from ${dp} with state ${JSON.stringify(state)}`);\n                    this.triggerDB[dp].ts = Date.now();\n                    if (this.triggerDB[dp].state.val !== state.val) {\n                        this.triggerDB[dp].state = state;\n                        this.triggerDB[dp].to.forEach((c) => c.onStateTrigger && c.onStateTrigger());\n                    }\n                }\n            }\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAkD;AAE3C,MAAM,0BAA0B,yBAAU;AAAA,EACnC;AAAA,EACA,WAAoB;AAAA,EACpB;AAAA,EACV,YAAY,SAAiC,OAAe,IAAI,oBAA4B,MAAO;AAC/F,UAAM,SAAS,IAAI;AACnB,SAAK,oBAAoB;AAAA,EAC7B;AAAA,EACA,MAAM,iBAAmC;AACrC,QAAI,KAAK,eAAe;AACpB,WAAK,WAAW;AAChB,aAAO;AAAA,IACX,OAAO;AACH,WAAK,gBAAgB,KAAK,QAAQ,WAAW,YAAY;AACrD,YAAI,KAAK;AAAQ;AACjB,aAAK,gBAAgB;AACrB,YAAI,KAAK,UAAU;AACf,eAAK,WAAW;AAChB,gBAAM,KAAK,eAAe;AAAA,QAC9B;AAAA,MACJ,GAAG,KAAK,iBAAiB;AACzB,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EACA,MAAM,SAAwB;AAC1B,QAAI,KAAK;AAAe,WAAK,QAAQ,aAAa,KAAK,aAAa;AAAA,EACxE;AACJ;AAEO,MAAM,yBAAyB,yBAAU;AAAA,EACpC,YAA+F,CAAC;AAAA,EAChG,UAAoE,CAAC;AAAA,EAC7E;AAAA,EACA,YAAY,SAAiC,OAAe,IAAI,WAAmB,MAAO;AACtF,UAAM,SAAS,QAAQ,kBAAkB;AACzC,SAAK,WAAW;AAAA,EACpB;AAAA,EAOA,MAAM,WAAW,IAAY,MAAwC;AACjE,QAAI,GAAG,WAAW,KAAK,QAAQ,SAAS,GAAG;AACvC,WAAK,IAAI,KAAK,OAAO,gEAAgE;AACrF;AAAA,IAEJ;AACA,QAAI,KAAK,UAAU,QAAQ,QAAW;AAClC,UAAI,KAAK,UAAU,IAAI,GAAG,QAAQ,IAAI,KAAK;AAAI,aAAK,UAAU,IAAI,GAAG,KAAK,IAAI;AAAA,IAClF,OAAO;AACH,YAAM,QAAQ,MAAM,KAAK,QAAQ,qBAAqB,EAAE;AACxD,UAAI,OAAO;AACP,cAAM,KAAK,QAAQ,4BAA4B,EAAE;AACjD,aAAK,UAAU,MAAM;AAAA,UACjB;AAAA,UACA,IAAI,CAAC,IAAI;AAAA,UACT,IAAI,KAAK,IAAI;AAAA,QACjB;AAAA,MACJ;AACA,WAAK,IAAI,MAAM,yBAAyB,IAAI;AAAA,IAChD;AAAA,EACJ;AAAA,EAOA,MAAM,SAAS,IAAwD;AACnE,QAAI,KAAK,UAAU,QAAQ,QAAW;AAClC,aAAO,KAAK,UAAU,IAAI;AAAA,IAC9B,WAAW,KAAK,QAAQ,KAAK;AACzB,UAAI,KAAK,IAAI,IAAI,KAAK,WAAW,KAAK,QAAQ,IAAI,KAAK,GAAG;AACtD,eAAO,KAAK,QAAQ,IAAI;AAAA,MAC5B;AAAA,IACJ;AACA,UAAM,QAAQ,MAAM,KAAK,QAAQ,qBAAqB,EAAE;AACxD,QAAI,OAAO;AACP,WAAK,QAAQ,MAAM,EAAE,OAAc,IAAI,KAAK,IAAI,EAAE;AAClD,aAAO;AAAA,IACX;AACA,UAAM,IAAI,MAAM,oBAAoB,aAAa;AAAA,EACrD;AAAA,EACA,MAAM,cAAc,IAAY,OAAyD;AACrF,QAAI,MAAM,SAAS,MAAM,KAAK;AAC1B,UAAI,KAAK,UAAU,KAAK;AACpB,YAAI,KAAK,UAAU,IAAI,OAAO;AAC1B,eAAK,IAAI,MAAM,gBAAgB,iBAAiB,KAAK,UAAU,KAAK,GAAG;AACvE,eAAK,UAAU,IAAI,KAAK,KAAK,IAAI;AACjC,cAAI,KAAK,UAAU,IAAI,MAAM,QAAQ,MAAM,KAAK;AAC5C,iBAAK,UAAU,IAAI,QAAQ;AAC3B,iBAAK,UAAU,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,kBAAkB,EAAE,eAAe,CAAC;AAAA,UAC/E;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
