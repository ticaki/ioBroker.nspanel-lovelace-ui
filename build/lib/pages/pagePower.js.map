{
  "version": 3,
  "sources": ["../../../src/lib/pages/pagePower.ts"],
  "sourcesContent": ["import { Page, type PageInterface } from '../classes/Page';\nimport { Color } from '../const/Color';\nimport {\n    deepAssign,\n    getEntryTextOnOff,\n    getIconEntryColor,\n    getIconEntryValue,\n    getPayload,\n    getScaledNumber,\n    getValueEntryNumber,\n    getValueEntryString,\n} from '../const/tools';\nimport type * as pages from '../types/pages';\nimport type { IncomingEvent, nsPanelState } from '../types/types';\nimport type { NspanelLovelaceUi } from '../types/NspanelLovelaceUi';\nimport type { ConfigManager } from '../classes/config-manager';\n\nconst PagePowerMessageDefault: pages.PagePowerMessage = {\n    event: 'entityUpd',\n    headline: 'Power Grid',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    homeValueTop: '',\n    homeIcon: '',\n    homeColor: '',\n    homeName: '',\n    homeValueBot: '',\n    leftTop: {\n        icon: '',\n        iconColor: '',\n        value: '',\n        speed: 0,\n        name: '',\n    },\n    leftMiddle: {\n        icon: '',\n        iconColor: '',\n        value: '',\n        speed: 0,\n        name: '',\n    },\n    leftBottom: {\n        icon: '',\n        iconColor: '',\n        value: '',\n        speed: 0,\n        name: '',\n    },\n    rightTop: {\n        icon: '',\n        iconColor: '',\n        value: '',\n        speed: 0,\n        name: '',\n    },\n    rightMiddle: {\n        icon: '',\n        iconColor: '',\n        value: '',\n        speed: 0,\n        name: '',\n    },\n    rightBottom: {\n        icon: '',\n        iconColor: '',\n        value: '',\n        speed: 0,\n        name: '',\n    },\n};\n\n/**\n * untested\n */\nexport class PagePower extends Page {\n    //items: pages.PageBaseConfig['items'];\n    items: pages.cardPowerDataItems | undefined;\n    index: number = 0;\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options);\n        if (options.config && options.config.card == 'cardPower') {\n            this.config = options.config;\n        }\n        this.minUpdateInterval = 2000;\n    }\n\n    async init(): Promise<void> {\n        await this.panel.statesControler.setInternalState(\n            `///${this.name}/powerSum`,\n            0,\n            true,\n            { name: '', type: 'number', role: '', read: true, write: true },\n            this.onInternalCommand,\n        );\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardPowerDataItemOptions> =\n            this.enums || this.dpInit\n                ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config, undefined, this.enums)\n                : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardPowerDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        this.items = tempItem as pages.cardPowerDataItems;\n        // set card because we lose it\n        this.items.card = 'cardPower';\n        await super.init();\n    }\n\n    onInternalCommand = async (id: string, _state: nsPanelState | undefined): Promise<ioBroker.StateValue> => {\n        if (!id.startsWith(`///${this.name}`)) {\n            return null;\n        }\n        const token = id.split('/').pop();\n        if (token === 'powerSum') {\n            const items = this.items;\n            if (!items || items.card !== 'cardPower') {\n                return null;\n            }\n            const data = items.data;\n            const l1 = await this.getElementSum(data.leftTop, 0);\n            const l2 = await this.getElementSum(data.leftMiddle, 0);\n            const l3 = await this.getElementSum(data.leftBottom, 0);\n            const r1 = await this.getElementSum(data.rightTop, 0);\n            const r2 = await this.getElementSum(data.rightMiddle, 0);\n            const r3 = await this.getElementSum(data.rightBottom, 0);\n            let sum = l1 + l2 + l3 + r1 + r2 + r3;\n            if (items.data.homeValueBot && items.data.homeValueBot.math) {\n                const f = await items.data.homeValueBot.math.getString();\n                if (f) {\n                    sum = new Function('l1', 'l2', 'l3', 'r1', 'r2', 'r3', 'Math', f)(l1, l2, l3, r1, r2, r3, Math);\n                }\n            }\n            return String(sum);\n        }\n        return null;\n    };\n    static async getPowerPageConfig(\n        adapter: NspanelLovelaceUi,\n        index: number,\n        configManager: ConfigManager,\n    ): Promise<pages.PageBaseConfig> {\n        const config = adapter.config.pagePowerdata[index];\n        const stateLeftTopExist =\n            config.setStateLeftTop !== undefined && (await configManager.existsState(config.setStateLeftTop));\n        const Power1 = stateLeftTopExist ? (config.setStateLeftTop !== undefined ? config.setStateLeftTop : '') : '';\n        const stateLeftMiddleExist =\n            config.setStateLeftMiddle !== undefined && (await configManager.existsState(config.setStateLeftMiddle));\n        const Power2 = stateLeftMiddleExist\n            ? config.setStateLeftMiddle !== undefined\n                ? config.setStateLeftMiddle\n                : ''\n            : '';\n        const stateLeftBottomExist =\n            config.setStateLeftBottom !== undefined && (await configManager.existsState(config.setStateLeftBottom));\n        const Power3 = stateLeftBottomExist\n            ? config.setStateLeftBottom !== undefined\n                ? config.setStateLeftBottom\n                : ''\n            : '';\n        const stateRightTopExist =\n            config.setStateRightTop !== undefined && (await configManager.existsState(config.setStateRightTop));\n        const Power4 = stateRightTopExist ? (config.setStateRightTop !== undefined ? config.setStateRightTop : '') : '';\n        const stateRightMiddleExist =\n            config.setStateRightMiddle !== undefined && (await configManager.existsState(config.setStateRightMiddle));\n        const Power5 = stateRightMiddleExist\n            ? config.setStateRightMiddle !== undefined\n                ? config.setStateRightMiddle\n                : ''\n            : '';\n        const stateRightBottomExist =\n            config.setStateRightBottom !== undefined && (await configManager.existsState(config.setStateRightBottom));\n        const Power6 = stateRightBottomExist\n            ? config.setStateRightBottom !== undefined\n                ? config.setStateRightBottom\n                : ''\n            : '';\n        const Icon1 = config.setIconLeftTop !== undefined ? config.setIconLeftTop : '';\n        const Icon2 = config.setIconLeftMiddle !== undefined ? config.setIconLeftMiddle : '';\n        const Icon3 = config.setIconLeftBottom !== undefined ? config.setIconLeftBottom : '';\n        const Icon4 = config.setIconRightTop !== undefined ? config.setIconRightTop : '';\n        const Icon5 = config.setIconRightMiddle !== undefined ? config.setIconRightMiddle : '';\n        const Icon6 = config.setIconRightBottom !== undefined ? config.setIconRightBottom : '';\n\n        const result: pages.PageBaseConfig = {\n            uniqueID: config.pageName,\n            alwaysOn: config.alwaysOnDisplay ? 'always' : 'none',\n            config: {\n                card: 'cardPower',\n                index: index,\n                data: {\n                    headline: { type: 'const', constVal: config.headline },\n                    homeIcon: { true: { value: { type: 'const', constVal: 'home' } }, false: undefined },\n                    homeValueTop: {\n                        value: { type: 'const', constVal: 'Value top' },\n                    },\n                    homeValueBot: {\n                        value: { type: 'internal', dp: `///${config.pageName}/powerSum` },\n                        math: { type: 'const', constVal: 'return r1+r2+r3+l1+l2+l3 -999' },\n                    },\n                    leftTop: {\n                        icon: {\n                            true: {\n                                value: {\n                                    type: 'const',\n                                    constVal: Icon1,\n                                },\n                                color: undefined,\n                            },\n                            false: undefined,\n                        },\n                        value: {\n                            value: {\n                                type: 'triggered',\n                                dp: Power1,\n                            },\n                        },\n                    },\n                    leftMiddle: {\n                        icon: {\n                            true: {\n                                value: {\n                                    type: 'const',\n                                    constVal: Icon2,\n                                },\n                                color: undefined,\n                            },\n                            false: undefined,\n                        },\n                        value: {\n                            value: {\n                                type: 'triggered',\n                                dp: Power2,\n                            },\n                        },\n                    },\n                    leftBottom: {\n                        icon: {\n                            true: {\n                                value: {\n                                    type: 'const',\n                                    constVal: Icon3,\n                                },\n                                color: undefined,\n                            },\n                            false: undefined,\n                        },\n                        value: {\n                            value: {\n                                type: 'triggered',\n                                dp: Power3,\n                            },\n                        },\n                    },\n                    rightTop: {\n                        icon: {\n                            true: {\n                                value: {\n                                    type: 'const',\n                                    constVal: Icon4,\n                                },\n                                color: undefined,\n                            },\n                            false: undefined,\n                        },\n                        value: {\n                            value: {\n                                type: 'triggered',\n                                dp: Power4,\n                            },\n                        },\n                    },\n                    rightMiddle: {\n                        icon: {\n                            true: {\n                                value: {\n                                    type: 'const',\n                                    constVal: Icon5,\n                                },\n                                color: undefined,\n                            },\n                            false: undefined,\n                        },\n                        value: {\n                            value: {\n                                type: 'triggered',\n                                dp: Power5,\n                            },\n                        },\n                    },\n                    rightBottom: {\n                        icon: {\n                            true: {\n                                value: {\n                                    type: 'const',\n                                    constVal: Icon6,\n                                },\n                                color: undefined,\n                            },\n                            false: undefined,\n                        },\n                        value: {\n                            value: {\n                                type: 'triggered',\n                                dp: Power6,\n                            },\n                        },\n                    },\n                },\n            },\n            pageItems: [],\n        };\n        return result;\n    }\n\n    public async update(): Promise<void> {\n        if (!this.visibility) {\n            return;\n        }\n        const message: Partial<pages.PagePowerMessage> = {};\n        const config = this.adapter.config.pagePowerdata[this.index];\n        if (this.items && config != null) {\n            const items = this.items;\n            message.headline = this.library.getTranslation(\n                (items.data.headline && (await items.data.headline.getString())) ?? config.headline ?? '',\n            );\n            message.navigation = this.getNavigation();\n\n            const data = items.data;\n\n            message.homeIcon = await getIconEntryValue(data.homeIcon, true, '');\n            message.homeColor = await getIconEntryColor(data.homeIcon, true, Color.White);\n            message.homeValueTop = (await getValueEntryString(data.homeValueTop)) ?? '';\n            message.homeValueBot = (await getValueEntryString(data.homeValueBot)) ?? '';\n\n            // to much work to change types to partial in getMessage we assign a full object to this.\n            message.leftTop = (await this.getElementUpdate(data.leftTop)) as pages.PagePowerMessageItem;\n            message.leftMiddle = (await this.getElementUpdate(data.leftMiddle)) as pages.PagePowerMessageItem;\n            message.leftBottom = (await this.getElementUpdate(data.leftBottom)) as pages.PagePowerMessageItem;\n            message.rightTop = (await this.getElementUpdate(data.rightTop)) as pages.PagePowerMessageItem;\n            message.rightMiddle = (await this.getElementUpdate(data.rightMiddle)) as pages.PagePowerMessageItem;\n            message.rightBottom = (await this.getElementUpdate(data.rightBottom)) as pages.PagePowerMessageItem;\n        }\n        this.sendToPanel(this.getMessage(message));\n    }\n\n    private async getElementSum(item: pages.cardPowerDataItems['data']['leftBottom'], num: number): Promise<number> {\n        if (item === undefined) {\n            return num;\n        }\n        const value = await getValueEntryNumber(item.value);\n        return value !== null ? value + num : num;\n    }\n\n    private async getElementUpdate(\n        item: pages.cardPowerDataItems['data']['leftBottom'],\n    ): Promise<undefined | Partial<pages.PagePowerMessageItem>> {\n        if (item === undefined) {\n            return undefined;\n        }\n\n        const message: Partial<pages.PagePowerMessageItem> = {};\n\n        const value = await getValueEntryNumber(item.value);\n        if (value === null) {\n            return undefined;\n        }\n\n        message.icon = (await getIconEntryValue(item.icon, value >= 0, '')) ?? undefined;\n        message.iconColor = (await getIconEntryColor(item.icon, value, Color.White)) ?? undefined;\n        message.name = (await getEntryTextOnOff(item.text, value >= 0)) ?? undefined;\n        message.speed = (await getScaledNumber(item.speed)) ?? undefined;\n        message.value = (await getValueEntryString(item.value, value)) ?? undefined;\n\n        return message;\n    }\n    private getMessage(message: Partial<pages.PagePowerMessage>): string {\n        let result: pages.PagePowerMessage = PagePowerMessageDefault;\n        result = deepAssign(result, message) as pages.PagePowerMessage;\n        return getPayload(\n            'entityUpd',\n            result.headline,\n            result.navigation,\n            '',\n            '',\n            result.homeIcon,\n            result.homeColor,\n            result.homeName,\n            result.homeValueBot,\n            '',\n            '',\n            '',\n            '',\n            '',\n            '',\n            result.homeValueTop,\n            '',\n            this.getMessageItem(result.leftTop),\n            this.getMessageItem(result.leftMiddle),\n            this.getMessageItem(result.leftBottom),\n            this.getMessageItem(result.rightTop),\n            this.getMessageItem(result.rightMiddle),\n            this.getMessageItem(result.rightBottom),\n        );\n    }\n\n    private getMessageItem(i: pages.PagePowerMessageItem | undefined): string {\n        if (!i) {\n            return getPayload('', '', '', '', '', '', '');\n        }\n        return getPayload('', '', i.icon ?? '', i.iconColor ?? '', i.name ?? '', i.value ?? '', String(i.speed ?? ''));\n    }\n    protected async onStateTrigger(): Promise<void> {\n        await this.update();\n    }\n    async onButtonEvent(_event: IncomingEvent): Promise<void> {\n        //if (event.page && event.id && this.pageItems) {\n        //    this.pageItems[event.id as any].setPopupAction(event.action, event.opt);\n        //}\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
