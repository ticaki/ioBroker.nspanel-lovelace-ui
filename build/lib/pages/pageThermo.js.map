{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageThermo.ts"],
  "sourcesContent": ["import { Page, PageInterface } from '../classes/Page';\nimport { getPayload, getPayloadArray } from '../const/tools';\nimport * as pages from '../types/pages';\nimport { IncomingEvent } from '../types/types';\nimport { PageItem } from './pageItem';\n\nconst PageThermoMessageDefault: pages.PageThermoMessage = {\n    event: 'entityUpd',\n    headline: 'Page Thermo',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    intNameEntity: '',\n    currentTemp: '',\n    dstTemp: '',\n    status: '',\n    minTemp: '10',\n    maxTemp: '40',\n    tempStep: '5',\n    options: ['~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~'],\n    tCurTempLbl: '',\n    tStateLbl: '',\n    tALbl: '',\n    tCF: '',\n    temp2: '',\n    btDetail: 1,\n};\n\nexport class PageThermo extends Page {\n    config: pages.cardThermoDataItemOptions;\n    items: pages.cardThermoDataItems | undefined;\n    private step: number = 1;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    private nextArrow: boolean = false;\n    tempItem: PageItem | undefined;\n    dpInit: string;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options.pageItems);\n        if (options.config && options.config.card == 'cardThermo') this.config = options.config;\n        else throw new Error('Missing config!');\n        if (options.items && options.items.card == 'cardThermo') this.items = options.items;\n        this.minUpdateInterval = 2000;\n        this.dpInit = options.dpInit;\n    }\n\n    async init(): Promise<void> {\n        const config = { ...this.config };\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardThermoDataItems> =\n            (await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config)) ?? config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardThermoDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        if (tempItem) tempItem.card = this.config && this.config.card;\n        this.items = tempItem as pages.cardThermoDataItems;\n    }\n\n    public async update(): Promise<void> {\n        const message: Partial<pages.PageThermoMessage> = {};\n        message.options = [...PageThermoMessageDefault.options];\n        if (this.items) {\n            const item = this.items;\n            if (this.pageItems) {\n                for (let a = 0; a < this.pageItems.length && a < message.options.length; a++) {\n                    const temp = this.pageItems[a];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[a] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    }\n                }\n            }\n            message.intNameEntity = this.id;\n            message.headline = (item.data.headline && (await item.data.headline.getString())) ?? '';\n            message.navigation = this.getNavigation();\n            let v: any = (item.data.current && (await item.data.current.getNumber())) ?? null;\n            if (v !== null) {\n                message.currentTemp = (v as number).toFixed(1);\n            } else {\n                v = (item.data.current && (await item.data.current.getString())) ?? null;\n                if (v !== null) {\n                    message.currentTemp = this.library.getTranslation(v);\n                }\n            }\n            v = (item.data.set1 && (await item.data.set1.getNumber())) ?? null;\n            if (v !== null) {\n                message.dstTemp = v * 10;\n            }\n            v = (item.data.minTemp && (await item.data.minTemp.getNumber())) ?? null;\n            if (v !== null) {\n                message.minTemp = v * 10;\n            }\n            v = (item.data.maxTemp && (await item.data.maxTemp.getNumber())) ?? null;\n            if (v !== null) {\n                message.maxTemp = v * 10;\n            }\n            v = (item.data.set2 && (await item.data.set2.getNumber())) ?? null;\n            if (v !== null) {\n                message.temp2 = v * 10;\n            }\n            v = (item.data.unit && (await item.data.unit.getString())) ?? null;\n            if (v !== null) {\n                message.tCF = v;\n                message.currentTemp += v;\n            }\n            v = (item.data.text1 && (await item.data.text1.getString())) ?? null;\n            if (v !== null) {\n                message.tCurTempLbl = this.library.getTranslation(v);\n            }\n            v = (item.data.text2 && (await item.data.text2.getString())) ?? null;\n            if (v !== null) {\n                message.tStateLbl = this.library.getTranslation(v);\n            }\n            v = (item.data.tempStep && (await item.data.tempStep.getString())) ?? null;\n            if (v !== null) {\n                message.tempStep = v;\n            }\n            v = (item.data.mode && (await item.data.mode.getNumber())) ?? null;\n            if (v !== null) {\n                message.status = v;\n            } else {\n                v = (item.data.mode && (await item.data.mode.getString())) ?? null;\n                if (v !== null) {\n                    message.status = this.library.getTranslation(v);\n                }\n            }\n\n            //message.btDetail = '';\n        }\n        const msg: pages.PageThermoMessage = Object.assign(PageThermoMessageDefault, message);\n\n        this.sendToPanel(this.getMessage(msg));\n    }\n\n    async onButtonEvent(event: IncomingEvent): Promise<void> {\n        if (event.action === 'tempUpdHighLow') {\n            if (!this.items) return;\n            const values = event.opt.split('|');\n            const newValLow = parseInt(values[0]) / 10;\n            const newValHigh = parseInt(values[1]) / 10;\n            const valLow = (this.items && this.items.data.set1 && (await this.items.data.set1.getNumber())) ?? null;\n            const valHigh = (this.items && this.items.data.set2 && (await this.items.data.set2.getNumber())) ?? null;\n            if (valLow !== null && newValLow !== valLow) this.items.data.set1!.setStateAsync(newValLow);\n            if (valHigh !== null && newValHigh !== valHigh) this.items.data.set2!.setStateAsync(newValHigh);\n        }\n    }\n\n    private getMessage(message: pages.PageThermoMessage): string {\n        return getPayload(\n            'entityUpd',\n            message.headline,\n            message.navigation,\n            message.intNameEntity,\n            String(message.currentTemp),\n            String(message.dstTemp),\n            message.status,\n            String(message.minTemp),\n            String(message.maxTemp),\n            message.tempStep,\n            getPayloadArray(message.options),\n            message.tCurTempLbl,\n            message.tStateLbl,\n            message.tALbl,\n            message.tCF,\n            String(message.temp2),\n            String(message.btDetail),\n        );\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
