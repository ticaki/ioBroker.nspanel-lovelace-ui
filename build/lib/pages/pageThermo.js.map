{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageThermo.ts"],
  "sourcesContent": ["import { Page } from '../classes/Page';\nimport { type PageInterface } from '../classes/PageInterface';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload, getPayloadArray, getValueEntryString } from '../const/tools';\nimport type * as pages from '../types/pages';\nimport type { ButtonActionType, IncomingEvent, PopupType } from '../types/types';\n\nconst PageThermoMessageDefault: pages.PageThermoMessage = {\n    event: 'entityUpd',\n    headline: 'Page Thermo',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    intNameEntity: '',\n    currentTemp: '',\n    dstTemp: '',\n    status: '',\n    minTemp: '10',\n    maxTemp: '40',\n    tempStep: '5',\n    options: ['~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~'],\n    tCurTempLbl: '',\n    tStateLbl: '',\n    tALbl: '',\n    tCF: '',\n    temp2: '',\n    btDetail: '1',\n};\n/*type AtLeastOne<T, K extends keyof T = keyof T> = K extends keyof T ? Pick<T, K> & Partial<Omit<T, K>> : never;\n\ntype MyType = { a: string; b: string; c: string };\ntype MyValidType = AtLeastOne<MyType>;\n\nexport const a: MyValidType = { c: 'c' };*/\n\nexport class PageThermo extends Page {\n    //config: pages.cardThermoDataItemOptions;\n    items: pages.cardThermoDataItems | undefined;\n    private step: number = 1;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    private nextArrow: boolean = false;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        if (config.card !== 'cardThermo') {\n            return;\n        }\n        if (options && options.pageItems) {\n            options.pageItems.unshift({\n                type: 'button',\n                dpInit: '',\n                role: 'button',\n                modeScr: undefined,\n                data: {\n                    icon: {\n                        true: {\n                            value: { type: 'const', constVal: 'arrow-right-bold-circle-outline' },\n                            color: { type: 'const', constVal: { red: 205, green: 142, blue: 153 } },\n                        },\n                    },\n                    entity1: { value: { type: 'const', constVal: true } },\n                },\n            });\n        }\n        super(config, options);\n        if (options.config && options.config.card == 'cardThermo') {\n            this.config = options.config;\n        } else {\n            throw new Error('Missing config!');\n        }\n        if (options.items && options.items.card == 'cardThermo') {\n            this.items = options.items;\n        }\n        this.filterDuplicateMessages = false;\n        this.minUpdateInterval = 2000;\n    }\n\n    async init(): Promise<void> {\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardThermoDataItems> =\n            this.enums || this.dpInit\n                ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config, undefined, this.enums)\n                : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardThermoDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        if (tempItem) {\n            tempItem.card = 'cardThermo';\n        }\n        this.items = tempItem as pages.cardThermoDataItems;\n        await super.init();\n    }\n\n    public async update(): Promise<void> {\n        if (!this.visibility) {\n            return;\n        }\n        const message: Partial<pages.PageThermoMessage> = {};\n        message.options = ['~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~'];\n        if (this.items) {\n            const item = this.items;\n            if (this.pageItems) {\n                const pageItems = this.pageItems.filter(\n                    a => a && a.dataItems && a.dataItems.type === 'button' && a.dataItems.data.entity1,\n                );\n\n                const localStep = pageItems.length > 9 ? 7 : 8;\n                if (pageItems.length - 1 <= localStep * (this.step - 1)) {\n                    this.step = 1;\n                }\n                // arrow is at index [0]\n                const maxSteps = localStep * this.step + 1;\n                const minStep = localStep * (this.step - 1) + 1;\n                let b = pageItems.length >= 8 ? 0 : Math.ceil((8 - pageItems.length) / 2);\n                for (let a = minStep; a < maxSteps; a++, b++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[b] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '1', arr[1]);\n                    } else {\n                        getPayload('', '', '', '');\n                    }\n                }\n\n                if (localStep === 7) {\n                    this.nextArrow = true;\n                    const temp = this.pageItems[0];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[7] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    } else {\n                        getPayload('', '', '', '');\n                    }\n                }\n\n                /*for (let a = 0; a < pageItems.length && a < message.options.length; a++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[a] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    }\n                }*/\n            }\n            message.intNameEntity = this.id;\n            message.headline = this.library.getTranslation(\n                (this.items && this.items.data.headline && (await this.items.data.headline.getString())) ?? '',\n            );\n            message.navigation = this.getNavigation();\n\n            let v: string | number | null = (item.data.set1 && (await item.data.set1.getNumber())) ?? null;\n            if (v !== null) {\n                message.dstTemp = v * 10;\n            }\n            v = (item.data.minTemp && (await item.data.minTemp.getNumber())) ?? null;\n            if (v !== null) {\n                message.minTemp = v * 10;\n            } else if (item.data.set1 && item.data.set1.common.min != null) {\n                message.minTemp = item.data.set1.common.min * 10;\n            } else {\n                message.minTemp = 150;\n            }\n\n            v = (item.data.maxTemp && (await item.data.maxTemp.getNumber())) ?? null;\n            if (v !== null) {\n                message.maxTemp = v * 10;\n            } else if (item.data.set1 && item.data.set1.common.max != null) {\n                message.maxTemp = item.data.set1.common.max * 10;\n            } else {\n                message.maxTemp = 300;\n            }\n\n            v = (item.data.set2 && (await item.data.set2.getNumber())) ?? null;\n            if (v !== null) {\n                message.temp2 = v * 10;\n            }\n\n            // if we dont have a unit we get it from set1 or set2\n            v = (item.data.unit && (await item.data.unit.getString())) ?? null;\n            if (v !== null) {\n                message.tCF = v;\n                message.currentTemp += v;\n            } else {\n                if (item && item.data) {\n                    let set = item.data.set1;\n                    if (set) {\n                        if (set.common.unit) {\n                            message.tCF = set.common.unit;\n                            message.currentTemp += set.common.unit;\n                        }\n                    } else {\n                        set = item.data.set2;\n                        if (set) {\n                            if (set.common.unit) {\n                                message.tCF = set.common.unit;\n                                message.currentTemp += set.common.unit;\n                            }\n                        }\n                    }\n                }\n            }\n            v = (item.data.tempStep && (await item.data.tempStep.getNumber())) ?? null;\n            if (v !== null) {\n                message.tempStep = String(v);\n            } else if (item.data.set1 && item.data.set1.common.step) {\n                message.tempStep = String(item.data.set1.common.step * 10);\n            } else {\n                message.tempStep = '5';\n            }\n\n            message.tCurTempLbl = this.library.getTranslation((await getValueEntryString(item.data.mixed1)) ?? '');\n            message.currentTemp = this.library.getTranslation((await getValueEntryString(item.data.mixed2)) ?? '');\n            message.tStateLbl = this.library.getTranslation((await getValueEntryString(item.data.mixed3)) ?? '');\n            message.status = this.library.getTranslation((await getValueEntryString(item.data.mixed4)) ?? '');\n\n            message.btDetail =\n                this.pageItems && this.pageItems.some(a => a && a.dataItems && a.dataItems.type === 'input_sel')\n                    ? '0'\n                    : '1';\n            //this.pageItems && this.pageItems.some((a) => a.dataItems && a.dataItems.type === 'input_sel') ? '' : 1;\n        }\n        const msg: pages.PageThermoMessage = Object.assign(PageThermoMessageDefault, message);\n\n        this.sendToPanel(this.getMessage(msg));\n    }\n\n    async onButtonEvent(event: IncomingEvent): Promise<void> {\n        if (event.action === 'tempUpdHighLow') {\n            if (!this.items) {\n                return;\n            }\n            const values = event.opt.split('|');\n            const newValLow = parseInt(values[0]) / 10;\n            const newValHigh = parseInt(values[1]) / 10;\n            const valLow = (this.items && this.items.data.set1 && (await this.items.data.set1.getNumber())) ?? null;\n            const valHigh = (this.items && this.items.data.set2 && (await this.items.data.set2.getNumber())) ?? null;\n            if (valLow !== null && newValLow !== valLow) {\n                await this.items.data.set1!.setStateAsync(newValLow);\n            }\n            if (valHigh !== null && newValHigh !== valHigh) {\n                await this.items.data.set2!.setStateAsync(newValHigh);\n            }\n        } else if (event.action === 'tempUpd') {\n            if (!this.items) {\n                return;\n            }\n            const newValLow = parseInt(event.opt) / 10;\n            const valLow = (this.items && this.items.data.set1 && (await this.items.data.set1.getNumber())) ?? null;\n            if (valLow !== null && newValLow !== valLow) {\n                await this.items.data.set1!.setStateAsync(newValLow);\n            }\n        } else if (\n            event.action === 'hvac_action' &&\n            this.pageItems &&\n            this.pageItems[Number(event.opt.split('?')[1])]\n        ) {\n            if (this.nextArrow && event.opt.split('?')[1] === '0') {\n                this.step++;\n                await this.update();\n            } else if (await this.pageItems[Number(event.opt.split('?')[1])]!.onCommand('button', '')) {\n                return;\n            }\n        }\n    }\n\n    public async onPopupRequest(\n        id: number | string,\n        popup: PopupType | undefined,\n\n        // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n        action: ButtonActionType | undefined | string,\n        value: string | undefined,\n        _event: IncomingEvent | null = null,\n    ): Promise<void> {\n        if (!this.pageItems || !this.pageItems.some(a => a && a.dataItems && a.dataItems.type === 'input_sel')) {\n            return;\n        }\n        const items = this.pageItems; //.filter((a) => a.dataItems && a.dataItems.type === 'input_sel');\n        let msg: string | null = null;\n        if (popup === 'popupThermo') {\n            const items = this.pageItems.filter(a => a && a.dataItems && a.dataItems.type === 'input_sel');\n\n            const temp = [];\n            const id = this.id;\n            const icon = Icons.GetIcon(\n                (this.items && this.items.data.icon && (await this.items.data.icon.getString())) ?? 'fan',\n            );\n            const color = (this.items && this.items.data.icon && (await this.items.data.icon.getRGBDec())) ?? '11487';\n            for (const i of items) {\n                i && temp.push(getPayload((await i.GeneratePopup(popup)) ?? '~~~'));\n            }\n            for (let a = 0; a < 3; a++) {\n                if (temp[a] === undefined) {\n                    temp[a] = '~~~';\n                }\n            }\n            msg = getPayload('entityUpdateDetail', id, icon, color, temp[0], temp[1], temp[2], '');\n        } else if (action && action.startsWith('mode') && value !== undefined) {\n            const tempid = parseInt(action.split('?')[1]);\n            const item = items[tempid];\n            if (!item) {\n                return;\n            }\n            await item.onCommand('mode-insel', value);\n        }\n        if (msg !== null) {\n            this.sendToPanel(msg);\n        }\n    }\n\n    private getMessage(message: pages.PageThermoMessage): string {\n        return getPayload(\n            'entityUpd',\n            message.headline,\n            message.navigation,\n            message.intNameEntity,\n            String(message.currentTemp),\n            String(message.dstTemp),\n            message.status,\n            String(message.minTemp),\n            String(message.maxTemp),\n            message.tempStep,\n            getPayloadArray(message.options),\n            message.tCurTempLbl,\n            message.tStateLbl,\n            message.tALbl,\n            message.tCF,\n            String(message.temp2),\n            String(message.btDetail),\n        );\n    }\n    protected async onVisibilityChange(val: boolean): Promise<void> {\n        await super.onVisibilityChange(val);\n        if (val) {\n            for (const item of this.pageItems ?? []) {\n                if (item && item.dataItems && item.dataItems.type === 'input_sel') {\n                    if (this.controller) {\n                        await this.controller.statesControler.activateTrigger(item);\n                    }\n                }\n            }\n        } else {\n            for (const item of this.pageItems ?? []) {\n                if (item && item.dataItems && item.dataItems.type === 'input_sel') {\n                    if (this.controller) {\n                        await this.controller.statesControler.deactivateTrigger(item);\n                    }\n                }\n            }\n        }\n    }\n    protected async onStateTrigger(): Promise<void> {\n        await this.update();\n    }\n    async reset(): Promise<void> {\n        this.step = 1;\n    }\n}\n"],
  "mappings": "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",
  "names": ["items", "id"]
}
