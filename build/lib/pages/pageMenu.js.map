{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageMenu.ts"],
  "sourcesContent": ["import { Page } from '../classes/Page';\nimport { type PageInterface } from '../classes/PageInterface';\nimport { Color } from '../const/Color';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload } from '../const/tools';\nimport type * as pages from '../types/pages';\nimport { handleCardRole } from './data-collection-functions';\nimport type { PageItem } from './pageItem';\n\nexport class PageMenu extends Page {\n    protected maxItems: number = 4;\n    protected step: number = 0;\n    protected iconLeft: string = '';\n    protected iconRight: string = '';\n    protected iconLeftP: string = '';\n    protected iconRightP: string = '';\n    protected doubleClick: ioBroker.Timeout | undefined;\n    protected lastdirection: null | 'left' | 'right' = null;\n    private tempItems: (PageItem | undefined)[] | undefined;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options);\n        if (options.config) {\n            switch (options.config.card) {\n                case 'cardSchedule':\n                case 'cardGrid':\n                    this.maxItems = 6;\n                    break;\n                case 'cardGrid2':\n                    this.maxItems = this.panel.info.nspanel.model === 'us-p' ? 9 : 8;\n                    break;\n                case 'cardGrid3':\n                    this.maxItems = 4;\n                    break;\n                case 'cardEntities':\n                    this.maxItems = this.panel.info.nspanel.model === 'us-p' ? 5 : 4;\n                    break;\n\n                case 'cardChart':\n                case 'cardLChart':\n                case 'cardThermo':\n                case 'cardMedia':\n                case 'cardQR':\n                case 'cardAlarm':\n                case 'cardPower':\n                case 'screensaver':\n                case 'screensaver2':\n                case 'screensaver3':\n                case 'popupNotify':\n                case 'popupNotify2':\n                default:\n                    this.log.warn(\n                        `PageMenu: ${config.card} is not supported in this class. Please use the correct class for this card.`,\n                    );\n                    break;\n            }\n        }\n    }\n\n    public async getOptions(result: string[]): Promise<string[]> {\n        if (this.pageItems) {\n            if (\n                this.config &&\n                (this.config.card === 'cardEntities' ||\n                    this.config.card === 'cardSchedule' ||\n                    this.config.card === 'cardGrid' ||\n                    this.config.card === 'cardGrid3' ||\n                    this.config.card === 'cardGrid2')\n            ) {\n                /**\n                 * Live update von gefilterten Adaptern.\n                 */\n                let pageItems = this.pageItems;\n                if (this.config.filterType === 'true' || this.config.filterType === 'false') {\n                    this.tempItems = [];\n                    const testIt = this.config.filterType === 'true';\n                    for (const p of this.pageItems) {\n                        if (\n                            p &&\n                            p.dataItems &&\n                            p.dataItems.data &&\n                            'entity1' in p.dataItems.data &&\n                            p.dataItems.data.entity1 &&\n                            p.dataItems.data.entity1.value &&\n                            testIt === (await p.dataItems.data.entity1.value.getBoolean())\n                        ) {\n                            this.tempItems.push(p);\n                        }\n                    }\n                    pageItems = this.tempItems;\n                }\n\n                const isEntities = this.config.card === 'cardEntities' || this.config.card === 'cardSchedule';\n                let maxItems = this.maxItems;\n                let a = 0;\n                if (this.pageItems.length > maxItems) {\n                    a = (isEntities ? maxItems : maxItems / 2) * this.step;\n                    maxItems = a + maxItems;\n                }\n                let b = 0;\n\n                if (this.config.scrollType === 'page') {\n                    for (; a < maxItems; a++) {\n                        const temp = pageItems[a];\n                        result[b++] = temp ? await temp.getPageItemPayload() : '~~~~~';\n                    }\n                } else {\n                    let a = this.step;\n                    for (; a < this.maxItems + this.step; a++) {\n                        const temp = pageItems[a];\n                        result[b++] = temp ? await temp.getPageItemPayload() : '~~~~~';\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    protected async onVisibilityChange(val: boolean): Promise<void> {\n        if (val) {\n            if (\n                this.config &&\n                (this.config.card === 'cardEntities' ||\n                    this.config.card === 'cardSchedule' ||\n                    this.config.card === 'cardGrid' ||\n                    this.config.card === 'cardGrid3' ||\n                    this.config.card === 'cardGrid2')\n            ) {\n                switch (this.config.card) {\n                    case 'cardSchedule':\n                    case 'cardGrid':\n                        this.maxItems = 6;\n                        break;\n                    case 'cardGrid2':\n                        this.maxItems = this.panel.info.nspanel.model === 'us-p' ? 9 : 8;\n                        break;\n                    case 'cardGrid3':\n                        this.maxItems = 4;\n                        break;\n                    case 'cardEntities':\n                        this.maxItems = this.panel.info.nspanel.model === 'us-p' ? 5 : 4;\n                        break;\n                    default:\n                        this.log.error(\n                            //@ts-expect-error\n                            `PageMenu: ${this.config.card} is not supported in onVisibilityChange!`,\n                        );\n                        break;\n                }\n                const temp = await handleCardRole(this.adapter, this.config.cardRole, this);\n                if (temp) {\n                    this.pageItemConfig = temp;\n                }\n            }\n        }\n        await super.onVisibilityChange(val);\n    }\n\n    goLeft(single: boolean = false): void {\n        if (\n            !this.config ||\n            (this.config.card !== 'cardEntities' &&\n                this.config.card !== 'cardSchedule' &&\n                this.config.card !== 'cardGrid' &&\n                this.config.card !== 'cardGrid2' &&\n                this.config.card !== 'cardGrid3')\n        ) {\n            return;\n        }\n        if (!single) {\n            if (this.doubleClick) {\n                this.adapter.clearTimeout(this.doubleClick);\n                this.doubleClick = undefined;\n                if (this.lastdirection == 'right') {\n                    this.panel.navigation.goLeft();\n                    return;\n                }\n            } else {\n                this.lastdirection = 'left';\n                if (this.unload) {\n                    return;\n                }\n                this.doubleClick = this.adapter.setTimeout(() => {\n                    this.goLeft(true);\n                    this.doubleClick = undefined;\n                }, this.adapter.config.doubleClickTime);\n                return;\n            }\n        }\n\n        if (--this.step < 0) {\n            this.step = 0;\n            this.panel.navigation.goLeft();\n        } else {\n            void this.update();\n        }\n    }\n    goRight(single: boolean = false): void {\n        if (\n            !this.config ||\n            (this.config.card !== 'cardEntities' &&\n                this.config.card !== 'cardSchedule' &&\n                this.config.card !== 'cardGrid' &&\n                this.config.card !== 'cardGrid2' &&\n                this.config.card !== 'cardGrid3')\n        ) {\n            return;\n        }\n        if (!single) {\n            if (this.doubleClick) {\n                this.adapter.clearTimeout(this.doubleClick);\n                this.doubleClick = undefined;\n                if (this.lastdirection == 'right') {\n                    this.panel.navigation.goRight();\n                    return;\n                }\n            } else {\n                this.lastdirection = 'right';\n                if (this.unload) {\n                    return;\n                }\n                this.doubleClick = this.adapter.setTimeout(() => {\n                    this.doubleClick = undefined;\n                    this.goRight(true);\n                }, this.adapter.config.doubleClickTime);\n                return;\n            }\n        }\n        const pageScroll = this.config.scrollType === 'page';\n\n        const length = this.tempItems ? this.tempItems.length : this.pageItems ? this.pageItems.length : 0;\n        const maxItemsPage =\n            this.config.card === 'cardEntities' || this.config.card === 'cardSchedule'\n                ? this.maxItems\n                : this.maxItems / 2;\n        const maxItemsPagePlus =\n            this.config.card === 'cardEntities' || this.config.card === 'cardSchedule' ? 0 : this.maxItems / 2;\n        if (\n            !pageScroll ? ++this.step + this.maxItems > length : ++this.step * maxItemsPage + maxItemsPagePlus >= length\n        ) {\n            this.step--;\n            this.panel.navigation.goRight();\n        } else {\n            void this.update();\n        }\n    }\n    protected getNavigation(): string {\n        if (\n            !this.config ||\n            (this.config.card !== 'cardEntities' &&\n                this.config.card !== 'cardSchedule' &&\n                this.config.card !== 'cardGrid' &&\n                this.config.card !== 'cardGrid2' &&\n                this.config.card !== 'cardGrid3')\n        ) {\n            return '';\n        }\n        const pageScroll = this.config.scrollType === 'page';\n        const length = this.tempItems ? this.tempItems.length : this.pageItems ? this.pageItems.length : 0;\n        if (this.maxItems >= length) {\n            return super.getNavigation();\n        }\n        let left = '';\n        let right = '';\n        if (this.step <= 0) {\n            left = this.panel.navigation.buildNavigationString('left');\n        }\n        const maxItemsPage =\n            this.config.card === 'cardEntities' || this.config.card === 'cardSchedule'\n                ? this.maxItems\n                : this.maxItems / 2;\n        const maxItemsPagePlus =\n            this.config.card === 'cardEntities' || this.config.card === 'cardSchedule' ? 0 : this.maxItems / 2;\n        if (\n            !pageScroll\n                ? this.step + this.maxItems >= length\n                : (this.step + 1) * maxItemsPage + maxItemsPagePlus >= length\n        ) {\n            right = this.panel.navigation.buildNavigationString('right');\n        }\n        if (!left) {\n            left = getPayload(\n                'button',\n                'bSubPrev',\n                pageScroll ? Icons.GetIcon('arrow-up-bold-outline') : Icons.GetIcon('arrow-up-bold'),\n                String(Color.rgb_dec565(Color.HMIOn)),\n                '',\n                '',\n            );\n        }\n\n        if (!right) {\n            right = getPayload(\n                'button',\n                'bSubNext',\n                pageScroll ? Icons.GetIcon('arrow-down-bold-outline') : Icons.GetIcon('arrow-down-bold'),\n                String(Color.rgb_dec565(Color.HMIOn)),\n                '',\n                '',\n            );\n        }\n\n        return getPayload(left, right);\n    }\n\n    async reset(): Promise<void> {\n        this.step = 0;\n    }\n\n    async delete(): Promise<void> {\n        if (this.doubleClick) {\n            this.adapter.clearTimeout(this.doubleClick);\n            this.doubleClick = undefined;\n        }\n        await super.delete();\n    }\n}\n"],
  "mappings": "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",
  "names": ["a"]
}
