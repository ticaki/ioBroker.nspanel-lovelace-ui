{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageMedia.ts"],
  "sourcesContent": ["import { Dataitem, isDataItem } from '../classes/data-item';\nimport { AdapterClassDefinition } from '../classes/library';\nimport { White, rgb_dec565 } from '../const/color';\nimport { Icons } from '../const/icon_mapping';\nimport { Panel } from '../controller/panel';\nimport { PageTypeCards } from '../types/pages';\nimport { BooleanUnion, ColorEntryType, DataItemsOptions, IncomingEvent, RGB } from '../types/types';\nimport { Page } from './Page';\n\nexport const commands = {\n    cardMedia: {\n        on: '1374',\n        pause: '65535',\n    },\n};\n/*type PageMediaConfigInterface = ChangeTypeOfKeys<\n    Alexa | Sonos | Squeezeboxrpc | SpotifyPremium | Volumio | Bose,\n    DataItemsOptions\n>;*/\nexport type PageMediaDataInterface = PageMediaBase; //Alexa | Sonos | Squeezeboxrpc | SpotifyPremium | Volumio | Bose;\n\nconst PageMediaMessageDefault: PageMediaMessage = {\n    event: 'entityUpd',\n    headline: '',\n    getNavigation: '~~~~~~~~~',\n    id: '',\n    title: '',\n    titelColor: String(rgb_dec565(White)),\n    artist: '',\n    artistColor: String(rgb_dec565(White)),\n    volume: '',\n    iconplaypause: '',\n    onoffbutton: '',\n    shuffle_icon: '',\n    logo: '',\n    options: ['', '', '', '', ''],\n};\n/*export interface Alexa extends PageMediaBase {\n    type: 'alexa2';\n    config: PageMediaBase['config'] & { device: string };\n}\nexport interface Sonos extends PageMediaBase {\n    type: 'sonos';\n    dp: string;\n    config: PageMediaBase['config'] & { device: string };\n}\nexport interface Squeezeboxrpc extends PageMediaBase {\n    type: 'squeezeboxrpc';\n    config: PageMediaBase['config'] & { device: string };\n}\nexport interface SpotifyPremium extends PageMediaBase {\n    type: 'spotify-premium';\n}\nexport interface Volumio extends PageMediaBase {\n    type: 'volumio';\n}\nexport interface Bose extends PageMediaBase {\n    type: 'bosesoundtouch';\n}*/\ntype PageMediaBase = {\n    //    type: PlayerType;\n    initMode: 'auto' | 'custom';\n    dpInit: string; // '' and initMode 'auto' throw an error\n    //    mediaNamespace: string;\n    config: ChangeTypeOfKeys<PageMediaBaseConfig, DataItemsOptions | undefined> & {\n        toolbox: (toolboxItem | undefined)[];\n    } & { logo: toolboxItem | undefined };\n    items:\n        | (ChangeTypeOfKeys<PageMediaBaseConfig, Dataitem | undefined> & {\n              toolbox: (toolboxItemDataItem | undefined)[];\n          } & { logo: toolboxItemDataItem | undefined })\n        | undefined;\n    writeItems: PageMediaBaseConfigWrite | undefined;\n};\n\ntype ChangeTypeOfKeys<Obj, N> = Obj extends object | listItem | PageTypeCards | iconBoolean | ColorEntryType\n    ? Obj extends RGB\n        ? N\n        : { [K in keyof Obj]-?: ChangeTypeOfKeys<Obj[K], N> }\n    : N;\n\ntype PageMediaBaseConfig = {\n    card: PageTypeCards;\n    heading: string;\n    alwaysOnDisplay: boolean;\n    album: string;\n    titel: listItem;\n    duration: string;\n    elapsed: string;\n    artist: listItem;\n    shuffle: string;\n    volume: number;\n    icon: string;\n    play: string;\n    mediaState: string;\n    stop: string;\n    pause: string;\n    forward: string;\n    backward: string;\n};\n\ntype toolboxItem = ChangeTypeOfKeys<listItem, DataItemsOptions | undefined> & { action: MediaToolBoxAction };\n\ntype toolboxItemDataItem = ChangeTypeOfKeys<listItem, Dataitem | undefined> & { action: MediaToolBoxAction };\n\nexport type PageMediaBaseConfigWrite = {\n    pplay: writeItem;\n    pause: writeItem;\n    forward: writeItem;\n    backward: writeItem;\n    stop: writeItem;\n    off: writeItem;\n    shuffle: writeItem;\n    tracklist: writeItem;\n    playlist: writeItem;\n    equalizerList: writeItem;\n    repeat: writeItem;\n    toolstring: writeItem;\n};\nexport type PageMediaMessage = {\n    event: 'entityUpd';\n    headline: string;\n    getNavigation: string;\n    id: string;\n    title: string;\n    titelColor: string;\n    artist: string;\n    artistColor: string;\n    volume: string;\n    iconplaypause: string;\n    onoffbutton: string;\n    shuffle_icon: string;\n    logo: string;\n    options: [\n        (messageItem | string)?,\n        (messageItem | string)?,\n        (messageItem | string)?,\n        (messageItem | string)?,\n        (messageItem | string)?,\n    ];\n};\ntype writeItem = { dp: string } | undefined;\ntype listItem =\n    | {\n          on: string;\n          text: string;\n          color: ColorEntryType | string | undefined;\n          icon: iconBoolean | string | undefined;\n          list: string | undefined;\n      }\n    | undefined;\n\nexport type iconBoolean = Record<BooleanUnion, string | undefined>;\nexport type messageItem = {\n    event?: 'input_sel' | '' | 'button';\n    pageId: string;\n    iconNumber: 0 | 1 | 2 | 3 | 4 | 5; // media0 usw.\n    mode: MediaToolBoxAction;\n    icon: string;\n    color: string;\n    name: string;\n    ident?: string;\n};\n\ntype MediaToolBoxAction =\n    | 'speaker'\n    | 'play'\n    | 'tool'\n    | 'track'\n    | 'favor'\n    | 'equal'\n    | 'repeat'\n    | 'seek'\n    | 'cross'\n    | 'nexttool';\n\nconst messageItemDefault: Required<Omit<messageItem, 'iconNumber' | 'mode'>> = {\n    event: 'input_sel',\n    pageId: '',\n    icon: '',\n    color: '',\n    name: '',\n    ident: '',\n};\n\nconst ArrayPlayerTypeWithMediaDevice = ['alexa2', 'sonos', 'squeezeboxrpc'] as const;\nconst ArrayPlayerTypeWithOutMediaDevice = ['spotify-premium', 'volumio', 'bosesoundtouch'] as const;\n\nexport type PlayerType =\n    | (typeof ArrayPlayerTypeWithMediaDevice)[number]\n    | (typeof ArrayPlayerTypeWithOutMediaDevice)[number]\n    | 'sonstiges';\nconst steps = 4;\nexport class PageMedia1 extends Page implements PageMediaDataInterface {\n    config: PageMediaDataInterface['config'];\n    initMode: 'auto' | 'custom';\n    dpInit: string;\n    panel: Panel;\n    items: PageMediaDataInterface['items'];\n    writeItems: PageMediaBaseConfigWrite | undefined;\n    private step: number = 0;\n    private headlinePos: number = 0;\n    private volume: number = 0;\n\n    constructor(adapter: AdapterClassDefinition, panel: Panel, options: PageMediaDataInterface, name: string) {\n        super(adapter, panel.panelSend, options.config.card, name);\n        this.config = options.config;\n        this.panel = panel;\n        this.writeItems = options.writeItems;\n        this.items = options.items;\n        this.initMode = options.initMode;\n        this.dpInit = options.dpInit;\n        this.minUpdateInterval = 2000;\n    }\n\n    async init(): Promise<void> {\n        const config = { ...this.config };\n        // search states for mode auto\n        const tempConfig: Partial<PageMediaDataInterface['config']> =\n            this.initMode === 'auto' ? await this.panel.readOnlyDB.getDataItemsFromAuto(this.dpInit, config) : {};\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<PageMediaDataInterface['items']> = await this.panel.readOnlyDB.createDataItems(\n            tempConfig,\n            this,\n        );\n        this.items = tempItem as PageMediaDataInterface['items'];\n        //check if command dps are valid\n        for (const g in this.writeItems) {\n            const d = g as keyof typeof this.writeItems;\n            const item = this.writeItems[d];\n            if (item === undefined) continue;\n            if (!item.dp || !(await this.panel.readOnlyDB.existsState(item.dp))) {\n                this.log.warn(`State ${item.dp} was not found!`);\n                this.writeItems[d] = undefined;\n            }\n        }\n    }\n    sendType(): void {\n        this.sendToPanel('pageType~cardMedia');\n    }\n    protected async onVisibilityChange(val: boolean): Promise<void> {\n        if (val) {\n            this.sendType();\n            this.update();\n        }\n    }\n    async update(): Promise<void> {\n        const item = this.items;\n        if (item === undefined) return;\n        const message: Partial<PageMediaMessage> = {};\n        // title\n        {\n            let duration = '0:00',\n                elapsed = '0:00',\n                title = 'unknown';\n            if (item.album) {\n                const v = await item.album.getString();\n                if (v !== null) {\n                    const maxSize = 18;\n                    if (v.length > maxSize) {\n                        const s = v + '          ';\n                        this.headlinePos = this.headlinePos % s.length;\n                        message.headline = (s + v).substring(this.headlinePos++ % (v + s).length).substring(0, 23);\n                    } else {\n                        message.headline = v;\n                    }\n                }\n            }\n            if (item.titel && item.titel.text) {\n                const v = await item.titel.text.getString();\n                if (v !== null) {\n                    title = v;\n                }\n            }\n            if (item.artist && item.artist.text) {\n                const v = await item.artist.text.getString();\n                if (v !== null) {\n                    message.artist = v;\n                }\n            }\n            if (item.duration && item.elapsed) {\n                const d = await item.duration.getNumber(); // medialength in seconds\n                if (d !== null) {\n                    const t = new Date().setHours(0, 0, d, 0);\n                    duration = new Date(t).toLocaleTimeString('de-DE', { minute: '2-digit', second: '2-digit' });\n                }\n                if (item.elapsed.type === 'string') {\n                    const e = await item.elapsed.getString();\n                    if (e !== null) {\n                        elapsed = e;\n                    }\n                } else if (item.elapsed.type === 'number') {\n                    const e = await item.elapsed.getNumber();\n                    if (e !== null) {\n                        const t = new Date().setHours(0, 0, e, 0);\n                        elapsed = new Date(t).toLocaleTimeString('de-DE', { minute: '2-digit', second: '2-digit' });\n                    }\n                }\n            }\n            message.title = `${title} (${elapsed}|${duration})`;\n        }\n        message.shuffle_icon = '';\n        if (item.shuffle && item.shuffle.type) {\n            let value: null | true | false = null;\n            switch (item.shuffle.type) {\n                case 'string': {\n                    const v = await item.shuffle.getString();\n                    if (v !== null) {\n                        value = ['OFF', 'FALSE'].indexOf(v.toUpperCase()) !== -1;\n                    }\n                    break;\n                }\n                case 'number':\n                case 'boolean': {\n                    value = await item.shuffle.getBoolean();\n                    break;\n                }\n                case 'undefined':\n                case 'object':\n                case 'array':\n                case 'mixed':\n                case 'file': {\n                    value = null;\n                    break;\n                }\n            }\n            if (value !== null) {\n                message.shuffle_icon = value ? 'shuffle-variant' : 'shuffle-disabled';\n            }\n        }\n        if (item.volume) {\n            const v = await item.volume.getNumber();\n            if (v !== null) {\n                this.volume = v;\n                message.volume = String(v);\n            }\n        }\n        if (item.mediaState) {\n            const v = await item.mediaState.getString();\n            if (v !== null) {\n                message.iconplaypause = (await this.getMediaState()) ? 'play' : 'pause';\n                if (await item.stop) {\n                    message.onoffbutton = v.toUpperCase() === 'STOP' ? '65535' : '1374';\n                } else {\n                    // no stop control so pause is stop\n                    message.onoffbutton = message.iconplaypause;\n                }\n            }\n        }\n\n        if (item.titel && item.titel.color) {\n            const v = await getValueFromBoolean(item.titel.color, 'color');\n            if (v !== null) message.titelColor = v;\n        }\n\n        message.options = [undefined, undefined, undefined, undefined, undefined];\n        if (item.toolbox && Array.isArray(item.toolbox)) {\n            const localStep = item.toolbox.length > 5 ? steps : 5;\n            if (item.toolbox.length > localStep * this.step) this.step = 1;\n            const maxSteps = localStep * this.step;\n\n            for (let a = maxSteps - localStep; a < maxSteps; a++) {\n                message.options[a] = await this.getToolItem(item.toolbox[a], String(a), (a % localStep) + 1);\n            }\n            if (localStep === 4) {\n                const color = String(rgb_dec565(White));\n                const icon = 'arrow-right';\n                message.options[4] = {\n                    pageId: `5`,\n                    iconNumber: 5,\n                    icon: Icons.GetIcon(icon),\n                    color,\n                    mode: 'nexttool',\n                    name: 'next',\n                };\n            }\n        }\n        //Logo\n        if (item.logo) {\n            message.logo = this.getBottomMessages(await this.getToolItem(item.logo, 'logo', 5));\n        }\n        {\n        }\n        const opts: string[] = [];\n        for (const a in message.options) {\n            const temp = message.options[a];\n            if (typeof temp === 'object') opts.push(this.getBottomMessages(temp));\n        }\n        const msg: PageMediaMessage = Object.assign(PageMediaMessageDefault, message, {\n            getNavigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n            id: 'media',\n            options: opts,\n        });\n        this.sendToPanel(this.getMessage(msg));\n        //this.log.warn(JSON.stringify(this.getMessage(msg)));\n    }\n    private async getMediaState(): Promise<boolean | null> {\n        if (!this.items) return null;\n        const item = this.items.mediaState;\n        if (item) {\n            const v = await item.getString();\n            if (v !== null) {\n                return ['PLAY', '1', 'TRUE'].indexOf(v.toUpperCase()) !== -1;\n            }\n        }\n        return null;\n    }\n    private async getOnOffState(): Promise<boolean | null> {\n        if (!this.items) return null;\n        const item = this.items.mediaState;\n        if (item) {\n            const v = await item.getString();\n            if (v !== null) {\n                return ['STOP', '0', 'FALSE'].indexOf(v.toUpperCase()) === -1;\n            }\n        }\n        return null;\n    }\n    private async getToolItem(\n        i: toolboxItemDataItem | undefined,\n        id: string,\n        iconNumber: number,\n    ): Promise<messageItem | undefined> {\n        if (i) {\n            if (i.on && i.text && i.color && i.icon) {\n                const v = await i.on.getBoolean();\n                const color = await getValueFromBoolean(i.color, 'color', !!v);\n                const icon = await getValueFromBoolean(i.icon, 'string', !!v);\n                const text = await i.text.getString();\n                const list = i.list ? await i.list.getString() : null;\n                if (list) this.log.debug(JSON.stringify(list));\n                if (color && icon && text) {\n                    const tool: messageItem = {\n                        pageId: `${id}`,\n                        iconNumber: iconNumber as 1 | 2 | 3 | 4 | 5,\n                        icon: Icons.GetIcon(icon),\n                        color,\n                        mode: i.action,\n                        name: this.adapter.library.getLocalTranslation('media', text),\n                    };\n                    return tool;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private getMessage(message: PageMediaMessage): string {\n        return this.getPayload(\n            'entityUpd',\n            message.headline,\n            message.getNavigation,\n            message.id,\n            message.title,\n            message.titelColor,\n            message.artist,\n            message.artistColor,\n            message.volume,\n            Icons.GetIcon(message.iconplaypause),\n            Icons.GetIcon(message.onoffbutton),\n            Icons.GetIcon(message.shuffle_icon),\n            message.logo, //'~~~~~'\n            this.getPayloadArray(message.options),\n        );\n    }\n    /**\n     * Create a part of the panel messsage for bottom icons. if event === '' u get '~~~~~~'.\n     * default for event: input_sel\n     * @param msg\n     * @returns string\n     */\n    private getBottomMessages(\n        msg:\n            | (Partial<messageItem> & { iconNumber: messageItem['iconNumber']; pageId: messageItem['pageId'] })\n            | undefined,\n    ): string {\n        if (!msg || !msg.pageId || !msg.icon || msg.event === '') return '~~~~~';\n        msg.event = msg.event === undefined ? 'input_sel' : msg.event;\n        msg.pageId = `${this.id}?${msg.pageId}?${msg.mode}`;\n        const iconNumber = msg.iconNumber;\n        const temp: Partial<messageItem> = msg;\n        delete temp.mode;\n        delete temp.iconNumber;\n        msg.ident = msg.ident || 'media0';\n        const message: typeof messageItemDefault = Object.assign(messageItemDefault, temp);\n\n        switch (iconNumber) {\n            case 0: {\n                message.ident = 'media0';\n                break;\n            }\n            case 1: {\n                message.ident = 'media1';\n                break;\n            }\n            case 2: {\n                message.ident = 'media2';\n                break;\n            }\n            case 3: {\n                message.ident = 'media3';\n                break;\n            }\n            case 4: {\n                message.ident = 'media4';\n                break;\n            }\n            case 5: {\n                message.ident = 'media5';\n                break;\n            }\n        }\n        return this.getPayload(message.event, message.pageId, message.icon, message.color, message.name, message.ident);\n    }\n    onStateTrigger = async (): Promise<void> => {\n        this.update();\n    };\n    async onButtonEvent(event: IncomingEvent): Promise<void> {\n        if (event.mode !== 'media') return;\n        if (isMediaButtonActionType(event.command)) {\n            this.log.debug('Receive event: ' + JSON.stringify(event));\n        } else return;\n        const items = this.items;\n        if (!items) return;\n        switch (event.command) {\n            case 'media-back': {\n                items.backward && (await items.backward.setStateTrue());\n                break;\n            }\n            case 'media-pause': {\n                if (items.pause && items.play) {\n                    if (await this.getMediaState()) await items.pause.setStateTrue();\n                    else await items.play.setStateTrue();\n                } else if (items.mediaState) {\n                }\n                break;\n            }\n            case 'media-next': {\n                items.forward && (await items.forward.setStateTrue());\n                break;\n            }\n            case 'media-shuffle': {\n                items.shuffle && (await items.shuffle.setStateTrue());\n                break;\n            }\n            case 'volumeSlider': {\n                if (items.volume) {\n                    let v = parseInt(event.opt);\n                    if (v > 100) v = 100;\n                    else if (v < 0) v = 0;\n                    await items.volume.setStateAsync(v);\n                } else {\n                    this.log.error(`Missing volumen controller. Report to dev`);\n                }\n                break;\n            }\n            case 'mode-speakerlist': {\n                break;\n            }\n            case 'mode-playlist': {\n                break;\n            }\n            case 'mode-tracklist': {\n                break;\n            }\n            case 'mode-repeat': {\n                break;\n            }\n            case 'mode-equalizer': {\n                break;\n            }\n            case 'mode-seek': {\n                break;\n            }\n            case 'mode-crossfade': {\n                break;\n            }\n            case 'mode-favorites': {\n                break;\n            }\n            case 'mode-insel': {\n                break;\n            }\n            case 'media-OnOff': {\n                if (items.stop) {\n                    if (await this.getOnOffState()) await items.stop.setStateTrue();\n                }\n\n                break;\n            }\n        }\n    }\n}\nexport const testConfigMedia: PageMediaDataInterface = {\n    //type: 'sonstiges',\n    dpInit: 'alexa2.0.Echo-Devices.G091EV0704641J8R.Player',\n    initMode: 'auto',\n    config: {\n        card: 'cardMedia',\n        heading: {\n            type: 'const',\n            constVal: 'test',\n        },\n        alwaysOnDisplay: {\n            type: 'const',\n            constVal: 'test',\n        },\n        album: {\n            mode: 'auto',\n            type: 'state',\n            role: 'media.album',\n            dp: '',\n        },\n        titel: {\n            on: {\n                type: 'const',\n                constVal: true,\n            },\n            text: {\n                mode: 'auto',\n                type: 'triggered',\n                role: 'media.title',\n                dp: '',\n            },\n            color: {\n                type: 'const',\n                constVal: { red: 250, green: 2, blue: 3 },\n            },\n            icon: undefined,\n            list: undefined,\n        },\n        duration: {\n            mode: 'auto',\n            type: 'state',\n            role: 'media.duration',\n            dp: '',\n        },\n        elapsed: {\n            mode: 'auto',\n            type: 'triggered',\n            role: ['media.elapsed', 'media.elapsed.text'],\n            dp: '',\n        },\n        volume: {\n            mode: 'auto',\n            type: 'triggered',\n            role: ['level.volume'],\n            dp: '',\n        },\n        artist: {\n            on: {\n                type: 'const',\n                constVal: true,\n            },\n            text: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.artist',\n                dp: '',\n            },\n            color: undefined,\n            icon: {\n                type: 'const',\n                constVal: 'diameter',\n            },\n            list: undefined,\n        },\n        shuffle: {\n            mode: 'auto',\n            type: 'state',\n            role: 'media.mode.shuffle',\n            dp: '',\n        },\n        icon: {\n            type: 'const',\n            constVal: 'dialpad',\n        },\n        play: {\n            mode: 'auto',\n            type: 'state',\n            role: ['button.play'],\n            dp: '',\n        },\n        mediaState: {\n            mode: 'auto',\n            type: 'triggered',\n            role: ['media.state'],\n            dp: '',\n        },\n        stop: {\n            mode: 'auto',\n            type: 'state',\n            role: ['button.stop'],\n            dp: '',\n        },\n        pause: {\n            mode: 'auto',\n            type: 'state',\n            role: 'button.pause',\n            dp: '',\n        },\n        forward: {\n            mode: 'auto',\n            type: 'state',\n            role: 'button.next',\n            dp: '',\n        },\n        backward: {\n            mode: 'auto',\n            type: 'state',\n            role: 'button.prev',\n            dp: '',\n        },\n        logo: {\n            on: {\n                type: 'const',\n                constVal: true,\n            },\n            text: { type: 'const', constVal: '1' },\n            icon: { type: 'const', constVal: 'home' },\n            color: { type: 'const', constVal: { red: 250, blue: 250, green: 0 } },\n            list: undefined,\n            action: 'cross',\n        },\n        toolbox: [\n            {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: 'Repeat' },\n                icon: { type: 'const', constVal: 'repeat' },\n                color: { type: 'const', constVal: { red: 123, blue: 112, green: 0 } },\n                list: { type: 'state', dp: '', mode: 'auto', role: 'media.playlist' },\n                action: 'cross',\n            },\n            {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { red: 123, blue: 112, green: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n            {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { red: 123, blue: 112, green: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n            {\n                on: {\n                    type: 'const',\n                    constVal: false,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { true: { type: 'const', constVal: 'reply' }, false: { type: 'const', constVal: 'replay' } },\n                color: { type: 'const', constVal: { red: 123, blue: 112, green: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n            {\n                on: {\n                    type: 'const',\n                    constVal: false,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { red: 123, blue: 112, green: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n            /*{\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { red: 123, blue: 112, green: 0 } },\n                list: undefined,\n                action: 'cross',\n            },*/\n        ],\n    },\n    items: undefined,\n    writeItems: undefined,\n};\n\ntype _selectValueFromBoolean = 'color' | 'string';\nexport async function getValueFromBoolean(\n    item:\n        | Record<BooleanUnion, Dataitem | undefined>\n        | ChangeTypeOfKeys<ColorEntryType, Dataitem | undefined>\n        | Dataitem\n        | undefined,\n    type: _selectValueFromBoolean,\n    value: boolean = true,\n): Promise<string | null> {\n    if (item) {\n        if (isDataItem(item)) {\n            const v = await getValueFromData(item, type);\n            if (v !== null) {\n                return v;\n            }\n        } else {\n            const colorOn = item.true && (await getValueFromData(item.true, type));\n            const colorOff = !value && item.false && (await getValueFromData(item.false, type));\n            if (colorOff) {\n                return colorOff;\n            } else {\n                return colorOn || null;\n            }\n        }\n    }\n    return null;\n}\nasync function getValueFromData(item: Dataitem, type: _selectValueFromBoolean): Promise<string | null> {\n    switch (type) {\n        case 'string': {\n            return item.getString();\n            break;\n        }\n        case 'color': {\n            return item.getRGBDec();\n            break;\n        }\n    }\n}\nfunction isMediaButtonActionType(F: MediaButtonActionType | string): F is MediaButtonActionType {\n    switch (F) {\n        case 'media-back':\n        case 'media-pause':\n        case 'media-next':\n        case 'media-shuffle':\n        case 'volumeSlider':\n        case 'mode-speakerlist':\n        case 'mode-playlist':\n        case 'mode-tracklist':\n        case 'mode-repeat':\n        case 'mode-equalizer':\n        case 'mode-seek':\n        case 'mode-crossfade':\n        case 'mode-favorites':\n        case 'mode-insel':\n        case 'media-OnOff':\n            return true;\n    }\n    console.error(`${F} isMediaButtonActionType === false`);\n    return false;\n}\ntype MediaButtonActionType = Extract<\n    ButtonActionType,\n    | 'media-back'\n    | 'media-pause'\n    | 'media-next'\n    | 'media-shuffle'\n    | 'volumeSlider'\n    | 'mode-speakerlist'\n    | 'mode-playlist'\n    | 'mode-tracklist'\n    | 'mode-repeat'\n    | 'mode-equalizer'\n    | 'mode-seek'\n    | 'mode-crossfade'\n    | 'mode-favorites'\n    | 'mode-insel'\n    | 'media-OnOff'\n>;\n\nexport type ButtonActionType =\n    | 'bExit'\n    | 'bUp'\n    | 'bNext'\n    | 'bSubNext'\n    | 'bPrev'\n    | 'bSubPrev'\n    | 'bHome'\n    | 'notifyAction'\n    | 'OnOff'\n    | 'button'\n    | 'up'\n    | 'stop'\n    | 'down'\n    | 'positionSlider'\n    | 'tiltOpen'\n    | 'tiltStop'\n    | 'tiltSlider'\n    | 'tiltClose'\n    | 'brightnessSlider'\n    | 'colorTempSlider'\n    | 'colorWheel'\n    | 'tempUpd'\n    | 'tempUpdHighLow'\n    | 'media-back'\n    | 'media-pause'\n    | 'media-next'\n    | 'media-shuffle'\n    | 'volumeSlider'\n    | 'mode-speakerlist'\n    | 'mode-playlist'\n    | 'mode-tracklist'\n    | 'mode-repeat'\n    | 'mode-equalizer'\n    | 'mode-seek'\n    | 'mode-crossfade'\n    | 'mode-favorites'\n    | 'mode-insel'\n    | 'media-OnOff'\n    | 'timer-start'\n    | 'timer-pause'\n    | 'timer-cancle'\n    | 'timer-finish'\n    | 'hvac_action'\n    | 'mode-modus1'\n    | 'mode-modus2'\n    | 'mode-modus3'\n    | 'number-set'\n    | 'mode-preset_modes'\n    | 'A1'\n    | 'A2'\n    | 'A3'\n    | 'A4'\n    | 'D1'\n    | 'U1';\n"],
  "mappings": "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",
  "names": []
}
