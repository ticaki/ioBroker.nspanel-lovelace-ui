{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageMedia.ts"],
  "sourcesContent": ["import { AdapterClassDefinition } from '../classes/library';\nimport { Panel } from '../controller/panel';\nimport { RGB } from '../types/types';\nimport { Card, Page } from './Page';\n\nexport const commands = {\n    cardMedia: {\n        on: '1374',\n        pause: '65535',\n    },\n};\nexport interface PageMedia {\n    mediaNamespace: string;\n    device: string;\n    dp: string;\n    heading: string;\n    alwaysOnDisplay: boolean;\n    album: string;\n    titel: listItem;\n    duration: string;\n    elapsed: string;\n    artist: listItem;\n    shuffle: string;\n    icon: string;\n    tracklist: listItem;\n    playlist: listItem;\n    equalizerList: listItem;\n    repeat: listItem;\n    toolstring: listItem;\n}\n\nexport type PageMediaMessage = {\n    event: 'entityUpd~';\n    name: string;\n    getNavigation: string;\n    id: string;\n    title: string;\n    titelColor: string;\n    artist: string;\n    artistColor: string;\n    volume: string;\n    iconplaypause: string;\n    onoffbutton: string;\n    shuffle_icon: string;\n    toolsString: object;\n    speakerListString: object;\n    playListString: object;\n    trackListString: object;\n    equalizerListString: object;\n    repeatButtonString: object;\n};\n\ntype listItem = { color: RGB; icon: string; list: string[] | string };\nexport type messageItem = {\n    event?: 'input_sel' | '' | 'button';\n    pageId: string;\n    iconNumber: 0 | 1 | 2 | 3 | 4 | 5; // media0 usw.\n    mode: 'speaker' | 'play' | 'tool' | 'track' | 'favor' | 'equal';\n    icon: string;\n    color: string;\n    name: string;\n    ident?: string;\n};\nconst messageItemDefault: Required<Omit<messageItem, 'iconNumber' | 'mode'>> = {\n    event: 'input_sel',\n    pageId: '',\n    icon: '',\n    color: '',\n    name: '',\n    ident: '',\n};\n\nexport class PageMedia1 extends Page {\n    constructor(adapter: AdapterClassDefinition, panel: Panel, card: Card, name: string) {\n        super(adapter, panel.panelSend, card, name);\n    }\n\n    /**\n     * Create a part of the panel messsage for bottom icons. if event === '' u get '~~~~~~'.\n     * default for event: input_sel\n     * @param msg\n     * @returns string\n     */\n    private getBottomMessages(\n        msg:\n            | (Partial<messageItem> & { iconNumber: messageItem['iconNumber']; pageId: messageItem['pageId'] })\n            | undefined,\n    ): string {\n        if (!msg || !msg.pageId || !msg.icon || msg.event === '') return '~~~~~~';\n        msg.event = msg.event === undefined ? 'input_sel' : msg.event;\n        msg.pageId = `${msg.pageId}?${msg.mode}`;\n        const iconNumber = msg.iconNumber;\n        const temp: Partial<messageItem> = msg;\n        delete temp.mode;\n        delete temp.iconNumber;\n        msg.ident = msg.ident || 'media0';\n        const message: typeof messageItemDefault = Object.assign(messageItemDefault, temp);\n\n        switch (iconNumber) {\n            case 0: {\n                message.ident = 'media0';\n                break;\n            }\n            case 1: {\n                message.ident = 'media1';\n                break;\n            }\n            case 2: {\n                message.ident = 'media2';\n                break;\n            }\n            case 3: {\n                message.ident = 'media3';\n                break;\n            }\n            case 4: {\n                message.ident = 'media4';\n                break;\n            }\n            case 5: {\n                message.ident = 'media5';\n                break;\n            }\n        }\n        return this.getPayload(message.event, message.pageId, message.icon, message.color, message.name, message.ident);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,kBAA2B;AAEpB,MAAM,WAAW;AAAA,EACpB,WAAW;AAAA,IACP,IAAI;AAAA,IACJ,OAAO;AAAA,EACX;AACJ;AAqDA,MAAM,qBAAyE;AAAA,EAC3E,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AACX;AAEO,MAAM,mBAAmB,iBAAK;AAAA,EACjC,YAAY,SAAiC,OAAc,MAAY,MAAc;AACjF,UAAM,SAAS,MAAM,WAAW,MAAM,IAAI;AAAA,EAC9C;AAAA,EAQQ,kBACJ,KAGM;AACN,QAAI,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,QAAQ,IAAI,UAAU;AAAI,aAAO;AACjE,QAAI,QAAQ,IAAI,UAAU,SAAY,cAAc,IAAI;AACxD,QAAI,SAAS,GAAG,IAAI,UAAU,IAAI;AAClC,UAAM,aAAa,IAAI;AACvB,UAAM,OAA6B;AACnC,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,QAAI,QAAQ,IAAI,SAAS;AACzB,UAAM,UAAqC,OAAO,OAAO,oBAAoB,IAAI;AAEjF,YAAQ,YAAY;AAAA,MAChB,KAAK,GAAG;AACJ,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,GAAG;AACJ,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,GAAG;AACJ,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,GAAG;AACJ,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,GAAG;AACJ,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,GAAG;AACJ,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,KAAK,WAAW,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,OAAO,QAAQ,MAAM,QAAQ,KAAK;AAAA,EAClH;AACJ;",
  "names": []
}
