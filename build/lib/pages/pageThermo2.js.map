{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageThermo2.ts"],
  "sourcesContent": ["import { Page } from '../classes/Page';\nimport { type PageInterface } from '../classes/PageInterface';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload, getPayloadArray } from '../const/tools';\nimport type * as pages from '../types/pages';\nimport type { IncomingEvent } from '../types/types';\nimport { PageItem } from './pageItem';\n\nconst PageThermo2MessageDefault: pages.PageThermo2Message = {\n    event: 'entityUpd',\n    headline: 'Page Thermo',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    dstTemp: '',\n    minTemp: '10',\n    maxTemp: '40',\n    tempStep: '5',\n    unit: '',\n    power: false,\n    options: [\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n        '~~~~~',\n    ],\n};\n/*type AtLeastOne<T, K extends keyof T = keyof T> = K extends keyof T ? Pick<T, K> & Partial<Omit<T, K>> : never;\n\ntype MyType = { a: string; b: string; c: string };\ntype MyValidType = AtLeastOne<MyType>;\n\nexport const a: MyValidType = { c: 'c' };*/\n\nexport class PageThermo2 extends Page {\n    //config: pages.cardThermoDataItemOptions;\n    items: pages.cardThermoDataItems | undefined;\n    private step: number = 1;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    public convertValue: 1 | 10 = 1;\n    private nextArrow: boolean = false;\n    public index = 0;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        if (config.card !== 'cardThermo') {\n            return;\n        }\n        if (options && options.pageItems) {\n            options.pageItems.unshift({\n                type: 'button',\n                dpInit: '',\n                role: 'button',\n                modeScr: undefined,\n                data: {\n                    icon: {\n                        true: {\n                            value: { type: 'const', constVal: 'arrow-right-bold-circle-outline' },\n                            color: { type: 'const', constVal: { red: 205, green: 142, blue: 153 } },\n                        },\n                    },\n                    entity1: { value: { type: 'const', constVal: true } },\n                },\n            });\n        }\n        super(config, options);\n        if (options.config && options.config.card == 'cardThermo') {\n            this.config = options.config;\n        } else {\n            throw new Error('Missing config!');\n        }\n        if (options.items && options.items.card == 'cardThermo') {\n            this.items = options.items;\n        }\n        this.filterDuplicateMessages = false;\n        this.minUpdateInterval = 2000;\n    }\n\n    async init(): Promise<void> {\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardThermoDataItems> =\n            this.enums || this.dpInit\n                ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config, undefined, this.enums)\n                : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardThermoDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        if (tempItem) {\n            tempItem.card = 'cardThermo';\n        }\n        this.items = tempItem as pages.cardThermoDataItems;\n        await super.init();\n\n        const v = Array.isArray(this.items.data)\n            ? this.items.data[0]\n                ? this.items.data[0].maxTemp && (await this.items.data[0].maxTemp.getNumber())\n                : null\n            : ((this.items.data.maxTemp && (await this.items.data.maxTemp.getNumber())) ?? null);\n        if (v != null) {\n            if (v < 100) {\n                this.convertValue = 10;\n            }\n        }\n    }\n\n    public async update(): Promise<void> {\n        if (!this.visibility) {\n            return;\n        }\n        const message: Partial<pages.PageThermo2Message> = {};\n        message.options = [\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n            '~~~~~',\n        ];\n        if (this.items) {\n            const data = Array.isArray(this.items.data)\n                ? this.items.data[this.index]\n                    ? this.items.data[this.index]\n                    : null\n                : this.items.data;\n            if (this.pageItems && data) {\n                /*const pageItems = this.pageItems.filter(\n                    a => a && a.dataItems && a.dataItems.type === 'button' && a.dataItems.data.entity1,\n                );*/\n                const pageItems = this.pageItems;\n\n                if (pageItems[1] && pageItems[1].dataItems?.data) {\n                    const t = pageItems[1].dataItems;\n                    if (PageItem.isPageItemTextDataItems(t)) {\n                        t.data = t.data || {};\n                        t.data.entity1 = data.entity1;\n                    }\n                }\n\n                if (pageItems[3] && pageItems[3].dataItems?.data) {\n                    const t = pageItems[3].dataItems;\n                    if (PageItem.isPageItemTextDataItems(t)) {\n                        t.data = t.data || {};\n                        t.data.entity1 = data.humidity;\n                    }\n                }\n\n                const a = pageItems[0] && (await pageItems[0].dataItems?.data.icon?.true?.value?.getString());\n                this.log.debug(`Icon: ${a}`);\n                let b = 0;\n                for (let a = 1; a < 9; a++, b++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        message.options[b] = await temp.getPageItemPayload();\n                    }\n                }\n\n                const localStep = pageItems.length > 17 ? 7 : 8;\n                if (pageItems.length - 9 - 1 <= localStep * (this.step - 1)) {\n                    this.step = 1;\n                }\n                // arrow is at index [0]\n                const maxSteps = localStep * this.step + 9;\n                const minStep = localStep * (this.step - 1) + 9;\n                b = 8; //pageItems.length >= 16 ? 0 : Math.ceil((8 - (pageItems.length-8)) / 2);\n                for (let a = minStep; a < maxSteps; a++, b++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        message.options[b] = await temp.getPageItemPayload();\n                    }\n                }\n\n                if (localStep === 7) {\n                    this.nextArrow = true;\n                    const temp = this.pageItems[8];\n                    if (temp) {\n                        const a = await temp.dataItems?.data.icon?.true?.value?.getString();\n                        this.log.debug(`Next Arrow Icon: ${a} used`);\n                        message.options[message.options.length - 1] = await temp.getPageItemPayload();\n                    }\n                }\n\n                /*for (let a = 0; a < pageItems.length && a < message.options.length; a++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[a] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    }\n                }*/\n            }\n\n            if (data) {\n                message.headline = this.library.getTranslation(\n                    (data && data.headline && (await data.headline.getString())) ?? '',\n                );\n\n                message.navigation = this.getNavigation();\n\n                let v: number | null = (data.set && (await data.set.getNumber())) ?? null;\n                if (v !== null) {\n                    message.dstTemp = v * 10;\n                }\n                v = (data.minTemp && (await data.minTemp.getNumber())) ?? null;\n                if (v !== null) {\n                    message.minTemp = v * this.convertValue;\n                } else if (data.set && data.set.common.min != null) {\n                    message.minTemp = data.set.common.min * 10;\n                } else {\n                    message.minTemp = 150;\n                }\n\n                v = (data.maxTemp && (await data.maxTemp.getNumber())) ?? null;\n                if (v !== null) {\n                    message.maxTemp = v * this.convertValue;\n                } else if (data.set && data.set.common.max != null) {\n                    message.maxTemp = data.set.common.max * 10;\n                } else {\n                    message.maxTemp = 300;\n                }\n\n                // if we dont have a unit we get it from set1 or set2\n                const v1 = (data.unit && (await data.unit.getString())) ?? null;\n                if (v1 !== null) {\n                    message.unit = Icons.GetIcon(v1) || v1;\n                } else {\n                    if (data) {\n                        const set = data.set;\n                        if (set) {\n                            if (set.common.unit) {\n                                message.unit = set.common.unit;\n                            }\n                        } /*else {\n                        set = data.set2;\n                        if (set) {\n                            if (set.common.unit) {\n                                message.tCF = set.common.unit;\n                            }\n                        }\n                    }*/\n                    }\n                }\n                v = (data.tempStep && (await data.tempStep.getNumber())) ?? null;\n                if (v !== null) {\n                    message.tempStep = String(v * this.convertValue);\n                } else if (data.set && data.set.common.step) {\n                    message.tempStep = String(data.set.common.step * 10);\n                } else {\n                    message.tempStep = '5';\n                }\n                message.tempStep = parseFloat(message.tempStep) < 1 ? '1' : message.tempStep;\n            }\n            //this.pageItems && this.pageItems.some((a) => a.dataItems && a.dataItems.type === 'input_sel') ? '' : 1;\n        }\n\n        const msg: pages.PageThermo2Message = Object.assign(PageThermo2MessageDefault, message);\n        const msg2 = this.getMessage(msg);\n        this.sendToPanel(msg2, false);\n    }\n\n    async onButtonEvent(event: IncomingEvent): Promise<void> {\n        if (event.action === 'tempUpd') {\n            if (!this.items) {\n                return;\n            }\n            const data = Array.isArray(this.items.data)\n                ? this.items.data[this.index]\n                    ? this.items.data[this.index]\n                    : null\n                : this.items.data;\n            if (data) {\n                const newValLow = parseInt(event.opt) / 10;\n                const valLow = (data.set && (await data.set.getNumber())) ?? null;\n                if (valLow !== null && newValLow !== valLow) {\n                    await data.set!.setStateAsync(newValLow);\n                }\n            }\n        } else if (\n            event.action === 'hvac_action' &&\n            this.pageItems &&\n            this.pageItems[Number(event.opt.split('?')[1])]\n        ) {\n            if (this.nextArrow && event.opt.split('?')[1] === '0') {\n                this.step++;\n                await this.update();\n            } else if (await this.pageItems[Number(event.opt.split('?')[1])]!.onCommand('button', '')) {\n                return;\n            }\n        }\n    }\n\n    private getMessage(message: pages.PageThermo2Message): string {\n        return getPayload(\n            'entityUpd',\n            message.headline,\n            message.navigation,\n            String(message.dstTemp),\n            String(message.minTemp),\n            String(message.maxTemp),\n            message.tempStep,\n            message.unit,\n            message.power ? '1' : '0',\n            getPayloadArray(message.options),\n        );\n    }\n    protected async onVisibilityChange(val: boolean): Promise<void> {\n        await super.onVisibilityChange(val);\n        if (val) {\n            for (const item of this.pageItems ?? []) {\n                if (item && item.dataItems && item.dataItems.type === 'input_sel') {\n                    if (this.controller) {\n                        await this.controller.statesControler.activateTrigger(item);\n                    }\n                }\n            }\n        } else {\n            for (const item of this.pageItems ?? []) {\n                if (item && item.dataItems && item.dataItems.type === 'input_sel') {\n                    if (this.controller) {\n                        await this.controller.statesControler.deactivateTrigger(item);\n                    }\n                }\n            }\n        }\n    }\n    protected async onStateTrigger(): Promise<void> {\n        await this.update();\n    }\n    async reset(): Promise<void> {\n        this.step = 1;\n    }\n}\n"],
  "mappings": "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",
  "names": ["a"]
}
