{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageLChart.ts"],
  "sourcesContent": ["import { Page, PageInterface } from '../classes/Page';\nimport { Color } from '../const/Color';\nimport { getEntryTextOnOff, getIconEntryColor, getPayload } from '../const/tools';\nimport * as pages from '../types/pages';\nimport { IncomingEvent } from '../types/types';\n\nconst PageLChartMessageDefault: pages.PageChartMessage = {\n    event: 'entityUpd',\n    headline: 'Page L - Chart',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    color: '', //Balkenfarbe\n    text: '', //Bezeichnung y Achse\n    ticks: [], //Werte y Achse\n    value: '', //Werte x Achse\n};\n\n/**\n * untested\n */\nexport class PageLChart extends Page {\n    items: pages.PageBaseConfig['items'];\n    private step: number = 1;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    private nextArrow: boolean = false;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options);\n        if (options.config && options.config.card == 'cardLChart') this.config = options.config;\n        this.minUpdateInterval = 1000;\n    }\n\n    async init(): Promise<void> {\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardLChartDataItemOptions> =\n            this.enums || this.dpInit\n                ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config, undefined, this.enums)\n                : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardLChartDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        this.items = tempItem as pages.cardLChartDataItems;\n        // set card because we lose it\n        this.items.card = 'cardLChart';\n        await super.init();\n    }\n\n    /**\n     *\n     * @returns\n     */\n    public async update(): Promise<void> {\n        if (!this.visibility) return;\n        this.panel.lastCard = '';\n        this.sendType();\n        const message: Partial<pages.PageChartMessage> = {};\n        const items = this.items;\n        if (!items || items.card !== 'cardLChart') return;\n        const data = items.data;\n\n        message.headline = (data.headline && (await data.headline.getTranslatedString())) ?? this.name;\n        message.navigation = this.getNavigation();\n        message.color = await getIconEntryColor(data.color, true, Color.White);\n        message.text = (await getEntryTextOnOff(data.text, true)) ?? '';\n        message.value = (data.value && (await data.value.getString())) ?? '';\n        message.ticks = [];\n        const ticks = data.ticks && (await data.ticks.getObject());\n        if (ticks && Array.isArray(ticks)) {\n            message.ticks = ticks;\n        } else if (message.value) {\n            const timeValueRegEx = /\\~\\d+:(\\d+)/g;\n            const sorted: number[] = [...(message.value.matchAll(timeValueRegEx) || [])]\n                .map((x) => parseFloat(x[1]))\n                .sort((x, y) => (x < y ? -1 : 1));\n            const minValue = sorted[0];\n            const maxValue = sorted[sorted.length - 1];\n            const tick = Math.max(Number(((maxValue - minValue) / 5).toFixed()), 10);\n            let currentTick = minValue - tick;\n            while (currentTick < maxValue + tick) {\n                message.ticks.push(String(currentTick));\n                currentTick += tick;\n            }\n        }\n        this.sendToPanel(this.getMessage(message));\n    }\n\n    private getMessage(_message: Partial<pages.PageChartMessage>): string {\n        let result: pages.PageChartMessage = PageLChartMessageDefault;\n        result = Object.assign(result, _message) as pages.PageChartMessage;\n        return getPayload(\n            'entityUpd',\n            result.headline,\n            result.navigation,\n            result.color,\n            result.text,\n            result.ticks.join(':'),\n            result.value,\n        );\n    }\n\n    protected async onStateTrigger(_id: string): Promise<void> {\n        this.adapter.setTimeout(() => this.update(), 50);\n    }\n    /**\n     *a\n     * @param _event\n     * @returns\n     */\n    async onButtonEvent(_event: IncomingEvent): Promise<void> {\n        //if (event.page && event.id && this.pageItems) {\n        //    this.pageItems[event.id as any].setPopupAction(event.action, event.opt);\n        //}\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
