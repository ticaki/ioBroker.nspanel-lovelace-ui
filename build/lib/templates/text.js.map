{
  "version": 3,
  "sources": ["../../../src/lib/templates/text.ts"],
  "sourcesContent": ["import { Color } from '../const/Color';\nimport type { TemplateItems } from '../types/types';\n\nexport const textTemplates: TemplateItems = {\n    'text.window.isOpen': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'window-open-variant' },\n                    color: { type: 'const', constVal: Color.open },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'window-closed-variant' },\n                    color: { type: 'const', constVal: Color.close },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['sensor.window', 'sensor.open'],\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'window' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: { type: 'const', constVal: 'closed' },\n            },\n        },\n    },\n    'text.window.isClose': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'window-open-variant' },\n                    color: { type: 'const', constVal: Color.Cyan },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'window-closed-variant' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['sensor.window', 'sensor.open'],\n                    dp: '',\n                    read: 'return !val',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'window' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: { type: 'const', constVal: 'closed' },\n            },\n        },\n    },\n    'text.temperature': {\n        role: '',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'temperature-celsius' },\n                    text: {\n                        value: {\n                            type: 'triggered',\n                            mode: 'auto',\n                            role: 'value.temperature',\n                            dp: '',\n                            read: 'return Math.round(val*10)/10',\n                        },\n                    },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'temperature-celsius' },\n                    color: { type: 'const', constVal: Color.Blue },\n                },\n                scale: { type: 'const', constVal: { min: 0, max: 30 } },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.temperature',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'Temperature' },\n                false: undefined,\n            },\n            text1: {\n                true: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.temperature',\n                    dp: '',\n                    read: 'return Math.round(parseFloat(val)*10)/10',\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.battery': {\n        /**\n         * entity1 enth\u00E4lt den F\u00FCllstand\n         * entity2 ebenfalls\n         * entity3 ist true f\u00FCr laden und false f\u00FCr entladen. default ist false entity3 wird nicht automatisch gefunden\n         */\n        role: 'battery',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.battery',\n                        dp: '',\n                        read: `const v = Math.round(val / 10)\n                        switch (v) {\n                            case 0:\n                                return 'battery-charging-outline';\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                                return 'battery-charging-' + v + '0';\n                            case 10:\n                            default:\n                                return 'battery-charging';}`,\n                    },\n                    text: {\n                        value: {\n                            type: 'triggered',\n                            mode: 'auto',\n                            role: 'value.battery',\n                            dp: '',\n                        },\n                        unit: {\n                            type: 'const',\n                            constVal: '%',\n                        },\n                        textSize: { type: 'const', constVal: 2 },\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.Green,\n                    },\n                },\n                false: {\n                    value: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.battery',\n                        dp: '',\n                        read: `const v = Math.round(val / 10)\n                            switch (v) {\n                                case 0:\n                                    return 'battery-outline';\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                    return 'battery-' + v + '0';\n                                case 10:\n                                default:\n                                    return 'battery';}`,\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.Red,\n                    },\n                },\n                scale: { type: 'const', constVal: { val_min: 10, val_max: 50, log10: 'max' } },\n            },\n            entity1: {\n                value: {\n                    type: 'state',\n                    mode: 'auto',\n                    role: 'value.battery',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'Battery' },\n                false: undefined,\n            },\n            entity2: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.battery',\n                    dp: '',\n                },\n                unit: { type: 'const', constVal: '%' },\n            },\n        },\n    },\n    'text.battery.bydhvs': {\n        /**\n         * entity1 enth\u00E4lt den F\u00FCllstand\n         * entity2 ebenfalls\n         * entity3 ist true f\u00FCr laden und false f\u00FCr entladen. default ist false entity3 wird nicht automatisch gefunden\n         */\n        template: 'text.battery',\n        role: 'battery',\n        adapter: 'bydhvs',\n        type: 'text',\n        dpInit: '/bydhvs\\\\.#\u00B0^\u00B0#\\\\./',\n\n        data: {\n            icon: {\n                true: {\n                    value: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.battery',\n                        dp: '',\n                        regexp: /\\.State\\.SOC$/,\n                        read: `const v = Math.round(val / 10)\n                        switch (v) {\n                            case 0:\n                                return 'battery-charging-outline';\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                                return 'battery-charging-' + v + '0';\n                            case 10:\n                            default:\n                                return 'battery-charging';}`,\n                    },\n                    text: {\n                        value: {\n                            type: 'triggered',\n                            mode: 'auto',\n                            role: 'value.battery',\n                            dp: '',\n                            regexp: /\\.State\\.SOC$/,\n                        },\n                        unit: {\n                            type: 'const',\n                            constVal: '%',\n                        },\n                        textSize: { type: 'const', constVal: 2 },\n                    },\n                    color: undefined,\n                },\n                false: {\n                    value: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.battery',\n                        dp: '',\n                        regexp: /\\.State\\.SOC$/,\n                        read: `const v = Math.round(val / 10)\n                            switch (v) {\n                                case 0:\n                                    return 'battery-outline';\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                    return 'battery-' + v + '0';\n                                case 10:\n                                default:\n                                    return 'battery';}`,\n                    },\n                    color: undefined,\n                },\n                scale: { type: 'const', constVal: { val_min: 10, val_max: 50, log10: 'max' } },\n            },\n            entity1: {\n                value: {\n                    type: 'state',\n                    mode: 'auto',\n                    role: 'value.battery',\n                    dp: '',\n                    regexp: /\\.State\\.SOC$/,\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'Battery' },\n                false: undefined,\n            },\n            entity2: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.battery',\n                    dp: '',\n                    regexp: /\\.State\\.SOC$/,\n                },\n                unit: { type: 'const', constVal: '%' },\n            },\n            entity3: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.power',\n                    dp: '',\n                    regexp: /\\.State\\.Power$/,\n                    read: 'return val <= 0',\n                },\n            },\n        },\n    },\n    'text.battery.low': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'battery-outline' },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'battery' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'indicator.lowbat',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'Battery' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'ok' },\n                false: { type: 'const', constVal: 'low' },\n            },\n        },\n    },\n    'text.accuweather.sunriseset': {\n        role: '4values',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'weather-sunset-up' },\n                    color: { type: 'const', constVal: { r: 255, g: 138, b: 18 } },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'weather-sunset-down' },\n                    color: { type: 'const', constVal: { r: 255, g: 209, b: 163 } },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'date.sunrise.forecast.0',\n                    dp: '',\n                    read: `const n = Date.now();\n                        const t = new Date(val).getTime();\n                        if (t < n) return null;\n                        return t;`,\n                },\n                dateFormat: {\n                    type: 'const',\n                    constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                },\n            },\n            entity2: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'date.sunset.forecast.0',\n                    dp: '',\n                    read: `const n = Date.now();\n                    const t = new Date(val).getTime();\n                    if (t < n) return null;\n                    return t;`,\n                },\n                dateFormat: {\n                    type: 'const',\n                    constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                },\n            },\n            entity3: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'date.sunrise.forecast.1',\n                    dp: '',\n                    read: `const n = Date.now();\n                    const t = new Date(val).getTime();\n                    if (t < n) return null;\n                    return t;`,\n                },\n                dateFormat: {\n                    type: 'const',\n                    constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                },\n            },\n            entity4: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'date.sunset.forecast.1',\n                    dp: '',\n                    read: `const n = Date.now();\n                    const t = new Date(val).getTime();\n                    if (t < n) return null;\n                    return t;`,\n                },\n                dateFormat: {\n                    type: 'const',\n                    constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'sunriseToken' },\n                false: { type: 'const', constVal: 'sunsetToken' },\n            },\n            text1: undefined,\n        },\n    },\n    'text.accuweather.favorit': {\n        role: 'text',\n        adapter: 'accuweather',\n        type: 'text',\n        modeScr: 'favorit',\n        data: {\n            entity2: {\n                value: {\n                    role: 'value.temperature',\n                    mode: 'auto',\n                    type: 'state',\n                    dp: '',\n                    regexp: /\\.Current\\.Temperature$/,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: null,\n                },\n                factor: undefined,\n                unit: {\n                    type: 'const',\n                    constVal: '\u00B0C',\n                },\n            },\n\n            icon: {\n                true: {\n                    value: {\n                        type: 'state',\n                        role: 'value',\n                        mode: 'auto',\n                        dp: '',\n                        regexp: /\\.Current\\.WeatherIcon$/,\n                        /**\n                         * How to use\n                         * this run its own this. U dont have accress to variables that no definied for this.\n                         * Color: in a import of color.ts\n                         * val: is the incoming value - raw\n                         *\n                         * The best thing is to write the function with () => { here }. Then remove the () => {}\n                         * and convert it into a template literal, using ``. A return is mandatory.\n                         */\n                        read: `{\n                    switch (val) {\n                        case 30: // Hot\n                            return 'weather-sunny-alert'; // exceptional\n\n                        case 24: // Ice\n                        case 31: // Cold\n                            return 'snowflake-alert'; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return 'weather-cloudy'; // cloudy\n\n                        case 11: // fog\n                            return 'weather-fog'; // fog\n\n                        case 25: // Sleet\n                            return 'weather-hail'; // Hail\n\n                        case 15: // T-Storms\n                            return 'weather-lightning'; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return 'weather-lightning-rainy'; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return 'weather-night';\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return 'weather-partly-cloudy'; // partlycloudy\n\n                        case 18: // pouring\n                            return 'weather-pouring'; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return 'weather-rainy'; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return 'weather-snowy'; // snowy\n\n                        case 29: // Rain and Snow\n                            return 'weather-snowy-rainy'; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return 'weather-sunny'; // sunny\n\n                        case 32: // windy\n                            return 'weather-windy'; // windy\n\n                        default:\n                            return 'alert-circle-outline';\n                    }\n                }`,\n                    },\n                    color: {\n                        type: 'triggered',\n                        role: 'value',\n                        mode: 'auto',\n                        dp: '',\n                        regexp: /\\.Current\\.WeatherIcon$/,\n                        read: `switch (val) {\n                    case 24: // Ice\n                    case 30: // Hot\n                    case 31: // Cold\n                        return Color.swExceptional; // exceptional\n\n                    case 7: // Cloudy\n                    case 8: // Dreary (Overcast)\n                    case 38: // Mostly Cloudy\n                        return Color.swCloudy; // cloudy\n\n                    case 11: // fog\n                        return Color.swFog; // fog\n\n                    case 25: // Sleet\n                        return Color.swHail; // Hail\n\n                    case 15: // T-Storms\n                        return Color.swLightning; // lightning\n\n                    case 16: // Mostly Cloudy w/ T-Storms\n                    case 17: // Partly Sunny w/ T-Storms\n                    case 41: // Partly Cloudy w/ T-Storms\n                    case 42: // Mostly Cloudy w/ T-Storms\n                        return Color.swLightningRainy; // lightning-rainy\n\n                    case 33: // Clear\n                    case 34: // Mostly Clear\n                    case 37: // Hazy Moonlight\n                        return Color.swClearNight;\n\n                    case 3: // Partly Sunny\n                    case 4: // Intermittent Clouds\n                    case 6: // Mostly Cloudy\n                    case 35: // Partly Cloudy\n                    case 36: // Intermittent Clouds\n                        return Color.swPartlycloudy; // partlycloudy\n\n                    case 18: // pouring\n                        return Color.swPouring; // pouring\n\n                    case 12: // Showers\n                    case 13: // Mostly Cloudy w/ Showers\n                    case 14: // Partly Sunny w/ Showers\n                    case 26: // Freezing Rain\n                    case 39: // Partly Cloudy w/ Showers\n                    case 40: // Mostly Cloudy w/ Showers\n                        return Color.swRainy; // rainy\n\n                    case 19: // Flurries\n                    case 20: // Mostly Cloudy w/ Flurries\n                    case 21: // Partly Sunny w/ Flurries\n                    case 22: // Snow\n                    case 23: // Mostly Cloudy w/ Snow\n                    case 43: // Mostly Cloudy w/ Flurries\n                    case 44: // Mostly Cloudy w/ Snow\n                        return Color.swSnowy; // snowy\n\n                    case 29: // Rain and Snow\n                        return Color.swSnowyRainy; // snowy-rainy\n\n                    case 1: // Sunny\n                    case 2: // Mostly Sunny\n                    case 5: // Hazy Sunshine\n                        return Color.swSunny; // sunny\n\n                    case 32: // windy\n                        return Color.swWindy; // windy\n\n                    default:\n                        return Color.White;\n                }`,\n                    },\n                },\n                false: { value: undefined, color: undefined },\n            },\n\n            text: {\n                true: undefined,\n                false: undefined,\n            },\n        },\n    },\n    'text.accuweather.bot2values': {\n        role: '2values',\n        type: 'text',\n        modeScr: 'bottom',\n        adapter: 'accuweather',\n        data: {\n            entity1: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    dp: '',\n                    regexp: /^accuweather\\.[0-9]+\\.Summary\\.TempMin_/,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                factor: undefined,\n                unit: {\n                    type: 'const',\n                    constVal: '\u00B0 ',\n                },\n            },\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    dp: '',\n                    regexp: /^accuweather\\.[0-9]+\\.Summary\\.TempMax_/,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                factor: undefined,\n                unit: {\n                    type: 'const',\n                    constVal: '\u00B0',\n                },\n            },\n            icon: {\n                true: {\n                    value: {\n                        mode: 'auto',\n                        role: '',\n                        type: 'triggered',\n                        regexp: /^accuweather\\.[0-9]+\\.Summary\\.WeatherIcon_/,\n                        dp: '',\n                        read: `{\n                                switch (val) {\n                                    case 30: // Hot\n                                        return 'weather-sunny-alert'; // exceptional\n\n                                    case 24: // Ice\n                                    case 31: // Cold\n                                        return 'snowflake-alert'; // exceptional\n\n                                    case 7: // Cloudy\n                                    case 8: // Dreary (Overcast)\n                                    case 38: // Mostly Cloudy\n                                        return 'weather-cloudy'; // cloudy\n\n                                    case 11: // fog\n                                        return 'weather-fog'; // fog\n\n                                    case 25: // Sleet\n                                        return 'weather-hail'; // Hail\n\n                                    case 15: // T-Storms\n                                        return 'weather-lightning'; // lightning\n\n                                    case 16: // Mostly Cloudy w/ T-Storms\n                                    case 17: // Partly Sunny w/ T-Storms\n                                    case 41: // Partly Cloudy w/ T-Storms\n                                    case 42: // Mostly Cloudy w/ T-Storms\n                                        return 'weather-lightning-rainy'; // lightning-rainy\n\n                                    case 33: // Clear\n                                    case 34: // Mostly Clear\n                                    case 37: // Hazy Moonlight\n                                        return 'weather-night';\n\n                                    case 3: // Partly Sunny\n                                    case 4: // Intermittent Clouds\n                                    case 6: // Mostly Cloudy\n                                    case 35: // Partly Cloudy\n                                    case 36: // Intermittent Clouds\n                                        return 'weather-partly-cloudy'; // partlycloudy\n\n                                    case 18: // pouring\n                                        return 'weather-pouring'; // pouring\n\n                                    case 12: // Showers\n                                    case 13: // Mostly Cloudy w/ Showers\n                                    case 14: // Partly Sunny w/ Showers\n                                    case 26: // Freezing Rain\n                                    case 39: // Partly Cloudy w/ Showers\n                                    case 40: // Mostly Cloudy w/ Showers\n                                        return 'weather-rainy'; // rainy\n\n                                    case 19: // Flurries\n                                    case 20: // Mostly Cloudy w/ Flurries\n                                    case 21: // Partly Sunny w/ Flurries\n                                    case 22: // Snow\n                                    case 23: // Mostly Cloudy w/ Snow\n                                    case 43: // Mostly Cloudy w/ Flurries\n                                    case 44: // Mostly Cloudy w/ Snow\n                                        return 'weather-snowy'; // snowy\n\n                                    case 29: // Rain and Snow\n                                        return 'weather-snowy-rainy'; // snowy-rainy\n\n                                    case 1: // Sunny\n                                    case 2: // Mostly Sunny\n                                    case 5: // Hazy Sunshine\n                                        return 'weather-sunny'; // sunny\n\n                                    case 32: // windy\n                                        return 'weather-windy'; // windy\n\n                                    default:\n                                        return 'alert-circle-outline';\n                                }\n                            }`,\n                    },\n                    color: {\n                        mode: 'auto',\n                        role: '',\n                        type: 'triggered',\n                        dp: '',\n                        regexp: /^accuweather\\.[0-9]+\\.Summary\\.WeatherIcon_/,\n                        read: `{\n                                switch (val) {\n                                    case 24: // Ice\n                                    case 30: // Hot\n                                    case 31: // Cold\n                                        return Color.swExceptional; // exceptional\n\n                                    case 7: // Cloudy\n                                    case 8: // Dreary (Overcast)\n                                    case 38: // Mostly Cloudy\n                                        return Color.swCloudy; // cloudy\n\n                                    case 11: // fog\n                                        return Color.swFog; // fog\n\n                                    case 25: // Sleet\n                                        return Color.swHail; // Hail\n\n                                    case 15: // T-Storms\n                                        return Color.swLightning; // lightning\n\n                                    case 16: // Mostly Cloudy w/ T-Storms\n                                    case 17: // Partly Sunny w/ T-Storms\n                                    case 41: // Partly Cloudy w/ T-Storms\n                                    case 42: // Mostly Cloudy w/ T-Storms\n                                        return Color.swLightningRainy; // lightning-rainy\n\n                                    case 33: // Clear\n                                    case 34: // Mostly Clear\n                                    case 37: // Hazy Moonlight\n                                        return Color.swClearNight;\n\n                                    case 3: // Partly Sunny\n                                    case 4: // Intermittent Clouds\n                                    case 6: // Mostly Cloudy\n                                    case 35: // Partly Cloudy\n                                    case 36: // Intermittent Clouds\n                                        return Color.swPartlycloudy; // partlycloudy\n\n                                    case 18: // pouring\n                                        return Color.swPouring; // pouring\n\n                                    case 12: // Showers\n                                    case 13: // Mostly Cloudy w/ Showers\n                                    case 14: // Partly Sunny w/ Showers\n                                    case 26: // Freezing Rain\n                                    case 39: // Partly Cloudy w/ Showers\n                                    case 40: // Mostly Cloudy w/ Showers\n                                        return Color.swRainy; // rainy\n\n                                    case 19: // Flurries\n                                    case 20: // Mostly Cloudy w/ Flurries\n                                    case 21: // Partly Sunny w/ Flurries\n                                    case 22: // Snow\n                                    case 23: // Mostly Cloudy w/ Snow\n                                    case 43: // Mostly Cloudy w/ Flurries\n                                    case 44: // Mostly Cloudy w/ Snow\n                                        return Color.swSnowy; // snowy\n\n                                    case 29: // Rain and Snow\n                                        return Color.swSnowyRainy; // snowy-rainy\n\n                                    case 1: // Sunny\n                                    case 2: // Mostly Sunny\n                                    case 5: // Hazy Sunshine\n                                        return Color.swSunny; // sunny\n\n                                    case 32: // windy\n                                        return Color.swWindy; // windy\n\n                                    default:\n                                        return Color.White;\n                                }\n                            }`,\n                    },\n                },\n                false: {\n                    value: undefined,\n                    color: undefined,\n                },\n                scale: undefined,\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    dp: '',\n                    regexp: /^accuweather\\.[0-9]+\\.Summary\\.DayOfWeek_/,\n                },\n                false: undefined,\n            },\n        },\n    },\n\n    'text.accuweather.windspeed': {\n        role: 'text',\n        type: 'text',\n        modeScr: 'bottom',\n        adapter: 'accuweather',\n        data: {\n            entity1: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.WindSpeed/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: undefined,\n            },\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.WindSpeed/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: {\n                    type: 'const',\n                    constVal: 'km/h',\n                },\n            },\n            icon: {\n                true: {\n                    value: {\n                        type: 'const',\n                        constVal: 'weather-windy',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSRed,\n                    },\n                },\n                false: {\n                    value: {\n                        type: 'const',\n                        constVal: 'weather-windy',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSGreen,\n                    },\n                },\n                scale: {\n                    type: 'const',\n                    constVal: { val_min: 0, val_max: 80 },\n                },\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'Wind',\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.accuweather.winddirection': {\n        role: 'text',\n        type: 'text',\n        modeScr: 'bottom',\n        adapter: 'accuweather',\n        data: {\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.WindDirectionText/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                factor: undefined,\n                unit: {\n                    type: 'const',\n                    constVal: '\u00B0',\n                },\n            },\n            icon: {\n                true: {\n                    value: {\n                        type: 'const',\n                        constVal: 'windsock',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: '#FFFFFF',\n                    },\n                },\n                false: {\n                    value: undefined,\n                    color: undefined,\n                },\n                scale: undefined,\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'Windr.',\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.accuweather.uvindex': {\n        role: 'text',\n        type: 'text',\n        adapter: 'accuweather',\n        data: {\n            entity1: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.UVIndex$/,\n                    dp: ``,\n                    forceType: 'string',\n                },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n            },\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.UVIndex$/,\n                    dp: ``,\n                    forceType: 'string',\n                },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n            },\n            icon: {\n                true: {\n                    value: {\n                        type: 'const',\n                        constVal: 'solar-power',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSRed,\n                    },\n                },\n                false: {\n                    value: {\n                        type: 'const',\n                        constVal: 'solar-power',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSGreen,\n                    },\n                },\n                scale: {\n                    type: 'const',\n                    constVal: { val_min: 0, val_max: 9 },\n                },\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'UV',\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.accuweather.windgust': {\n        role: 'text',\n        type: 'text',\n        modeScr: 'bottom',\n        adapter: 'accuweather',\n        data: {\n            entity1: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.WindGust/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: undefined,\n            },\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^accuweather\\.[0-9]+\\.Current\\.WindGust/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: {\n                    type: 'const',\n                    constVal: 'km/h',\n                },\n            },\n            icon: {\n                true: {\n                    value: {\n                        type: 'const',\n                        constVal: 'weather-tornado',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSRed,\n                    },\n                },\n                false: {\n                    value: {\n                        type: 'const',\n                        constVal: 'weather-tornado',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSGreen,\n                    },\n                },\n                scale: {\n                    type: 'const',\n                    constVal: { val_min: 0, val_max: 80 },\n                },\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'B\u00F6en',\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.fahrplan.departure': {\n        role: 'text.list',\n        type: 'text',\n        adapter: 'fahrplan',\n        data: {\n            icon: {\n                true: {\n                    value: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.Mode$/ },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                false: {\n                    value: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.Mode$/ },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n            },\n            entity1: {\n                value: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.DepartureDelayed$/ },\n            },\n            entity2: {\n                value: {\n                    role: 'date',\n                    mode: 'auto',\n                    type: 'state',\n                    dp: '',\n                    regexp: /\\.Departure$/,\n                    read: 'return val === 0 ? null : val',\n                },\n                dateFormat: {\n                    type: 'const',\n                    constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                },\n            },\n            text: {\n                true: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.Direction$/ },\n                false: undefined,\n            },\n            text1: {\n                true: {\n                    role: 'date',\n                    mode: 'auto',\n                    type: 'state',\n                    dp: '',\n                    regexp: /\\.DeparturePlanned$/,\n                    read: `{ return new Date(val).toLocaleTimeString().slice(0,5) }`,\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.alias.fahrplan.departure': {\n        role: 'text.list',\n        type: 'text',\n        adapter: '',\n        data: {\n            icon: {\n                true: {\n                    value: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.VEHICLE$/ },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                false: {\n                    value: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.VEHICLE$/ },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n            },\n            entity1: {\n                value: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.DELAY$/ },\n            },\n            entity2: {\n                value: {\n                    role: 'date',\n                    mode: 'auto',\n                    type: 'state',\n                    dp: '',\n                    regexp: /\\.Departure$/,\n                    read: 'return val === 0 ? null : val',\n                },\n                dateFormat: {\n                    type: 'const',\n                    constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                },\n            },\n            text: {\n                true: { role: 'state', mode: 'auto', type: 'state', dp: '', regexp: /\\.DIRECTION$/ },\n                false: undefined,\n            },\n            text1: {\n                true: {\n                    role: 'date',\n                    mode: 'auto',\n                    type: 'state',\n                    dp: '',\n                    regexp: /\\.ACTUAL$/,\n                    read: `{ return new Date(val).toLocaleTimeString().slice(0,5) }`,\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.door.isOpen': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'door-open' },\n                    color: { type: 'const', constVal: Color.open },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'door-closed' },\n                    color: { type: 'const', constVal: Color.close },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['sensor.door', 'sensor.open'],\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'door' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: { type: 'const', constVal: 'closed' },\n            },\n        },\n    },\n    'text.gate.isOpen': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'garage-open' },\n                    color: { type: 'const', constVal: Color.open },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'garage' },\n                    color: { type: 'const', constVal: Color.close },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['sensor.door', 'switch.gate', 'sensor.open'],\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'door' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: { type: 'const', constVal: 'closed' },\n            },\n        },\n    },\n    'text.motion': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'motion-sensor' },\n                    color: { type: 'const', constVal: Color.open },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'motion-sensor' },\n                    color: { type: 'const', constVal: Color.close },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['sensor.motion'],\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'motion' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'On' },\n                false: { type: 'const', constVal: 'Off' },\n            },\n        },\n    },\n    'text.info': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'information-outline' },\n                    color: {\n                        mode: 'auto',\n                        role: 'state',\n                        type: 'state',\n                        dp: '',\n                        regexp: /\\.COLORDEC$/,\n                        def: Color.activated,\n                    },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'information-outline' },\n                    color: {\n                        mode: 'auto',\n                        role: 'state',\n                        type: 'state',\n                        dp: '',\n                        regexp: /\\.COLORDEC$/,\n                        def: Color.deactivated,\n                    },\n                },\n            },\n            entity1: {\n                value: { mode: 'auto', role: 'state', type: 'triggered', dp: '', regexp: /\\.ACTUAL$/, def: 'info' },\n            },\n\n            text: {\n                true: { mode: 'auto', role: 'state', type: 'triggered', dp: '', regexp: /\\.BUTTONTEXT$/, def: 'info' },\n            },\n            text1: {\n                true: { mode: 'auto', role: 'state', type: 'triggered', dp: '', regexp: /\\.ACTUAL$/, def: 'info' },\n            },\n        },\n    },\n    'text.warning': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'gesture-tap-button' },\n                    color: {\n                        mode: 'auto',\n                        role: 'value.warning',\n                        type: 'state',\n                        dp: '',\n                        regexp: /\\.LEVEL$/,\n                        def: Color.deactivated,\n                    },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'gesture-tap-button' },\n                    color: {\n                        mode: 'auto',\n                        role: 'value.warning',\n                        type: 'state',\n                        dp: '',\n                        regexp: /\\.LEVEL$/,\n                        def: Color.deactivated,\n                    },\n                },\n            },\n            entity1: undefined,\n            text: {\n                true: { type: 'const', constVal: 'window' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: { type: 'const', constVal: 'closed' },\n            },\n        },\n    },\n    'text.wlan': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'wlan' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n                false: undefined,\n            },\n            entity1: undefined,\n            text: {\n                true: { type: 'const', constVal: 'SSID' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: undefined,\n            },\n        },\n    },\n    'text.shutter.navigation': {\n        type: 'text',\n        role: 'blind',\n        adapter: '',\n        data: {\n            icon: {\n                true: {\n                    value: {\n                        type: 'const',\n                        constVal: 'window-shutter-open',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.On,\n                    },\n                },\n                false: {\n                    value: {\n                        type: 'const',\n                        constVal: 'window-shutter',\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.Off,\n                    },\n                },\n                unstable: {\n                    value: {\n                        type: 'const',\n                        constVal: 'window-shutter-alert',\n                    },\n                },\n                scale: undefined,\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: { type: 'const', constVal: 'Blind' },\n            },\n            text1: {\n                true: { type: 'const', constVal: 'opened' },\n                false: { type: 'const', constVal: 'closed' },\n            },\n\n            entity1: {\n                value: { mode: 'auto', role: '', type: 'triggered', dp: '', regexp: /\\.ACTUAL$/ },\n            },\n            entity2: {\n                value: { mode: 'auto', role: '', type: 'triggered', dp: '', regexp: /\\.TILT_ACTUAL$/ },\n            },\n        },\n    },\n    'text.lock': {\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'lock-open-variant' },\n                    color: { type: 'const', constVal: Color.Cyan },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'lock' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['switch.lock', 'state'],\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'lock' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'isOpen' },\n                false: { type: 'const', constVal: 'isClose' },\n            },\n        },\n    },\n    'text.sainlogic.windarrow': {\n        role: 'text',\n        type: 'text',\n        modeScr: 'bottom',\n        adapter: 'sainlogic',\n        data: {\n            entity1: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^sainlogic\\.[0-9]+\\.weather\\.current\\.windgustspeed/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: undefined,\n            },\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /^sainlogic\\.[0-9]+\\.weather\\.current\\.windgustspeed/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: {\n                    type: 'const',\n                    constVal: 'km/h',\n                },\n            },\n            icon: {\n                true: {\n                    value: {\n                        mode: 'auto',\n                        role: '',\n                        type: 'triggered',\n                        regexp: /^sainlogic\\.[0-9]+\\.weather\\.current\\.winddir/,\n                        dp: ``,\n                        read: `{\n                            let dir = (val || 0)\n                            dir = (dir - (options?.directionOfPanel || 0) + 360) % 360\n\n                            let icon = 'arrow-'\n                            let icontop/*: 'bottom-' | 'top-' | 'down-' | 'up-' | ''*/ = ''\n                            let iconleft/*: 'left-' | 'right-' | ''*/ = ''\n                            if (dir > 292.5 || dir < 67.5) {\n                                icontop = 'top-'\n                            }\n                            else if(dir < 247.5 && dir > 112.5) {\n                                icontop = 'bottom-'\n                            }\n                            if (dir < 337.5 && dir > 212.5) {\n                                iconleft = 'left-'\n                            }\n                            else if((dir < 157.5 && dir > 32.5)) {\n                                iconleft = 'right-'\n                            }\n                            if (iconleft === '' && icontop) {\n                                if (icontop === 'top-') {\n                                    icontop = 'up-';\n                                } else {\n                                    icontop = 'down-';\n                                }\n\n                            }\n                            return icon + icontop + iconleft + (options?.icon || 'bold-outline')\n                        }`,\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSRed,\n                    },\n                },\n                false: {\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSGreen,\n                    },\n                },\n                scale: {\n                    type: 'const',\n                    constVal: { val_min: 50, val_max: 0, val_best: 10, mode: 'triGradAnchor' },\n                },\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'Wind',\n                },\n                false: undefined,\n            },\n        },\n    },\n    'text.hmip.windcombo': {\n        role: 'textNotIcon',\n        type: 'text',\n        modeScr: 'bottom',\n        adapter: 'hmip',\n        data: {\n            entity1: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /.channels\\.1\\.windSpeed/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: undefined,\n            },\n            entity2: {\n                value: {\n                    mode: 'auto',\n                    role: '',\n                    type: 'triggered',\n                    regexp: /.channels\\.1\\.windSpeed/,\n                    dp: ``,\n                },\n                decimal: {\n                    type: 'const',\n                    constVal: 0,\n                },\n                unit: {\n                    type: 'const',\n                    constVal: 'km/h',\n                },\n            },\n            icon: {\n                true: {\n                    text: {\n                        value: {\n                            mode: 'auto',\n                            role: '',\n                            type: 'triggered',\n                            regexp: /\\.channels\\.1\\.windDirection/,\n                            dp: ``,\n                            read: `{\n                                const directions = [\n                                    \"N\",  \"NNO\", \"NO\",  \"ONO\",\n                                    \"O\",  \"OSO\", \"SO\",  \"SSO\",\n                                    \"S\",  \"SSW\", \"SW\",  \"WSW\",\n                                    \"W\",  \"WNW\", \"NW\",  \"NNW\"\n                                ];\n\n                                const index = Math.round((val % 360) / 22.5) % 16;\n                                return directions[index];\n                            }`,\n                        },\n                    },\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSRed,\n                    },\n                },\n                false: {\n                    color: {\n                        type: 'const',\n                        constVal: Color.MSGreen,\n                    },\n                },\n                scale: {\n                    type: 'const',\n                    constVal: { val_min: 130, val_max: 0, mode: 'triGrad' },\n                },\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'Wind',\n                },\n                false: undefined,\n            },\n        },\n    },\n};\n"],
  "mappings": "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",
  "names": []
}
