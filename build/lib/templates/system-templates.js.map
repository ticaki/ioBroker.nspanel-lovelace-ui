{
  "version": 3,
  "sources": ["../../../src/lib/templates/system-templates.ts"],
  "sourcesContent": ["import type { NavigationItemConfig } from '../classes/navigation';\nimport type { PageBaseConfig } from '../types/pages';\nimport { Color } from '../const/Color';\n\nconst popupWelcome: PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///WelcomePopup',\n    config: {\n        card: 'popupNotify',\n        data: {\n            entity1: { value: { type: 'const', constVal: 'hm' } },\n            headline: { type: 'const', constVal: 'welcomeHToken' },\n            colorHeadline: { true: { color: { type: 'const', constVal: Color.Green } } },\n            buttonLeft: { type: 'const', constVal: '' },\n            colorButtonLeft: { true: { color: { type: 'const', constVal: Color.White } } },\n            buttonRight: { type: 'const', constVal: '' },\n            colorButtonRight: { true: { color: { type: 'const', constVal: Color.White } } },\n            text: { type: 'const', constVal: 'welcomeTToken' }, // text: { type: 'const', constVal: 'Text Test ${pl}' },\n            colorText: { true: { color: { type: 'const', constVal: Color.White } } },\n            timeout: { type: 'const', constVal: 3 },\n            // {placeholder: {text: '' oder dp: ''}} im Text muss dann ${dieserKeyStehtImText} stehen\n            // optionalValue: { type: 'const', constVal: { dieserKeyStehtImText: { text: 'das ist ein placeholder' } } },\n            //setValue1: { type: 'const', constVal: true }, // alleine ist es ein switch\n            //setValue2: { type: 'const', constVal: true }, // mit setValue2 wird 1, bei yes und 2 bei no auf true gesetzt\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\n\nconst popupNotification: PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///popupNotification',\n    config: {\n        card: 'popupNotify',\n        data: {\n            entity1: { value: { type: 'internal', dp: 'cmd/popupNotification', read: 'return true' } },\n            headline: { type: 'internal', dp: 'cmd/popupNotification', read: 'return JSON.parse(val).headline' },\n            colorHeadline: { true: { color: { type: 'const', constVal: Color.Green } } },\n            buttonLeft: { type: 'const', constVal: 'nextF' },\n            colorButtonLeft: { true: { color: { type: 'const', constVal: Color.White } } },\n            buttonRight: { type: 'const', constVal: 'ok' },\n            colorButtonRight: { true: { color: { type: 'const', constVal: Color.White } } },\n            text: { type: 'internal', dp: 'cmd/popupNotification', read: 'return JSON.parse(val).text' }, // text: { type: 'const', constVal: 'Text Test ${pl}' },\n            colorText: { true: { color: { type: 'const', constVal: Color.White } } },\n            timeout: { type: 'const', constVal: 0 },\n            // {placeholder: {text: '' oder dp: ''}}\n            // optionalValue: { type: 'const', constVal: { pl: { text: 'das ist ein placeholder' } } },\n            setValue1: { type: 'internalState', dp: 'cmd/NotificationCleared' },\n            setValue2: { type: 'internalState', dp: 'cmd/NotificationNext' },\n            closingBehaviour: { type: 'const', constVal: 'none' },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\n\nconst popupNotification2: PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///popupNotification2',\n    config: {\n        card: 'popupNotify',\n        data: {\n            entity1: { value: { type: 'internal', dp: 'cmd/popupNotification2', read: 'return true' } },\n            headline: { type: 'internal', dp: 'cmd/popupNotification2', read: 'return JSON.parse(val).headline' },\n            colorHeadline: { true: { color: { type: 'const', constVal: Color.Green } } },\n            buttonLeft: { type: 'const', constVal: 'nextF' },\n            colorButtonLeft: { true: { color: { type: 'const', constVal: Color.White } } },\n            buttonRight: { type: 'const', constVal: 'ok' },\n            colorButtonRight: { true: { color: { type: 'const', constVal: Color.Green } } },\n            text: { type: 'internal', dp: 'cmd/popupNotification2', read: 'return JSON.parse(val).text' }, // text: { type: 'const', constVal: 'Text Test ${pl}' },\n            colorText: { true: { color: { type: 'const', constVal: Color.White } } },\n            timeout: { type: 'const', constVal: 0 },\n            setValue1: { type: 'internalState', dp: 'cmd/NotificationCleared2' },\n            setValue2: { type: 'internalState', dp: 'cmd/NotificationNext2' },\n            closingBehaviour: { type: 'const', constVal: 'none' },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\nconst AdapterInformation: PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///Adapter-Info',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter-Info.',\n            },\n        },\n    },\n    pageItems: [\n        {\n            template: 'button.service.adapter.noconnection',\n            dpInit: '',\n            data: {\n                setNavi: { type: 'const', constVal: '///AdapterNotConnectedDetail' },\n            },\n        },\n        {\n            template: 'button.service.adapter.stopped',\n            dpInit: '',\n            data: {\n                setNavi: { type: 'const', constVal: '///AdapterStoppedDetail' },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'bell-badge-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'bell-outline' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'admin.0.info.updatesNumber',\n                        read: 'return val != 0',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Updates' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'state', dp: 'admin.0.info.updatesNumber' },\n                    false: { type: 'const', constVal: '0' },\n                },\n                setNavi: { type: 'const', constVal: '///AdapterUpdate' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst ServiceUnlock: PageBaseConfig = {\n    uniqueID: '///unlock',\n    alwaysOn: 'always',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardAlarm',\n        data: {\n            alarmType: { type: 'const', constVal: 'unlock' },\n            headline: { type: 'const', constVal: 'Service-Unlock' },\n            entity1: undefined,\n            button1: undefined,\n            button2: undefined,\n            button3: undefined,\n            button4: undefined,\n            icon: undefined,\n            pin: { type: 'const', constVal: '-1' },\n            setNavi: { type: 'const', constVal: '///Overview' },\n        },\n    },\n};\n\nconst ServiceOverview: PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///Overview',\n    useColor: false,\n    config: {\n        card: 'cardGrid2',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Overview',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'folder-alert-outline' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Adapter' },\n                    false: undefined,\n                },\n                setNavi: { type: 'const', constVal: '///Adapter-Info' },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'monitor' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Display' },\n                    false: undefined,\n                },\n                setNavi: { type: 'const', constVal: '///ScreensaverOptions' },\n                //confirm: { type: 'const', constVal: 'test' },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'power' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Relais' },\n                    false: undefined,\n                },\n                setNavi: { type: 'const', constVal: '///RelaisOption' },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'information-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Device' },\n                    false: undefined,\n                },\n                setNavi: { type: 'const', constVal: '///DeviceOption' },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'wifi' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Network' },\n                    false: undefined,\n                },\n                setNavi: { type: 'const', constVal: '///NetworkOption' },\n            },\n        },\n    ],\n    items: undefined,\n};\n\nconst AdapterNotConnectedDetail: PageBaseConfig = {\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///AdapterNotConnectedDetail',\n    config: {\n        card: 'cardEntities',\n        cardRole: 'AdapterConnection',\n        scrollType: 'page',\n        filterType: 'false',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter Offline',\n            },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\nconst AdapterStoppedDetail: PageBaseConfig = {\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///AdapterStoppedDetail',\n    config: {\n        card: 'cardEntities',\n        cardRole: 'AdapterStopped',\n        scrollType: 'page',\n        filterType: 'false',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter stopped',\n            },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\n\nconst AdapterUpdateDetail: PageBaseConfig = {\n    dpInit: 'admin.0.',\n    alwaysOn: 'none',\n    uniqueID: '///AdapterUpdate',\n    config: {\n        card: 'cardEntities',\n        cardRole: 'AdapterUpdates',\n        scrollType: 'page',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter update',\n            },\n            list: {\n                mode: 'auto',\n                type: 'state',\n                dp: '',\n                regexp: /\\.info\\.updatesJson$/,\n                role: '',\n            },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\n\nconst ScreensaverOptions: PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///ScreensaverOptions',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        scrollType: 'page',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'ScreensaverOptions',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            template: 'button.iconLeftSize',\n            dpInit: '',\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            template: 'button.iconRightSize',\n            dpInit: '',\n        },\n        {\n            role: '',\n            type: 'switch',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/screenSaverDoubleClick' },\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'switch' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'switch' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                },\n                text: { true: { type: 'const', constVal: 'DoubleClick' }, false: undefined },\n                setValue1: { type: 'internal', dp: 'cmd/screenSaverDoubleClick' },\n            },\n        },\n        {\n            role: '',\n            type: 'input_sel',\n            data: {\n                headline: { type: 'const', constVal: 'screenSaverLayout' },\n                entityInSel: {\n                    value: { type: 'internal', dp: 'cmd/screenSaverLayout' },\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'monitor' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'internal', dp: 'cmd/screenSaverLayout' }, false: undefined },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'internal', dp: 'cmd/screenSaverLayout', read: 'return val ? val.split(\";\") : []' },\n                valueList: { type: 'const', constVal: 'standard?alternate?advanced?easyview' },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/screenSaverTimeout' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 90 },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'screenSaverTimeout' }, false: undefined },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/dimStandby' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 100 },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'dimStandby' }, false: undefined },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/dimActive' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 100 },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'dimActive' }, false: undefined },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/dimNightActive' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 100 },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'dimNightActive' }, false: undefined },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/dimNightStandby' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 100 },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'dimNightStandby' }, false: undefined },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/dimNightHourStart' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 23 },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'dimNightHourStart' }, false: undefined },\n            },\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/dimNightHourEnd' },\n                },\n                minValue1: { type: 'const', constVal: 0 },\n                maxValue1: { type: 'const', constVal: 23 },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'dimNightHourEnd' }, false: undefined },\n            },\n        },\n    ],\n    items: undefined,\n};\n\nconst RelaisOption: PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///RelaisOption',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'RelaisOption',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: '',\n            type: 'button',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'numeric-1-circle-outline' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'numeric-1-circle' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/detachLeft',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'HW-Button left' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'decoupled' },\n                    false: { type: 'const', constVal: 'coupled' },\n                },\n                setValue1: {\n                    type: 'internal',\n                    dp: 'cmd/detachLeft',\n                },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'numeric-2-circle-outline' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'numeric-2-circle' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/detachRight',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'HW-Button right' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'decoupled' },\n                    false: { type: 'const', constVal: 'coupled' },\n                },\n                setValue1: {\n                    type: 'internal',\n                    dp: 'cmd/detachRight',\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\n\nconst DeviceOption: PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///DeviceOption',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'DeviceOption',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: '',\n            type: 'button',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'information-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'information-variant' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Tasmota-Restart' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'restart',\n                    },\n                    false: undefined,\n                },\n                confirm: { type: 'const', constVal: 'sure?' },\n                setValue2: {\n                    type: 'internal',\n                    dp: 'cmd/TasmotaRestart',\n                },\n            },\n        },\n        {\n            role: '',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'information-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'information-variant' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 'cmd/tasmotaVersion',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Tasmota-Version' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internal',\n                        dp: 'info/tasmotaVersion',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: '',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'information-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'information-variant' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 'cmd/displayVersion',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'TFT-Version' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internal',\n                        dp: 'info/displayVersion',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: '',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'information-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'information-variant' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 'cmd/modelVersion',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'HW-Nspanel-Version' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internal',\n                        dp: 'info/modelVersion',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\n\nconst NetworkOption: PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: '///NetworkOption',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Network',\n            },\n        },\n        scrollType: 'page',\n    },\n    pageItems: [\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '1' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Hostname' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.net.Hostname : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '2' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'IP' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.net.IPAddress : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '3' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'DNS' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.net.DNSServer1 : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '4' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Mac' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.net.Mac : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '5' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Wifi-SSId' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.sts.Wifi.SSId : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '6' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'RSSI' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.sts.Wifi.RSSI : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '7' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Signal' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.sts.Wifi.Signal + ' db' : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'textNotIcon',\n            type: 'text',\n\n            data: {\n                icon: {\n                    true: {\n                        text: { value: { type: 'const', constVal: '8' } },\n                        color: { type: 'const', constVal: Color.info },\n                    },\n                    false: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Wifi-Downtime' },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        type: 'internalState',\n                        dp: 'info/Tasmota',\n                        read: `return val ? val.sts.Wifi.Downtime : '';`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\n\n/**\n * all pages from system\n */\nexport const systemPages: PageBaseConfig[] = [\n    popupWelcome,\n    popupNotification,\n    popupNotification2,\n    AdapterInformation,\n    ServiceUnlock,\n    ServiceOverview,\n    AdapterStoppedDetail,\n    AdapterNotConnectedDetail,\n    AdapterUpdateDetail,\n    ScreensaverOptions,\n    RelaisOption,\n    DeviceOption,\n    NetworkOption,\n];\nexport const systemNavigation: NavigationItemConfig[] = [\n    {\n        name: '///service', //main ist die erste Seite\n        page: '///unlock',\n        left: { single: 'main' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'alarm1', double: '2' },\n    },\n    {\n        name: '///Overview', //main ist die erste Seite\n        page: '///Overview',\n        right: { double: 'main' }, // Die 4 bezieht sich auf den name: 4\n        optional: 'notifications',\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///Adapter-Info', //main ist die erste Seite\n        page: '///Adapter-Info',\n        left: { double: '///Overview' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///AdapterStoppedDetail', //main ist die erste Seite\n        page: '///AdapterStoppedDetail',\n        left: { double: '///Adapter-Info' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///AdapterNotConnectedDetail', //main ist die erste Seite\n        page: '///AdapterNotConnectedDetail',\n        left: { double: '///Adapter-Info' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///AdapterUpdate', //main ist die erste Seite\n        page: '///AdapterUpdate',\n        left: { double: '///Adapter-Info' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///ScreensaverOptions', //main ist die erste Seite\n        page: '///ScreensaverOptions',\n        left: { double: '///Overview' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///RelaisOption', //main ist die erste Seite\n        page: '///RelaisOption',\n        left: { double: '///Overview' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///DeviceOption', //main ist die erste Seite\n        page: '///DeviceOption',\n        left: { double: '///Overview' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n    {\n        name: '///NetworkOption', //main ist die erste Seite\n        page: '///NetworkOption',\n        left: { double: '///Overview' }, // Die 4 bezieht sich auf den name: 4\n        //right: { single: 'abfall1', double: 'main' },\n    },\n];\n"],
  "mappings": "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",
  "names": []
}
