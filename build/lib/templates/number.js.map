{
  "version": 3,
  "sources": ["../../../src/lib/templates/number.ts"],
  "sourcesContent": ["import { Color } from '../const/Color';\nimport type { TemplateItems } from '../types/types';\n\nexport const numberTemplates: TemplateItems = {\n    'number.volume': {\n        role: '',\n        adapter: '',\n        type: 'number',\n\n        data: {\n            icon: {\n                true: {\n                    value: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.volume',\n                        dp: '',\n                        read: `{\n                            if (val > 66) {\n                                return 'volume-high';\n                            }\n                            if (val > 33) {\n                                return 'volume-medium';\n                            }\n                            if (val > 0) {\n                                return 'volume-low';\n                            }\n                            return 'volume-off';\n                        }`,\n                    },\n                    text: {\n                        value: {\n                            type: 'state',\n                            mode: 'auto',\n                            role: 'value.volume',\n                            dp: '',\n                        },\n                        unit: { type: 'const', constVal: '%' },\n                    },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'volume-mute' },\n                    text: {\n                        value: {\n                            type: 'state',\n                            mode: 'auto',\n                            role: 'value.volume',\n                            dp: '',\n                        },\n                        unit: { type: 'const', constVal: '%' },\n                    },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n                scale: { type: 'const', constVal: { min: 0, max: 100 } },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.volume',\n                    dp: '',\n                },\n                set: {\n                    type: 'state',\n                    mode: 'auto',\n                    role: 'level.volume',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'volume' },\n                false: undefined,\n            },\n        },\n    },\n    'number.slider': {\n        role: '',\n        adapter: '',\n        type: 'button',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'plus-minus-variant' },\n                    text: {\n                        value: {\n                            type: 'state',\n                            mode: 'auto',\n                            role: ['value', 'level'],\n                            dp: '',\n                        },\n                        unit: { type: 'const', constVal: '%' },\n                    },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                false: undefined,\n                scale: { type: 'const', constVal: { min: 0, max: 100 } },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: ['value', 'level'],\n                    dp: '',\n                },\n                set: {\n                    type: 'state',\n                    mode: 'auto',\n                    role: 'level',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'slider' },\n                false: undefined,\n            },\n        },\n    },\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsB;AAGf,MAAM,kBAAiC;AAAA,EAC1C,iBAAiB;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IAEN,MAAM;AAAA,MACF,MAAM;AAAA,QACF,MAAM;AAAA,UACF,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYV;AAAA,UACA,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,IAAI;AAAA,YACR;AAAA,YACA,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,UACzC;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,mBAAM,MAAM;AAAA,QAClD;AAAA,QACA,OAAO;AAAA,UACH,OAAO,EAAE,MAAM,SAAS,UAAU,cAAc;AAAA,UAChD,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,IAAI;AAAA,YACR;AAAA,YACA,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,UACzC;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,mBAAM,MAAM;AAAA,QAClD;AAAA,QACA,OAAO,EAAE,MAAM,SAAS,UAAU,EAAE,KAAK,GAAG,KAAK,IAAI,EAAE;AAAA,MAC3D;AAAA,MACA,SAAS;AAAA,QACL,OAAO;AAAA,UACH,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,IAAI;AAAA,QACR;AAAA,QACA,KAAK;AAAA,UACD,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,IAAI;AAAA,QACR;AAAA,MACJ;AAAA,MACA,MAAM;AAAA,QACF,MAAM,EAAE,MAAM,SAAS,UAAU,SAAS;AAAA,QAC1C,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,iBAAiB;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IAEN,MAAM;AAAA,MACF,MAAM;AAAA,QACF,MAAM;AAAA,UACF,OAAO,EAAE,MAAM,SAAS,UAAU,qBAAqB;AAAA,UACvD,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM,CAAC,SAAS,OAAO;AAAA,cACvB,IAAI;AAAA,YACR;AAAA,YACA,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,UACzC;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,mBAAM,IAAI;AAAA,QAChD;AAAA,QACA,OAAO;AAAA,QACP,OAAO,EAAE,MAAM,SAAS,UAAU,EAAE,KAAK,GAAG,KAAK,IAAI,EAAE;AAAA,MAC3D;AAAA,MACA,SAAS;AAAA,QACL,OAAO;AAAA,UACH,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM,CAAC,SAAS,OAAO;AAAA,UACvB,IAAI;AAAA,QACR;AAAA,QACA,KAAK;AAAA,UACD,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,IAAI;AAAA,QACR;AAAA,MACJ;AAAA,MACA,MAAM;AAAA,QACF,MAAM,EAAE,MAAM,SAAS,UAAU,SAAS;AAAA,QAC1C,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
