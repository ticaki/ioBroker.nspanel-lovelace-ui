{
  "version": 3,
  "sources": ["../../src/lib/config.ts"],
  "sourcesContent": ["import type * as pages from './types/pages';\nimport { Color } from './const/Color';\nimport type { panelConfigPartial } from './controller/panel';\n\nconst pageEntitiesTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'entities1',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'entities1',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.activated },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.deactivated },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            template: 'button.service.adapter.noconnection',\n            dpInit: '',\n        },\n        {\n            template: 'button.service.adapter.stopped',\n            dpInit: '',\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            template: 'generic.shutter',\n            dpInit: '0_userdata.0.shutter_test',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open' },\n                        color: { type: 'const', constVal: 'aqua', role: 'level.color.name' },\n                    },\n                    false: null,\n                },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n    ],\n    items: undefined,\n};\n\nexport const popupTest2: pages.PageBaseConfig = {\n    //card: 'popupNotify',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'popup2',\n    useColor: false,\n    config: {\n        card: 'popupNotify',\n        data: {\n            entity1: { value: { type: 'state', dp: '0_userdata.0.example_state' } },\n            headline: { type: 'const', constVal: 'welcomeHToken' },\n            colorHeadline: { true: { color: { type: 'const', constVal: Color.White } } },\n            buttonLeft: { type: 'const', constVal: '' },\n            colorButtonLeft: { true: { color: { type: 'const', constVal: Color.White } } },\n            buttonRight: { type: 'const', constVal: '' },\n            colorButtonRight: { true: { color: { type: 'const', constVal: Color.White } } },\n            text: { type: 'const', constVal: 'Text Test ${pl}' },\n            colorText: { true: { color: { type: 'const', constVal: Color.White } } },\n            timeout: { type: 'const', constVal: 0 },\n            // {placeholder: {text: '' oder dp: ''}}\n            optionalValue: { type: 'const', constVal: { pl: { text: 'das ist ein placeholder' } } },\n            setValue1: { type: 'const', constVal: true },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\nconst pageEntitiesTest3: pages.PageBaseConfig = {\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'entities3',\n    config: {\n        card: 'cardEntities',\n        cardRole: 'AdapterConnection',\n        scrollType: 'page',\n        filterType: 'true',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter Offline',\n            },\n        },\n    },\n    pageItems: [\n        /*\n        {\n            role: 'timer',\n            type: 'timer',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'timer' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: { type: 'const', constVal: 'Timer' },\n\n                setValue1: { type: 'state', dp: '0_userdata.0.example_state' },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '0_userdata.0.shelly.0.SHRGBW2#258794#1',\n            template: 'light.shelly.rgbw2',\n        },\n        {\n            type: 'shutter',\n            dpInit: '0_userdata.0.shelly.0.SHSW-25#C45BBE5FC53F#1',\n            template: 'shutter.shelly.2PM',\n        },\n        {\n            dpInit: 'bydhvs',\n            template: 'text.battery.bydhvs',\n        },\n    */\n    ],\n    items: undefined,\n};\nconst pageEntitiesTest2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'entities2',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'entities2',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            template: 'button.iconLeftSize',\n            dpInit: '',\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            template: 'button.iconRightSize',\n            dpInit: '',\n        },\n        {\n            role: '',\n            type: 'number',\n            data: {\n                entity1: {\n                    value: { type: 'internal', dp: 'cmd/screensaverTimeout' },\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 90 },\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'clock-time-twelve-outline' },\n                        color: { type: 'const', constVal: Color.White },\n                    },\n                    false: undefined,\n                },\n                text: { true: { type: 'const', constVal: 'screensaverTimeout' }, false: undefined },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pagePowerTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardPower',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'power1',\n    useColor: false,\n    pageItems: [],\n    config: {\n        card: 'cardPower',\n        data: {\n            headline: { type: 'const', constVal: 'headline' },\n            homeValueTop: {\n                value: { type: 'const', constVal: 'top' },\n            },\n            homeValueBot: {\n                value: { type: 'internal', dp: '///power1/powerSum' },\n                math: { type: 'const', constVal: 'return r1+r2+r3+l1+l2+l3 -999' },\n            },\n            leftTop: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 1000 },\n                },\n            },\n            leftMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-left' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 2 },\n                },\n            },\n            leftBottom: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-down' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 3 },\n                },\n            },\n            rightTop: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 4 },\n                },\n            },\n            rightMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-right' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 5 },\n                },\n            },\n            rightBottom: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-down' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 6 },\n                },\n            },\n            homeIcon: undefined /*{\n                true: {\n                    value: { type: 'const', constVal: 'home' },\n                    color: undefined,\n                },\n                false: {\n                    value: undefined,\n                    color: undefined,\n                },\n            },*/,\n        },\n    },\n    items: undefined,\n};\nexport const pageMediaTest: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardMedia',\n    dpInit: 'alexa2.0.Echo-Devices.G091EV0704641J8R.Player',\n\n    alwaysOn: 'none',\n    config: {\n        card: 'cardMedia',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'home',\n            },\n            alwaysOnDisplay: {\n                type: 'const',\n                constVal: 'test',\n            },\n            album: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.album',\n                dp: '',\n            },\n            title: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    type: 'triggered',\n                    dp: '0_userdata.0.spotify-premium.0.player.playlist.trackNo',\n                },\n                color: {\n                    type: 'const',\n                    constVal: { r: 250, g: 2, b: 3 },\n                },\n            },\n            duration: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.duration',\n                dp: '',\n            },\n            elapsed: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.elapsed', 'media.elapsed.text'],\n                dp: '',\n            },\n            volume: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'now',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'medium',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n            },\n            artist: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.artist',\n                    dp: '',\n                },\n                color: undefined,\n                icon: {\n                    type: 'const',\n                    constVal: 'diameter',\n                },\n                list: undefined,\n            },\n            shuffle: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n            },\n            icon: {\n                type: 'const',\n                constVal: 'dialpad',\n            },\n            play: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.play'],\n                dp: '',\n            },\n            mediaState: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.state'],\n                dp: '',\n            },\n            stop: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.stop'],\n                dp: '',\n            },\n            pause: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.pause',\n                dp: '',\n            },\n            forward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.next',\n                dp: '',\n            },\n            backward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.prev',\n                dp: '',\n            },\n            logo: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { r: 250, b: 250, g: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'spotify-playlist',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.spotify-premium.0.player.playlist.trackNo',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'state', dp: '0_userdata.0.spotify-premium.0.player.playlist.trackListArray' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    uniqueID: 'media1',\n    useColor: false,\n};\n\nconst pageAbfall: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '0_userdata.0.Abfallkalender',\n    uniqueID: 'abfall1',\n    template: 'entities.waste-calendar',\n};\n\nexport const pageMediaTest2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardMedia',\n    dpInit: 'alexa2.0.Echo-Devices.G091EV0704641J8R.Player',\n\n    alwaysOn: 'none',\n    config: {\n        card: 'cardMedia',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'home',\n            },\n            alwaysOnDisplay: {\n                type: 'const',\n                constVal: 'test',\n            },\n            album: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.album',\n                dp: '',\n            },\n            title: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    mode: 'auto',\n                    type: 'triggered',\n                    role: 'media.title',\n                    dp: '',\n                },\n                color: {\n                    type: 'const',\n                    constVal: { r: 250, g: 2, b: 3 },\n                },\n            },\n            duration: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.duration',\n                dp: '',\n            },\n            elapsed: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.elapsed', 'media.elapsed.text'],\n                dp: '',\n            },\n            volume: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'now',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'medium',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n            },\n            artist: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.artist',\n                    dp: '',\n                },\n                color: undefined,\n                icon: {\n                    type: 'const',\n                    constVal: 'diameter',\n                },\n                list: undefined,\n            },\n            shuffle: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n            },\n            icon: {\n                type: 'const',\n                constVal: 'dialpad',\n            },\n            play: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.play'],\n                dp: '',\n            },\n            mediaState: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.state'],\n                dp: '',\n            },\n            stop: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.stop'],\n                dp: '',\n            },\n            pause: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.pause',\n                dp: '',\n            },\n            forward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.next',\n                dp: '',\n            },\n            backward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.prev',\n                dp: '',\n            },\n            logo: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { r: 250, b: 250, g: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'spotify-playlist',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'state',\n                        dp: '0_userdata.0.spotify-premium.0.player.playlist.trackNo',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'state', dp: '0_userdata.0.spotify-premium.0.player.playlist.trackListArray' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    uniqueID: 'media2',\n    useColor: false,\n};\n\nconst pageMediaTest3: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    template: 'media.spotify-premium',\n    dpInit: '0_userdata.0.spotify-premium.0',\n    uniqueID: 'media3',\n    card: 'cardMedia',\n};\nconst pageGridTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid1',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'grid1',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 23,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            role: 'rgbSingle',\n            type: 'shutter',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-shutter-open' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-shutter' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                // 1. slider\n                entity1: {\n                    // button\n                    value: { mode: 'auto', role: 'level.blind', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                // 2. slider\n                entity2: {\n                    // button\n                    value: { mode: 'auto', role: 'level.tilt', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text',\n                    },\n                    false: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Shutter',\n                },\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text1',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text2',\n                    },\n                    false: undefined,\n                },\n                up: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.open.blind', 'button.open'],\n                },\n                down: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.close.blind', 'button.close'],\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                headline: { type: 'const', constVal: 'insel' },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'music' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Navbutton' },\n                    false: undefined,\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: '3',\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        text: { value: { type: 'const', constVal: '22.2' }, textSize: { type: 'const', constVal: 3 } },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'text' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'text1' },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 23,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            role: 'rgbSingle',\n            type: 'shutter',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-shutter-open' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-shutter' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                // 1. slider\n                entity1: {\n                    // button\n                    value: { mode: 'auto', role: 'level.blind', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                // 2. slider\n                entity2: {\n                    // button\n                    value: { mode: 'auto', role: 'level.tilt', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text',\n                    },\n                    false: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Shutter',\n                },\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text1',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text2',\n                    },\n                    false: undefined,\n                },\n                up: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.open.blind', 'button.open'],\n                },\n                down: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.close.blind', 'button.close'],\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                headline: { type: 'const', constVal: 'insel' },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'music' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Navbutton' },\n                    false: undefined,\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: '3',\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        text: { value: { type: 'const', constVal: '22.2' }, textSize: { type: 'const', constVal: 3 } },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'text' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'text1' },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridTest2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'grid2',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                entityInSel: undefined,\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'account' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'timer',\n            type: 'timer',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'timer' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: { type: 'const', constVal: 'Timer' },\n\n                setValue1: { type: 'state', dp: '0_userdata.0.example_state' },\n            },\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            type: 'text',\n            dpInit: 'zigbee2mqtt.0.0x00158d00041fdbcb',\n            template: 'text.temperature',\n        },\n        {\n            device: '0',\n            template: 'text.battery.bydhvs',\n        },\n    ],\n};\nconst pageGridTest5: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid5',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'grid1',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 23,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            role: 'rgbSingle',\n            type: 'shutter',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-shutter-open' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-shutter' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                // 1. slider\n                entity1: {\n                    // button\n                    value: { mode: 'auto', role: 'level.blind', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                // 2. slider\n                entity2: {\n                    // button\n                    value: { mode: 'auto', role: 'level.tilt', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text',\n                    },\n                    false: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Shutter',\n                },\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text1',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text2',\n                    },\n                    false: undefined,\n                },\n                up: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.open.blind', 'button.open'],\n                },\n                down: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.close.blind', 'button.close'],\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                headline: { type: 'const', constVal: 'insel' },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'music' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Navbutton' },\n                    false: undefined,\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: '3',\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        text: { value: { type: 'const', constVal: '22.2' } },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'text' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'text1' },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridTest4: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid4',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCberschrift2',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'account' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n    ],\n};\nconst pageGrid2Test3: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //ard: 'cardGrid2',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid3',\n    useColor: false,\n    config: {\n        card: 'cardGrid2',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCberschrift Grid3',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n    ],\n};\nconst pageThermoTest: pages.PageBaseConfig = {\n    //card: 'cardThermo',\n\n    uniqueID: 'thermo1',\n    dpInit: '',\n    alwaysOn: 'none',\n    pageItems: [\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-right' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.example_state',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'button',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    config: {\n        card: 'cardThermo',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'headline',\n            },\n            mixed2: {\n                value: {\n                    type: 'const',\n                    constVal: '20',\n                },\n            },\n            unit: {\n                type: 'const',\n                constVal: '\u00B0C',\n            },\n            mixed1: {\n                value: {\n                    type: 'const',\n                    constVal: 'H1',\n                },\n            },\n            mixed3: {\n                value: {\n                    type: 'const',\n                    constVal: 'H2',\n                },\n            },\n            minTemp: {\n                type: 'const',\n                constVal: '10',\n            },\n            maxTemp: {\n                type: 'const',\n                constVal: '60',\n            },\n            tempStep: {\n                type: 'const',\n                constVal: '5',\n            },\n            set1: { type: 'state', dp: '0_userdata.0.number1' },\n            set2: { type: 'state', dp: '0_userdata.0.number2' },\n            mixed4: {\n                value: {\n                    type: 'const',\n                    constVal: '20',\n                },\n            },\n        },\n    },\n    items: undefined,\n    useColor: false,\n};\nconst pageAlarmTest: pages.PageBaseConfig = {\n    //card: 'cardAlarm',\n    uniqueID: 'alarm1',\n    alwaysOn: 'none',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardAlarm',\n        data: {\n            headline: undefined,\n            entity1: undefined,\n            button1: undefined,\n            button2: undefined,\n            button3: undefined,\n            button4: undefined,\n            icon: undefined,\n            pin: { type: 'const', constVal: '12345' },\n            approved: { type: 'triggered', dp: '0_userdata.0.example_state_boolean2', change: 'ts' },\n        },\n    },\n};\nconst pageUnlockTest: pages.PageBaseConfig = {\n    //card: 'cardAlarm',\n    uniqueID: 'unlock1',\n    alwaysOn: 'always',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardAlarm',\n        data: {\n            alarmType: { type: 'const', constVal: 'unlock' },\n            headline: { type: 'const', constVal: 'Unlock' },\n            entity1: undefined,\n            button1: undefined,\n            button2: undefined,\n            button3: undefined,\n            button4: undefined,\n            icon: undefined,\n            pin: { type: 'const', constVal: '12345' },\n            setNavi: { type: 'const', constVal: 'entities3' },\n        },\n    },\n};\nexport const popupTest: pages.PageBaseConfig = {\n    //card: 'popupNotify',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'popup1',\n    useColor: false,\n    config: {\n        card: 'popupNotify',\n        data: {\n            entity1: { value: { type: 'triggered', dp: '0_userdata.0.example_state_boolean' } },\n            headline: { type: 'const', constVal: 'test' },\n            colorHeadline: { true: { color: { type: 'const', constVal: '#F80000' } } },\n            buttonLeft: { type: 'const', constVal: 'test' },\n            colorButtonLeft: { true: { color: { type: 'const', constVal: Color.Green } } },\n            buttonRight: { type: 'const', constVal: 'test' },\n            colorButtonRight: { true: { color: { type: 'const', constVal: Color.White } } },\n            text: { type: 'const', constVal: 'Text Test ${pl}' },\n            //text: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyText' },\n            colorText: { true: { color: { type: 'const', constVal: Color.White } } },\n            timeout: { type: 'const', constVal: 4 },\n            // {placeholder: {text: '' oder dp: ''}} im Text muss dann ${dieserKeyStehtImText} stehen\n            // optionalValue: { type: 'const', constVal: { dieserKeyStehtImText: { text: 'das ist ein placeholder' } } },\n            setValue1: { type: 'const', constVal: true }, // alleine ist es ein switch\n            closingBehaviour: { type: 'const', constVal: 'both' },\n            //setValue2: { type: 'const', constVal: true }, // mit setValue2 wird 1, bei yes und 2 bei no auf true gesetzt\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\nconst pageScreensaverTest: pages.PageBaseConfig = {\n    //card: 'screensaver2',\n    // mode of screensaver\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'scr',\n    useColor: false,\n    config: {\n        card: 'screensaver2',\n        mode: 'advanced',\n        rotationTime: 0,\n        model: 'eu',\n        data: undefined,\n        screensaverIndicatorButtons: false,\n        screensaverSwipe: false,\n    },\n\n    // Config of Entitys\n    pageItems: [\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'favorit',\n            data: {\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Current.Temperature' },\n                    decimal: {\n                        type: 'const',\n                        constVal: null,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /**\n                             * How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'state',\n                            dp: '0_userdata.0.dimmer',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 1 - accuWeather.0. Forecast Day 1\n        {\n            template: 'text.accuweather.sunriseset',\n            dpInit: '/^accuweather\\\\.0.Daily.+/',\n            modeScr: 'bottom',\n        },\n        // Bottom 1 - accuWeather.0. Forecast Day 1\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d1$/g',\n            modeScr: 'bottom',\n        },\n\n        // Bottom 2 - accuWeather.0. Forecast Day 2\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: /^accuweather\\.0.+?d2$/,\n            modeScr: 'bottom',\n        },\n\n        // Bottom 3 - accuWeather.0. Forecast Day 3\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: /^accuweather\\.0.+?d3$/,\n            modeScr: 'bottom',\n        },\n\n        // Bottom 4 - accuWeather.0. Forecast Day 4\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: /^accuweather\\.0.+?d4$/,\n            modeScr: 'bottom',\n        },\n        // Bottom 5 - accuWeather.0. Forecast Day 5\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: /^accuweather\\.0.+?d5$/,\n            modeScr: 'bottom',\n        },\n\n        // Bottom 6 - daswetter.0. Forecast Day 6\n\n        // Bottom 7 - Sonnenaufgang - Sonnenuntergang im Wechsel\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.Sunevent2.time',\n                        read: 'return new Date(val).getTime()',\n                        forceType: 'number',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'triggered',\n                            dp: '0_userdata.0.Sunevent2.icon',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSYellow,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSYellow,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Sonne',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        // Bottom 8 - Windgeschwindigkeit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        // Bottom 9 - B\u00F6en\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        // Bottom 10 - Windrichtung\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#FFFFFF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        // Bottom 11 - Luftfeuchte au\u00DFen\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'hmip.0.devices.3014F711A000185F2999676C.channels.1.humidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'hmip.0.devices.3014F711A000185F2999676C.channels.1.humidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'water-percent',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'water-percent',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Green,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 100, val_best: 65 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Feuchte',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        // Bottom 12 - UV-Index\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.UVIndex',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.UVIndex',\n                        forceType: 'string',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'solar-power',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'solar-power',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 9 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'UV',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'test',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: '850',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                /*entity2: {\n                    value: {\n                        type: 'const',\n                        constVal: 500,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },*/\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'waves-arrow-up',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'waves-arrow-up',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 1000, val_best: 500, log10: 'max' },\n                    },\n\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wasserstand',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            type: 'text',\n            dpInit: 'zigbee2mqtt.0.0x00158d00041fdbcb',\n            template: 'text.battery',\n\n            modeScr: 'indicator',\n            data: {\n                icon: {\n                    true: {\n                        text: null,\n                    },\n                    false: {\n                        text: null,\n                    },\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#FF00FF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        /*{\n            role: 'combined',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'state',\n                        dp: '0_userdata.0.number1',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'heat-wave',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                        text: {\n                            value: {\n                                type: 'state',\n                                dp: '0_userdata.0.number1',\n                            },\n                            unit: {\n                                type: 'const',\n                                constVal: '\u00B0C',\n                            },\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'heat-wave',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSYellow,\n                        },\n                        text: {\n                            value: {\n                                type: 'const',\n                                constVal: 'deconz.0.Sensors.5.temperature',\n                            },\n                            unit: {\n                                type: 'const',\n                                constVal: '\u00B0C',\n                            },\n                        },\n                    },\n                },\n            },\n        },*/\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power1',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power2',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'time',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///time',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'date',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                weekday: 'long',\n                                month: 'short',\n                                year: 'numeric',\n                                day: 'numeric',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    ],\n};\n\nconst pageFahrplanRoutes: pages.PageBaseConfig = {\n    card: 'cardEntities',\n    dpInit: 'fahrplan.0.0',\n    uniqueID: 'fahrplanrouten',\n    template: 'entities.fahrplan.routes',\n};\nexport const Testconfig: Partial<panelConfigPartial>[] = [\n    /* {\n        pages: [\n            pageGridTest4,\n            pageEntitiesTest1,\n            pagePowerTest1,\n            pageThermoTest,\n            pageGridTest1,\n            pageGrid2Test3,\n            pageGridTest2,\n            pageScreensaverTest,\n            //pageMediaTest,\n            pageEntitiesTest2,\n            pageAbfall,\n            pageGridTest5,\n            pageMediaTest3,\n            pageAlarmTest,\n            pageEntitiesTest3,\n            popupTest,\n            pageUnlockTest,\n            pageFahrplanRoutes,\n        ],\n        // override by password.ts\n        navigation: [\n            {\n                name: 'main', //main ist die erste Seite\n                page: 'entities1',\n                left: { single: 'grid3' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: '///service' },\n            },\n            {\n                name: 'alarm1', //main ist die erste Seite\n                page: 'alarm1',\n                left: { single: '///service' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'abfall1', double: 'main' },\n            },\n            {\n                name: 'abfall1', //main ist die erste Seite\n                page: 'abfall1',\n                left: { single: 'alarm1' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'unlock1', double: 'main' },\n            },\n            {\n                name: 'unlock1',\n                page: 'unlock1',\n                left: { double: 'abfall1' }, // Die 4 bezieht sich auf den name: 4\n                right: { double: 'entities3' },\n            },\n            {\n                name: 'fahrplanrouten', //main ist die erste Seite\n                page: 'fahrplanrouten',\n                left: { double: 'unlock1' }, // Die 4 bezieht sich auf den name: 4\n                right: { double: 'entities2' },\n            },\n            {\n                name: 'entities2', //main ist die erste Seite\n                page: 'entities2',\n                left: { single: 'entities3' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'power1', double: 'main' },\n            },\n            {\n                name: 'power1',\n                page: 'power1',\n                left: { single: 'entities2' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'grid4', double: 'main' },\n            },\n            {\n                name: 'grid4', //main ist die erste Seite\n                page: 'grid4',\n                left: { single: 'power1' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'grid1', double: 'main' },\n            },\n            {\n                name: 'grid1',\n                left: { single: 'grid4' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: 'grid2' },\n                page: 'grid1', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: 'grid2',\n                left: { single: 'grid1' },\n                right: { single: 'media3' },\n                page: 'grid2',\n            },\n            {\n                name: 'media3',\n                left: { single: 'grid2' },\n                right: { single: 'grid3', double: 'main' },\n                page: 'media3',\n            },\n            {\n                name: 'grid3',\n                left: { single: 'media3', double: '1' },\n                right: { single: 'thermo1', double: '2' },\n                page: 'grid3',\n            },\n            {\n                name: 'thermo1',\n                left: { single: 'grid3', double: '1' },\n                right: { single: 'main', double: '2' },\n                page: 'thermo1',\n            },\n        ],\n        topic: 'nspanel/ns_panel4',\n        name: 'Scheibtisch',\n        config: {\n            // dat hier hat noch keine bedeutung glaube ich :)\n            momentLocale: '',\n            locale: 'de-DE',\n            iconBig1: false,\n            iconBig2: false,\n        },\n        timeout: 15, // dat kommt vom Admin\n        dimLow: 20,\n        dimHigh: 90,\n    },*/\n    {\n        pages: [\n            pageGridTest4,\n            pageEntitiesTest1,\n            pagePowerTest1,\n            pageThermoTest,\n            pageGridTest1,\n            pageGrid2Test3,\n            pageGridTest2,\n            pageScreensaverTest,\n            //pageMediaTest,\n            pageEntitiesTest2,\n            pageAbfall,\n            pageGridTest5,\n            pageMediaTest3,\n            pageAlarmTest,\n            pageEntitiesTest3,\n            popupTest,\n            pageUnlockTest,\n            pageFahrplanRoutes,\n        ],\n        // override by password.ts\n        navigation: [\n            {\n                name: 'main', //main ist die erste Seite\n                page: 'entities1',\n                left: { single: 'grid3' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: '///service', double: '2' },\n            },\n            {\n                name: 'alarm1', //main ist die erste Seite\n                page: 'alarm1',\n                left: { single: '///service' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'abfall1', double: 'main' },\n            },\n            {\n                name: 'abfall1', //main ist die erste Seite\n                page: 'abfall1',\n                left: { single: 'alarm1' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'fahrplanrouten', double: 'main' },\n            },\n            {\n                name: 'unlock1',\n                page: 'unlock1',\n                left: { double: 'abfall1' }, // Die 4 bezieht sich auf den name: 4\n                right: { double: 'entities3' },\n            },\n            {\n                name: 'fahrplanrouten', //main ist die erste Seite\n                page: 'fahrplanrouten',\n                left: { double: 'abfall1' }, // Die 4 bezieht sich auf den name: 4\n                right: { double: 'entities2' },\n            },\n            {\n                name: 'entities2', //main ist die erste Seite\n                page: 'entities2',\n                left: { single: 'entities3' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'power1', double: 'main' },\n            },\n            {\n                name: 'power1',\n                page: 'power1',\n                left: { single: 'entities2' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'grid4', double: 'main' },\n            },\n            {\n                name: 'grid4', //main ist die erste Seite\n                page: 'grid4',\n                left: { single: 'power1' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'grid1', double: 'main' },\n            },\n            {\n                name: 'grid1',\n                left: { single: 'grid4' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: 'grid2' },\n                page: 'grid1', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: 'grid2',\n                left: { single: 'grid1' },\n                right: { single: 'media3' },\n                page: 'grid2',\n            },\n            {\n                name: 'media3',\n                left: { single: 'grid2' },\n                right: { single: 'grid3', double: 'main' },\n                page: 'media3',\n            },\n            {\n                name: 'grid3',\n                left: { single: 'media3', double: '1' },\n                right: { single: 'thermo1', double: '2' },\n                page: 'grid3',\n            },\n            {\n                name: 'thermo1',\n                left: { single: 'grid3', double: '1' },\n                right: { single: 'main', double: '2' },\n                page: 'thermo1',\n            },\n        ],\n        topic: 'nspanel/ns_panel2',\n        name: 'Wohnzimmer',\n        config: {\n            // dat hier hat noch keine bedeutung glaube ich :)\n            momentLocale: '',\n            locale: 'de-DE',\n            iconBig1: false,\n            iconBig2: false,\n        },\n        timeout: 15, // dat kommt vom Admin\n        dimLow: 20,\n        dimHigh: 90,\n    },\n];\n\nconst test1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'test1',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'entities1',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.activated },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.deactivated },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.string' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.boolean' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.0_userdata.0.number',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.number?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.string' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.boolean' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.number?1|0_userdata.0.number?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst test2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    //card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'test2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Test2',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.activated },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.deactivated },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.string' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.boolean' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.0_userdata.0.number',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.number?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.string' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.boolean' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.number?1|0_userdata.0.number?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n    ],\n    items: undefined,\n};\n\nconst testScr: pages.PageBaseConfig = {\n    //card: 'screensaver2',\n    // mode of screensaver\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'scr',\n    useColor: false,\n    config: {\n        card: 'screensaver2',\n        mode: 'advanced',\n        rotationTime: 0,\n        model: 'eu',\n        data: undefined,\n        screensaverIndicatorButtons: false,\n        screensaverSwipe: false,\n    },\n\n    // Config of Entitys\n    pageItems: [\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'favorit',\n            data: {\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.number' },\n                    decimal: {\n                        type: 'const',\n                        constVal: null,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /**\n                             * How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: '0_userdata.0.number',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 7 - Sonnenaufgang - Sonnenuntergang im Wechsel\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.number',\n                        read: 'return new Date(val).getTime()',\n                        forceType: 'number',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'none',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSYellow,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSYellow,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Sonne',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: '0_userdata.0.string',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#FF00FF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: '0_userdata.0.number',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power1',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power2',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'time',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///time',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'date',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                weekday: 'long',\n                                month: 'short',\n                                year: 'numeric',\n                                day: 'numeric',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    ],\n};\nexport const testCaseConfig: Partial<panelConfigPartial>[] = [\n    {\n        pages: [test1, test2, testScr],\n        // override by password.ts\n        navigation: [\n            {\n                name: 'main', //main ist die erste Seite\n                page: 'test1',\n                left: { single: 'test2' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'test2', double: 'test2' },\n            },\n            {\n                name: 'test2', //main ist die erste Seite\n                page: 'test2',\n                left: { single: 'main' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: 'main', double: 'not exist' },\n            },\n        ],\n        topic: 'test/123456',\n        name: 'Wohnzimmer',\n        config: {\n            // dat hier hat noch keine bedeutung glaube ich :)\n            momentLocale: '',\n            locale: 'de-DE',\n            iconBig1: false,\n            iconBig2: false,\n        },\n        timeout: 15, // dat kommt vom Admin\n        dimLow: 20,\n        dimHigh: 90,\n    },\n];\n\n/**\n * command for javascript adapter\n * sendTo('nspanel-lovelace-ui.0', 'config', Testconfig)\n */\n\n/*\n// pageType~popupNotify\nexport const welcomePopupPayload =\n    'entityUpdateDetail~ -~Willkommen zum NSPanel~63488~~2000~~2000~' +\n    '  Einen sch\u00F6nen Tag           ' +\n    '     w\u00FCnschen dir               ' +\n    ' Armilar, TT-Tom, ticaki      ' +\n    '   & Kuckuckmann~2000~3~1~\uF4DD~2000';\n\n/*\n   SendToPanel({ payload:'pageType~popupNotify'});\n                    SendToPanel({ payload:'entityUpdateDetail~ -~Willkommen zum NSPanel~63488~~2000~~2000~' +\n                        '  Einen sch\u00F6nen Tag           '+\n                        '     w\u00FCnschen dir               ' +\n                        ' Armilar, TT-Tom, ticaki      ' +\n                        '   & Kuckuckmann~2000~3~1~\uF4DD~2000'});*/\n"],
  "mappings": "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",
  "names": []
}
