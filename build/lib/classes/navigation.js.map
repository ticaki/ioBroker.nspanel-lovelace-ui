{
  "version": 3,
  "sources": ["../../../src/lib/classes/navigation.ts"],
  "sourcesContent": ["import { Panel } from '../controller/panel';\nimport { AdapterClassDefinition, BaseClass } from './library';\nimport { rgb_dec565, White } from '../const/Color';\nimport { Icons } from '../const/icon_mapping';\nimport { Page } from './Page';\nimport { getPayload } from '../const/tools';\n\nexport type NavigationItemConfig = {\n    name: string;\n    left?: {\n        single?: string;\n        double?: string;\n    };\n    right?: {\n        single?: string;\n        double?: string;\n    };\n    page: string;\n} | null;\n\nexport type NavigationItem = {\n    left: {\n        single?: number;\n        double?: number;\n    };\n    right: {\n        single?: number;\n        double?: number;\n    };\n    page: Page;\n} | null;\n\nexport interface NavigationConfig {\n    adapter: AdapterClassDefinition;\n    panel: Panel;\n    navigationConfig: NavigationItemConfig[];\n}\n\nexport class Navigation extends BaseClass {\n    panel: Panel;\n    private database: NavigationItem[] = [];\n    private navigationConfig: NavigationItemConfig[];\n    doubleClickDelay: number = 300;\n    private doubleClickTimeout: ioBroker.Timeout | undefined;\n    private currentItem: number = 0;\n    constructor(config: NavigationConfig) {\n        super(config.adapter, `${config.panel.name}-navigation`);\n        this.panel = config.panel;\n        this.navigationConfig = config.navigationConfig;\n    }\n\n    init(): void {\n        for (let a = 0; a < this.navigationConfig.length; a++) {\n            const c = this.navigationConfig[a];\n            if (!c) continue;\n            const pageID = this.panel.getPagebyUniqueID(c.page);\n            this.database[a] = pageID !== null ? { page: pageID, left: {}, right: {} } : null;\n        }\n        for (let a = 0; a < this.database.length; a++) {\n            const c = this.navigationConfig[a];\n            const i = this.database[a];\n            if (!c || !i) continue;\n            for (const k of ['left', 'right']) {\n                const nk = k as 'left' | 'right';\n                const r = c[nk];\n                if (!r) continue;\n                for (const k2 of ['single', 'double']) {\n                    const nk2 = k2 as 'single' | 'double';\n                    const r2 = r[nk2];\n                    if (!r2) continue;\n                    const index = this.navigationConfig.findIndex((a) => a && a.name === r2);\n                    if (index !== -1) {\n                        i[nk][nk2] = index;\n                    } else {\n                        this.log.warn(`Dont find a navigation node with name ${r2}`);\n                    }\n                }\n            }\n        }\n    }\n\n    setTargetPageByName(n: string): void {\n        const index = this.navigationConfig.findIndex((a) => a && a.name === n);\n        if (index !== -1 && this.database[index]) {\n            this.currentItem = index;\n            this.panel.setActivePage(this.database[index]!.page);\n        } else {\n            this.log.warn(`Dont find navigation target for ${n}`);\n        }\n    }\n    goLeft(): void {\n        this.go('left');\n    }\n    goRight(): void {\n        this.go('right');\n    }\n    private go(d: 'left' | 'right', single: boolean = false): void {\n        const i = this.database[this.currentItem];\n        // zweiter Klick\n        if (this.doubleClickTimeout && !single) {\n            this.adapter.clearTimeout(this.doubleClickTimeout);\n            this.doubleClickTimeout = undefined;\n            if (i && i[d] && i[d].double) {\n                const index = i[d].double;\n                if (index !== undefined && this.database[index]) {\n                    this.currentItem = index;\n                    this.panel.setActivePage(this.database[index]!.page);\n                }\n            }\n            this.log.debug('Navigation double click not work.');\n            // erster Klick und check obs ein Ziel f\u00FCr den 2. Klick gibt.\n        } else if (!single && i && i[d] && i[d].double) {\n            this.doubleClickTimeout = this.adapter.setTimeout(\n                (...arg: any): void => {\n                    this.go(arg[0], arg[1]);\n                },\n                this.doubleClickDelay,\n                d,\n                true,\n            );\n            return;\n            // erster Klick und timeout ist durch oder forced.\n        } else {\n            this.adapter.clearTimeout(this.doubleClickTimeout);\n            this.doubleClickTimeout = undefined;\n            if (i && i[d] && i[d].single !== undefined) {\n                const index = i[d].single;\n                if (index !== undefined && this.database[index]) {\n                    this.currentItem = index;\n                    this.panel.setActivePage(this.database[index]!.page);\n                    return;\n                }\n                this.log.debug(`Navigation single click with target ${i[d].single} not work.`);\n                return;\n            }\n            this.log.debug('Navigation single click not work.');\n        }\n    }\n    buildNavigationString(): string {\n        const item = this.database[this.currentItem];\n        if (!item) return '';\n        let navigationString = '';\n        if (\n            item.left.single !== undefined &&\n            (item.left.double === undefined || this.doubleClickTimeout === undefined)\n        ) {\n            navigationString = getPayload(\n                'button',\n                'bSubPrev',\n                item.left.double !== undefined\n                    ? Icons.GetIcon('arrow-left-bold')\n                    : Icons.GetIcon('arrow-top-left-bold-outline'),\n                String(rgb_dec565(White)),\n                '',\n                '',\n            );\n        } else if (item.left.double !== undefined) {\n            navigationString = getPayload(\n                'button',\n                'bUp',\n                Icons.GetIcon('arrow-up-bold'),\n                String(rgb_dec565(White)),\n                '',\n                '',\n            );\n        } else {\n            navigationString = getPayload('', '', '', '', '', '');\n        }\n        let navigationString2 = '';\n        //Right icon\n        if (\n            item.right.single !== undefined &&\n            (item.right.double === undefined || this.doubleClickTimeout === undefined)\n        ) {\n            navigationString2 = getPayload(\n                'button',\n                'bSubNext',\n                item.left.double === undefined\n                    ? Icons.GetIcon('arrow-right-bold')\n                    : Icons.GetIcon('arrow-top-right-bold-outline'),\n                String(rgb_dec565(White)),\n                '',\n                '',\n            );\n        } else if (item.right.double !== undefined) {\n            navigationString2 = getPayload('button', 'bHome', Icons.GetIcon('home'), String(rgb_dec565(White)), '', '');\n        } else {\n            navigationString2 = getPayload('', '', '', '', '', '');\n        }\n        return getPayload(navigationString, navigationString2);\n    }\n    resetPosition(): void {\n        this.currentItem = 0;\n    }\n    getCurrentPage(): Page {\n        const page = this.database[this.currentItem];\n        if (page === null) {\n            const index = this.database.findIndex((a) => a && a.page !== null);\n            return this.database[index]!.page;\n        }\n        return page.page;\n    }\n}\n"],
  "mappings": "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",
  "names": ["a"]
}
