{
  "version": 3,
  "sources": ["../../../src/lib/classes/http-server.ts"],
  "sourcesContent": ["import http from 'http';\nimport { BaseClass } from './library';\nimport type { NspanelLovelaceUi } from '../types/NspanelLovelaceUi';\n\nexport class HttpServer extends BaseClass {\n    fileVersion: string;\n    server: http.Server;\n    constructor(adapter: NspanelLovelaceUi, version: string, port: number) {\n        super(adapter);\n        this.fileVersion = version;\n        this.server = http\n            .createServer((req, res) => {\n                res.writeHead(200, { 'Content-Type': 'application/tft' });\n\n                this.adapter.readFile(this.name, `nspanel-v${this.fileVersion}.tft`, (err, data) => {\n                    if (err) {\n                        res.writeHead(404);\n                        res.write('File not found!', err => {\n                            if (err) {\n                                this.adapter.log.error(`Error writing file: ${err}`);\n                            }\n                            res.end();\n                            this.server.close();\n                        });\n                    } else {\n                        res.write(data, err => {\n                            if (err) {\n                                this.adapter.log.error(`Error writing file: ${err}`);\n                            }\n                            res.end();\n                            this.server.close();\n                        });\n                    }\n                });\n            })\n            .listen(port);\n    }\n    async delete(): Promise<void> {\n        this.server.close();\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiB;AACjB,qBAA0B;AAGnB,MAAM,mBAAmB,yBAAU;AAAA,EACtC;AAAA,EACA;AAAA,EACA,YAAY,SAA4B,SAAiB,MAAc;AACnE,UAAM,OAAO;AACb,SAAK,cAAc;AACnB,SAAK,SAAS,YAAAA,QACT,aAAa,CAAC,KAAK,QAAQ;AACxB,UAAI,UAAU,KAAK,EAAE,gBAAgB,kBAAkB,CAAC;AAExD,WAAK,QAAQ,SAAS,KAAK,MAAM,YAAY,KAAK,WAAW,QAAQ,CAAC,KAAK,SAAS;AAChF,YAAI,KAAK;AACL,cAAI,UAAU,GAAG;AACjB,cAAI,MAAM,mBAAmB,CAAAC,SAAO;AAChC,gBAAIA,MAAK;AACL,mBAAK,QAAQ,IAAI,MAAM,uBAAuBA,IAAG,EAAE;AAAA,YACvD;AACA,gBAAI,IAAI;AACR,iBAAK,OAAO,MAAM;AAAA,UACtB,CAAC;AAAA,QACL,OAAO;AACH,cAAI,MAAM,MAAM,CAAAA,SAAO;AACnB,gBAAIA,MAAK;AACL,mBAAK,QAAQ,IAAI,MAAM,uBAAuBA,IAAG,EAAE;AAAA,YACvD;AACA,gBAAI,IAAI;AACR,iBAAK,OAAO,MAAM;AAAA,UACtB,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL,CAAC,EACA,OAAO,IAAI;AAAA,EACpB;AAAA,EACA,MAAM,SAAwB;AAC1B,SAAK,OAAO,MAAM;AAAA,EACtB;AACJ;",
  "names": ["http", "err"]
}
