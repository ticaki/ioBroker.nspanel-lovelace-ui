{
  "version": 3,
  "sources": ["../../src/lib/config-custom.ts"],
  "sourcesContent": ["import * as pages from './types/pages';\nimport { panelConfigPartial } from './controller/panel';\nimport { Color } from './const/Color';\n\nconst pageGridMain: pages.PageBaseConfig = {\n    alwaysOn: 'none',\n    uniqueID: 'main',\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCbersicht',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Anzahl_offene',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 12,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Status_offene',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Anzahl_offene',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'T\u00FCren',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 11,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Status_Ein',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Anzahl_Ein',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 14,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lock' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lock-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCrschloss.state',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCrschlo\u00DF',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n};\nconst pageGridTueren: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'tuer',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Status T\u00FCren',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.T\u00FCren.Haust\u00FCr.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Haust\u00FCr',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.T\u00FCren.Terassent\u00FCr.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Terasse',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridFenster1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'fenster1',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Status Fenster',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.WC-Fenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'G\u00E4ste WC',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.K\u00FCchenfenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'K\u00FCche',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.B\u00FCrofenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00FCro',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.JosiFenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Josi',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Schalfzimmerfenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Schalfzimmer',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridFenster2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'fenster2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Status Dachfenster',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Dachfenster1.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach 1',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Dachfenster2.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach 2',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Dachfenster3.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach 3',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht1',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht unten',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_Treppe.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Treppe',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.Licht_Treppe.SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_K\u00FCche.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'K\u00FCche Sp\u00FCle',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.LED_K\u00FCche.ON_SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_K\u00FCche_Board.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'K\u00FCche Board',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.LED_K\u00FCche_Board.ON_SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_HWR.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'HWR',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.LED_HWR.ON_SET' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht oben',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_B\u00FCro.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00FCro',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.Licht_B\u00FCro.SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00FCro Schreibtisch',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_Dach.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.Licht_Dach.SET' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht3: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht3',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht Josi',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_Josi_Decke.ON',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Decke',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.RegalJosiKalt.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Regal kalt',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.RegalJosiWarm.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Regal warm',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.RegalJosiEfeu.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Efeu',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht4: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht4',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht Wohnzimmer',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_TV.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'TV',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_Board.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Regal',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Sterne_WZ.Control.Power',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_WZ.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Decke',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageAbfall: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '0_userdata.0.Abfallkalender',\n    uniqueID: 'abfall',\n    template: 'entities.waste-calendar',\n};\nconst pagePowerTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'power1',\n    useColor: false,\n    pageItems: [],\n    config: {\n        card: 'cardPower',\n        data: {\n            headline: { type: 'const', constVal: 'Stromverteilung' },\n            homeIcon: {\n                true: {\n                    value: { type: 'const', constVal: 'home-lightning-bolt-outline' },\n                    color: undefined,\n                },\n                false: {\n                    value: undefined,\n                    color: undefined,\n                },\n            },\n            homeValueTop: undefined,\n            homeValueBot: {\n                value: { type: 'internal', dp: '///power1/powerSum' },\n                math: { type: 'const', constVal: 'return r2+l2' },\n            },\n            leftTop: undefined,\n            leftMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'solar-power-variant-outline' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 650, val_best: 650 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'mqtt.2.Solar.P_AC' },\n                    decimal: { type: 'const', constVal: 0 },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'mqtt.2.Solar.P_AC',\n                        read: `{\n                            let v = val*125/650; \n                            v = v<0?0:v>125?125:v; \n                            return (v*-1).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            leftBottom: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'tumble-dryer' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 2000, val_best: 0 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'alias.0.Trockner.Leistung' },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'alias.0.Trockner.Leistung',\n                        read: `{\n                            let v = val*125/2000; \n                            v = v<0?0:v>125?125:v; \n                            return (v*-1).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            rightTop: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'washing-machine' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 2000, val_best: 0 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'alias.0.WMA.Leistung' },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'alias.0.WMA.Leistung',\n                        read: `{\n                            let v = val*125/2000; \n                            v = v<0?0:v>125?125:v; \n                            return (v*-1).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            rightMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'transmission-tower' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 5000, val_best: 0 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'alias.0.Stromzaehler.Daten.Leistung' },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'alias.0.Stromzaehler.Daten.Leistung',\n                        read: `{\n                            let v = val*125/5000; \n                            v = v<0?0:v>125?125:v; \n                            return (v).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            rightBottom: undefined,\n        },\n    },\n    items: undefined,\n};\nconst pageFahrplanTimetable: pages.PageBaseConfig = {\n    card: 'cardEntities',\n    dpInit: 'fahrplan.0.DepartureTimetable0',\n    uniqueID: 'fahrplanabfahrten',\n    template: 'entities.fahrplan.departure-timetable',\n};\nconst pageFahrplanRoutes: pages.PageBaseConfig = {\n    card: 'cardEntities',\n    dpInit: 'fahrplan.0.0',\n    uniqueID: 'fahrplanrouten',\n    template: 'entities.fahrplan.routes',\n};\nconst pageThermoTemplate: pages.PageBaseConfig = {\n    card: 'cardThermo',\n    template: 'thermo.hmip.valve',\n    alwaysOn: 'always',\n    uniqueID: 'thermo',\n    enums: ['enum.rooms.office'],\n    dpInit: '',\n};\nconst pageThermo: pages.PageBaseConfig = {\n    card: 'cardThermo',\n    template: 'thermo.hmip.wallthermostat',\n    alwaysOn: 'always',\n    uniqueID: 'thermo1',\n    enums: ['enum.rooms.living_room'],\n    dpInit: '',\n};\nconst pageAlarm: pages.PageBaseConfig = {\n    uniqueID: 'uidAlarm',\n    alwaysOn: 'always',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardAlarm',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Alarmanalage',\n            },\n            entity1: undefined,\n            button1: {\n                type: 'const',\n                constVal: 'Vollschutz',\n            },\n            button2: {\n                type: 'const',\n                constVal: 'Zuhause',\n            },\n            button3: {\n                type: 'const',\n                constVal: 'Nacht',\n            },\n            button4: {\n                type: 'const',\n                constVal: 'Besuch',\n            },\n            icon: undefined,\n            pin: {\n                type: 'const',\n                constVal: '1234',\n            },\n            approved: { type: 'triggered', dp: '0_userdata.0.Alarmtrigger', change: 'ts' },\n        },\n    },\n};\nconst pageUnlockTest: pages.PageBaseConfig = {\n    uniqueID: 'unlock1',\n    alwaysOn: 'always',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardAlarm',\n        data: {\n            alarmType: { type: 'const', constVal: 'unlock' },\n            headline: { type: 'const', constVal: 'Unlock' },\n            entity1: undefined,\n            button1: undefined,\n            button2: undefined,\n            button3: undefined,\n            button4: undefined,\n            icon: undefined,\n            pin: { type: 'const', constVal: '12345' },\n            setNavi: { type: 'const', constVal: '3' },\n        },\n    },\n};\nconst popupTest: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'popup1',\n    useColor: false,\n    config: {\n        card: 'popupNotify',\n        data: {\n            entity1: { value: { type: 'triggered', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyEvent' } },\n            headline: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyHeading' },\n            colorHeadline: { true: { color: { type: 'const', constVal: '#F80000' } } },\n            buttonLeft: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyButton1Text' },\n            colorButtonLeft: { true: { color: { type: 'const', constVal: Color.Green } } },\n            buttonRight: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyButton2Text' },\n            colorButtonRight: { true: { color: { type: 'const', constVal: Color.White } } },\n            //text: { type: 'const', constVal: 'Text Test ${pl}' },\n            text: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyText' },\n            colorText: { true: { color: { type: 'const', constVal: Color.White } } },\n            timeout: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifySleepTimeout' },\n            // {placeholder: {text: '' oder dp: ''}} im Text muss dann ${dieserKeyStehtImText} stehen\n            // optionalValue: { type: 'const', constVal: { dieserKeyStehtImText: { text: 'das ist ein placeholder' } } },\n            setValue1: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyAction' }, // alleine ist es ein switch\n            setValue2: { type: 'state', dp: '0_userdata.0.NSPanel.Flur.popupNotify.popupNotifyAction' }, // mit setValue2 wird 1, bei yes und 2 bei no auf true gesetzt\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\nconst pageGridTest: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'always',\n    uniqueID: 'testGrid',\n    useColor: true,\n    items: undefined,\n    config: {\n        card: 'cardGrid',\n        scrollType: 'page',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'test Licht',\n            },\n        },\n    },\n    pageItems: [\n        {\n            template: 'script.door',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.gate',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.lock',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.motion',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.humidity',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.temperature',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.slider',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.volume',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.warning',\n            dpInit: 'lias.0.script.Warning',\n        },\n    ],\n};\nconst pageEntitiesTest: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'always',\n    uniqueID: 'testEntities',\n    useColor: true,\n    items: undefined,\n    config: {\n        card: 'cardEntities',\n        scrollType: 'page',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'test Licht',\n            },\n        },\n    },\n    pageItems: [\n        {\n            template: 'script.door',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.gate',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.lock',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.motion',\n            dpInit: 'alias.0.script.Boolean',\n        },\n        {\n            template: 'script.humidity',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.temperature',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.slider',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.volume',\n            dpInit: 'alias.0.script.Number',\n        },\n        {\n            template: 'script.warning',\n            dpInit: 'lias.0.script.Warning',\n        },\n    ],\n};\nconst pageChartTest: pages.PageBaseConfig = {\n    uniqueID: 'uidChart',\n    alwaysOn: 'always',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardChart',\n        data: {\n            headline: { type: 'const', constVal: 'Testchart' },\n            color: { true: { color: { type: 'const', constVal: Color.Yellow } } },\n            value: { type: 'triggered', dp: '0_userdata.0.Charts.Heizung.Werte' },\n            ticks: { type: 'triggered', dp: '0_userdata.0.Charts.Heizung.Scale' },\n            text: { type: 'const', constVal: 'Waerme kWh' },\n        },\n    },\n};\nconst pageLChartTest: pages.PageBaseConfig = {\n    uniqueID: 'uidLChart',\n    alwaysOn: 'always',\n    dpInit: '',\n    pageItems: [],\n    config: {\n        card: 'cardLChart',\n        data: {\n            headline: { type: 'const', constVal: 'TestLchart' },\n            color: { true: { color: { type: 'const', constVal: Color.Yellow } } },\n            value: { type: 'triggered', dp: '0_userdata.0.Charts.AussenTemp.Werte' },\n            //ticks: { type: 'triggered', dp: '0_userdata.0.Charts.AussenTemp.Scale' },\n            text: { type: 'const', constVal: 'Temperatur \u00B0C' },\n        },\n    },\n};\nconst pageQRTest: pages.PageBaseConfig = {\n    uniqueID: 'uidQR',\n    alwaysOn: 'always',\n    dpInit: '',\n    config: {\n        card: 'cardQR',\n        data: {\n            headline: { type: 'const', constVal: 'Gast WLAN' },\n        },\n    },\n    pageItems: [\n        {\n            role: '',\n            type: 'text',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'wifi' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'wifi' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: false,\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'SSID',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: '',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'key' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'key' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.GaesteWlan.switch',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wlan enabled',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Wlan disabled',\n                    },\n                },\n                setValue1: { type: 'state', dp: 'alias.0.GaesteWlan.switch' },\n            },\n        },\n    ],\n};\n\nconst pagenEntitiesAdapter: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'adapter',\n    config: {\n        card: 'cardEntities',\n        cardRole: 'AdapterStopped',\n        scrollType: 'page',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter',\n            },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\n\nconst pageScreensaverTest: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'scr',\n    useColor: false,\n    config: {\n        card: 'screensaver2',\n        mode: 'advanced',\n        rotationTime: 10,\n        model: 'eu',\n        data: undefined,\n    },\n\n    // Config of Entitys\n    pageItems: [\n        //Datum und Zeit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'time',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///time',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'date',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                weekday: 'long',\n                                month: 'short',\n                                year: 'numeric',\n                                day: 'numeric',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        //Favorit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'favorit',\n            data: {\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Current.Temperature' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        //left\n        {\n            // Left 1 - temperatur flur Panel\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.NSPanel.Flur.Sensor.ANALOG.Temperature.ACTUAL',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'thermometer',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 35, val_best: 20 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n            },\n        },\n        {\n            // Left 2 - W\u00E4rmeverbrauch\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Heizung.W\u00E4rmeTagesVerbrauch.ACTUAL',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'kWh',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'counter',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 5000 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n            },\n        },\n        {\n            // Left 3 - M\u00FClltermin\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.Abfallkalender.1.date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                month: '2-digit',\n                                year: 'numeric',\n                                day: '2-digit',\n                            },\n                        },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'trash-can',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: '0_userdata.0.Abfallkalender.1.color',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n            },\n        },\n        //Bottom\n        // Bottom 1 - Sonenaufgang\n        {\n            template: 'text.accuweather.sunriseset',\n            dpInit: '/^accuweather.0.Daily.+/',\n            modeScr: 'bottom',\n        },\n        // Bottom 2 - Wind\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 120 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 3 - B\u00F6en\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 4 - Windrichtung\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.White,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 5 - Feuchte\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'water-percent',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 100, val_best: 65 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Feuchte',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 6 - UV-Index\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.UVIndex',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.UVIndex',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'solar-power',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 9, val_best: 0 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'UV Index',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 7 - Wettervorschau morgen\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d1$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 8 - Wettervorschau \u00FCbermorgen\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d2$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 9 - Wettervorschau + 3 Tage\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d3$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 10 - Wettervorschau + 4 Tage\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d4$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 11 - Wettervorschau + 5 Tage\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d5$/',\n            modeScr: 'bottom',\n        },\n\n        //Indicator\n        //indicator 1\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 2\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Status_offene',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCren',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 3\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Status_Ein',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 4\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCrschloss.state',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lock' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lock-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCrschloss',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 5\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'vw-connect.0.TMBLE7NS2K8033846.status.isCarLocked',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'car-key' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Auto',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 6\n        {\n            role: 'battery',\n            template: 'text.battery',\n            dpInit: '0_userdata.0',\n            modeScr: 'indicator',\n        },\n        //indicator 7\n        {\n            role: 'text',\n            type: 'text',\n            dpInit: '',\n            modeScr: 'indicator',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.open },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.close },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'window' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'opened' },\n                    false: { type: 'const', constVal: 'closed' },\n                },\n            },\n        },\n\n        //mrIcon1/2\n        {\n            // mricon 1\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // mricon 2\n            role: 'combined',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power2',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                        text: {\n                            value: {\n                                type: 'state',\n                                dp: '0_userdata.0.example_state_number',\n                            },\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                },\n            },\n        },\n    ],\n};\n\nexport const Testconfig: Partial<panelConfigPartial>[] = [\n    {\n        pages: [\n            pageGridMain,\n            pageGridTueren,\n            pageGridFenster1,\n            pageGridFenster2,\n            pageGridLicht1,\n            pageGridLicht2,\n            pageGridLicht3,\n            pageGridLicht4,\n            pagePowerTest1,\n            pageScreensaverTest,\n            pageAbfall,\n            pageFahrplanTimetable,\n            pageFahrplanRoutes,\n            pageThermoTemplate,\n            pagenEntitiesAdapter,\n            pageAlarm,\n            pageUnlockTest,\n            popupTest,\n            pageThermo,\n            pageGridTest,\n            pageEntitiesTest,\n            pageChartTest,\n            pageLChartTest,\n            pageQRTest,\n        ],\n        // override by password.ts\n        navigation: [\n            {\n                name: 'main', //main ist die erste Seite\n                page: 'main',\n                left: { single: '32' }, // arrow-top-left-bold-outline\n                right: { single: '1' },\n            },\n            {\n                name: '11',\n                left: { double: 'main' }, // Das main bezieht sich auf den name: main\n                right: { double: 'main' },\n                page: 'tuer', // das tuer bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '12',\n                left: { double: 'main' },\n                right: { single: '13' },\n                page: 'fenster1',\n            },\n            {\n                name: '13',\n                left: { single: '12' },\n                right: { double: 'main' },\n                page: 'fenster2',\n            },\n            {\n                name: '14',\n                left: { double: 'main' },\n                right: { single: '15' },\n                page: 'licht1',\n            },\n            {\n                name: '15',\n                left: { single: '14' },\n                right: { single: '16' },\n                page: 'licht2',\n            },\n            {\n                name: '16',\n                left: { single: '15' },\n                right: { single: '17' },\n                page: 'licht3',\n            },\n            {\n                name: '17',\n                left: { single: '16' },\n                right: { double: 'main' },\n                page: 'licht4',\n            },\n            {\n                name: '1',\n                left: { single: 'main' },\n                right: { single: '2' },\n                page: 'abfall',\n            },\n            {\n                name: '2',\n                left: { single: '1' },\n                right: { single: '3' },\n                page: 'power1',\n            },\n            {\n                name: '3',\n                left: { single: '2' },\n                right: { single: '4' },\n                page: 'fahrplanabfahrten',\n            },\n            {\n                name: '4',\n                left: { single: '3' },\n                right: { single: '6' },\n                page: 'fahrplanrouten',\n            },\n            {\n                name: '6',\n                left: { single: '4' },\n                right: { single: '7' },\n                page: 'thermo',\n            },\n            {\n                name: '7',\n                left: { single: '6' },\n                right: { single: '8' },\n                page: 'adapter',\n            },\n            {\n                name: '8',\n                left: { single: '7' },\n                right: { single: '9' },\n                page: '///unlock',\n            },\n            {\n                name: '9',\n                left: { single: '8' },\n                right: { single: '10' },\n                page: 'testGrid',\n            },\n            {\n                name: '10',\n                left: { single: '9' },\n                right: { single: '30' },\n                page: 'testEntities',\n            },\n            {\n                name: '30',\n                left: { single: '10' },\n                right: { single: '31' },\n                page: 'uidChart',\n            },\n            {\n                name: '31',\n                left: { single: '30' },\n                right: { single: '32' },\n                page: 'uidLChart',\n            },\n            {\n                name: '32',\n                left: { single: '31' },\n                right: { single: 'main' },\n                page: 'uidQR',\n            },\n        ],\n        topic: 'SmartHome/NSPanel_1',\n        name: 'B\u00FCro',\n        config: {\n            // dat hier hat noch keine bedeutung glaube ich :)\n            momentLocale: '',\n            locale: 'de-DE',\n            iconBig1: false,\n            iconBig2: false,\n        },\n        timeout: 30, // dat kommt vom Admin\n        dimLow: 20,\n        dimHigh: 90,\n    },\n];\n"],
  "mappings": "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",
  "names": []
}
