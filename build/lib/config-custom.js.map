{
  "version": 3,
  "sources": ["../../src/lib/config-custom.ts"],
  "sourcesContent": ["import * as pages from './types/pages';\nimport * as Color from './const/Color';\nimport { panelConfigPartial } from './controller/panel';\n\nconst pageGridMain: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'main',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCbersicht',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Anzahl_offene',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 12,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Status_offene',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Anzahl_offene',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'T\u00FCren',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 11,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Status_Ein',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Anzahl_Ein',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 14,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lock' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lock-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCrschloss.state',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCrschlo\u00DF',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridTueren: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'tuer',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Status T\u00FCren',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.T\u00FCren.Haust\u00FCr.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Haust\u00FCr',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.T\u00FCren.Terassent\u00FCr.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Terasse',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridFenster1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'fenster1',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Status Fenster',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.WC-Fenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'G\u00E4ste WC',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.K\u00FCchenfenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'K\u00FCche',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.B\u00FCrofenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00FCro',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.JosiFenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Josi',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Schalfzimmerfenster.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Schalfzimmer',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridFenster2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'fenster2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Status Dachfenster',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Dachfenster1.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach 1',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Dachfenster2.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach 2',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Fenster.Dachfenster3.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach 3',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht1',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht unten',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_Treppe.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Treppe',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.Licht_Treppe.SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_K\u00FCche.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'K\u00FCche Sp\u00FCle',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.LED_K\u00FCche.ON_SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_K\u00FCche_Board.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'K\u00FCche Board',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.LED_K\u00FCche_Board.ON_SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_HWR.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'HWR',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.LED_HWR.ON_SET' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht oben',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_B\u00FCro.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00FCro',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.Licht_B\u00FCro.SET' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00FCro Schreibtisch',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_Dach.ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Dach',\n                    },\n                    false: undefined,\n                },\n                setValue1: { type: 'state', dp: 'alias.0.Licht.Licht_Dach.SET' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht3: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht3',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht Josi',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.Licht_Josi_Decke.ON',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Decke',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.RegalJosiKalt.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Regal kalt',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.RegalJosiWarm.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Regal warm',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.RegalJosiEfeu.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Efeu',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridLicht4: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'licht4',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Licht Wohnzimmer',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_TV.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'TV',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_Board.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Regal',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Sterne_WZ.Control.Power',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Licht.LED_WZ.ON_ACTUAL',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Decke',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageAbfall: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'abfall',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Abfall',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'trash-can' },\n                        color: { type: 'state', dp: '0_userdata.0.Abfallkalender.1.color' },\n                    },\n                },\n                entity1: {\n                    value: { type: 'const', constVal: true },\n                },\n                text: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.1.event' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.1.date' },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'trash-can' },\n                        color: { type: 'state', dp: '0_userdata.0.Abfallkalender.2.color' },\n                    },\n                },\n                entity1: {\n                    value: { type: 'const', constVal: true },\n                },\n                text: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.2.event' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.2.date' },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'trash-can' },\n                        color: { type: 'state', dp: '0_userdata.0.Abfallkalender.3.color' },\n                    },\n                },\n                entity1: {\n                    value: { type: 'const', constVal: true },\n                },\n                text: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.3.event' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.3.date' },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'trash-can' },\n                        color: { type: 'state', dp: '0_userdata.0.Abfallkalender.4.color' },\n                    },\n                },\n                entity1: {\n                    value: { type: 'const', constVal: true },\n                },\n                text: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.4.event' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'state', dp: '0_userdata.0.Abfallkalender.4.date' },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageAbfallTemplate: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '0_userdata.0.Abfallkalender',\n    uniqueID: 'abfall1',\n    template: 'entities.waste-calendar',\n};\nconst pagePowerTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardPower',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'power1',\n    useColor: false,\n    pageItems: [],\n    config: {\n        card: 'cardPower',\n        data: {\n            headline: { type: 'const', constVal: 'Stromverteilung' },\n            homeIcon: {\n                true: {\n                    value: { type: 'const', constVal: 'home-lightning-bolt-outline' },\n                    color: undefined,\n                },\n                false: {\n                    value: undefined,\n                    color: undefined,\n                },\n            },\n            homeValueTop: undefined,\n            homeValueBot: {\n                value: { type: 'internal', dp: '///power1/powerSum' },\n                math: { type: 'const', constVal: 'return r2+l2' },\n            },\n            leftTop: undefined,\n            leftMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'solar-power-variant-outline' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 650, val_best: 650 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'mqtt.2.Solar.P_AC' },\n                    decimal: { type: 'const', constVal: 0 },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'mqtt.2.Solar.P_AC',\n                        read: `{\n                            let v = val*125/650; \n                            v = v<0?0:v>125?125:v; \n                            return (v*-1).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            leftBottom: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'tumble-dryer' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 2000, val_best: 0 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'alias.0.Trockner.Leistung' },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'alias.0.Trockner.Leistung',\n                        read: `{\n                            let v = val*125/2000; \n                            v = v<0?0:v>125?125:v; \n                            return (v*-1).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            rightTop: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'washing-machine' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 2000, val_best: 0 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'alias.0.WMA.Leistung' },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'alias.0.WMA.Leistung',\n                        read: `{\n                            let v = val*125/2000; \n                            v = v<0?0:v>125?125:v; \n                            return (v*-1).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            rightMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'transmission-tower' },\n                        color: { type: 'const', constVal: Color.MSGreen },\n                        text: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.MSRed },\n                        text: undefined,\n                    },\n                    scale: { type: 'const', constVal: { val_min: 0, val_max: 5000, val_best: 0 } },\n                },\n                value: {\n                    value: { type: 'triggered', dp: 'alias.0.Stromzaehler.Daten.Leistung' },\n                    unit: { type: 'const', constVal: 'W' },\n                },\n                speed: {\n                    value: {\n                        type: 'state',\n                        dp: 'alias.0.Stromzaehler.Daten.Leistung',\n                        read: `{\n                            let v = val*125/5000; \n                            v = v<0?0:v>125?125:v; \n                            return (v).toFixed(0);\n                        }`,\n                    },\n                },\n            },\n            rightBottom: undefined,\n        },\n    },\n    items: undefined,\n};\nconst pageEntitiesFahrplan: pages.PageBaseConfig = {\n    card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'fahrplan',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Fahrplan S-Bhf',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: 'fahrplan.0.DepartureTimetable0',\n            data: {\n                icon: {\n                    true: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.0.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.0.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        role: 'state',\n                        mode: 'auto',\n                        type: 'triggered',\n                        dp: '.0.DepartureDelayed$',\n                    },\n                },\n                entity2: {\n                    value: {\n                        role: 'date',\n                        mode: 'auto',\n                        type: 'triggered',\n                        dp: '.0.Departure$',\n                        read: 'return val && val !=0 ? val : null',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                text: {\n                    true: {\n                        role: 'state',\n                        mode: 'auto',\n                        type: 'triggered',\n                        dp: '.0.Direction$',\n                    },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        role: 'date',\n                        mode: 'auto',\n                        type: 'triggered',\n                        dp: '.0.DeparturePlanned$',\n                        read: `{ return new Date(val).toLocaleTimeString().slice(0,6) }`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: 'fahrplan.0.DepartureTimetable0',\n            data: {\n                icon: {\n                    true: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.1.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.1.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.1.DepartureDelayed$',\n                    },\n                },\n                entity2: {\n                    value: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.1.Departure$',\n                        read: 'return val === 0 ? null : val',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                text: {\n                    true: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.1.Direction$',\n                    },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.1.DeparturePlanned$',\n                        read: `{ return new Date(val).toLocaleTimeString().slice(0,5) }`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: 'fahrplan.0.DepartureTimetable0',\n            data: {\n                icon: {\n                    true: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.2.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.2.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.2.DepartureDelayed$',\n                    },\n                },\n                entity2: {\n                    value: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.2.Departure$',\n                        read: 'return val === 0 ? null : val',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                text: {\n                    true: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.2.Direction$',\n                    },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.2.DeparturePlanned$',\n                        read: `{ return new Date(val).toLocaleTimeString().slice(0,5) }`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: 'fahrplan.0.DepartureTimetable0',\n            data: {\n                icon: {\n                    true: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.3.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { role: '', mode: 'auto', type: 'state', dp: '.3.Mode$' },\n                        //value: { type:'const', constVal: ' bus'},\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.3.DepartureDelayed$',\n                    },\n                },\n                entity2: {\n                    value: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.3.Departure$',\n                        read: 'return val === 0 ? null : val',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                text: {\n                    true: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.3.Direction$',\n                    },\n                    false: undefined,\n                },\n                text1: {\n                    true: {\n                        role: '',\n                        mode: 'auto',\n                        type: 'state',\n                        dp: '.3.DeparturePlanned$',\n                        read: `{ return new Date(val).toLocaleTimeString().slice(0,5) }`,\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n};\nconst pageEntitiesFahrplanTemplate: pages.PageBaseConfig = {\n    card: 'cardEntities',\n    dpInit: 'fahrplan.0.DepartureTimetable0',\n    uniqueID: 'fahrplan1',\n    template: 'entities.departure-timetable',\n};\n\nconst pageScreensaverTest: pages.PageBaseConfig = {\n    card: 'screensaver',\n    // mode of screensaver\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'scr',\n    useColor: false,\n    config: {\n        card: 'screensaver2',\n        mode: 'advanced',\n        rotationTime: 10,\n        model: 'eu',\n        data: undefined,\n    },\n\n    // Config of Entitys\n    pageItems: [\n        //Datum und Zeit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'time',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///time',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'date',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                weekday: 'long',\n                                month: 'short',\n                                year: 'numeric',\n                                day: 'numeric',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        //Favorit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'favorit',\n            data: {\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Current.Temperature' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        //left\n        {\n            // Left 1 - temperatur flur Panel\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.NSPanel.Flur.Sensor.ANALOG.Temperature.ACTUAL',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'thermometer',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 35, val_best: 20 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n            },\n        },\n        {\n            // Left 2 - W\u00E4rmeverbrauch\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Heizung.W\u00E4rmeTagesVerbrauch.ACTUAL',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'kWh',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'counter',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 5000 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n            },\n        },\n        {\n            // Left 3 - M\u00FClltermin\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.Abfallkalender.1.date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                month: '2-digit',\n                                year: 'numeric',\n                                day: '2-digit',\n                            },\n                        },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'trash-can',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: '0_userdata.0.Abfallkalender.1.color',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n            },\n        },\n        //Bottom\n        {\n            // Bottom 1 - Sonenaufgang\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Daily.Day1.Sunrise',\n                        read: 'return new Date(val).getTime()',\n                        forceType: 'number',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-sunset-up',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.Blue,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Sun',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 2 - Wind\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 120 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 3 - B\u00F6en\n\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 4 - Windrichtung\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.White,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 5 - Feuchte\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'water-percent',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 100, val_best: 65 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Feuchte.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 6 - Sonnenuntergang\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Daily.Day1.Sunset',\n                        read: 'return new Date(val).getTime()',\n                        forceType: 'number',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-sunset-down',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.Blue,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Sun',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 7 - Wettervorschau morgen\n\n            role: '2values',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMin_d1' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0 ',\n                    },\n                },\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMax_d1' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n                            dp: 'accuweather.0.Summary.WeatherIcon_d1',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Summary.WeatherIcon_d1',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n                text: {\n                    true: {\n                        type: 'state',\n                        dp: 'accuweather.0.Summary.DayOfWeek_d1',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 8 - Wettervorschau \u00FCbermorgen\n            role: '2values',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMin_d2' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0 ',\n                    },\n                },\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMax_d2' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n                            dp: 'accuweather.0.Summary.WeatherIcon_d2',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Summary.WeatherIcon_d2',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n                text: {\n                    true: {\n                        type: 'state',\n                        dp: 'accuweather.0.Summary.DayOfWeek_d2',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 9 - Wettervorschau + 3 Tage\n            role: '2values',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMin_d3' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0 ',\n                    },\n                },\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMax_d3' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n                            dp: 'accuweather.0.Summary.WeatherIcon_d3',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Summary.WeatherIcon_d3',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n                text: {\n                    true: {\n                        type: 'state',\n                        dp: 'accuweather.0.Summary.DayOfWeek_d3',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 10 - Wettervorschau + 4 Tage\n            role: '2values',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMin_d4' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0 ',\n                    },\n                },\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMax_d4' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n                            dp: 'accuweather.0.Summary.WeatherIcon_d4',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Summary.WeatherIcon_d4',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n                text: {\n                    true: {\n                        type: 'state',\n                        dp: 'accuweather.0.Summary.DayOfWeek_d4',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // Bottom 11 - Wettervorschau + 5 Tage\n            role: '2values',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMin_d5' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0 ',\n                    },\n                },\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Summary.TempMax_d5' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n                            dp: 'accuweather.0.Summary.WeatherIcon_d5',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Summary.WeatherIcon_d5',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n                text: {\n                    true: {\n                        type: 'state',\n                        dp: 'accuweather.0.Summary.DayOfWeek_d5',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        //Indicator\n        {\n            //indicator 1\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            //indicator 2\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Status_offene',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCren',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            //indicator 3\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Status_Ein',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            //indicator 4\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCrschloss.state',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lock' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lock-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCrschloss',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            //indicator 5\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'vw-connect.0.TMBLE7NS2K8033846.status.isCarLocked',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'car-key' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Auto',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n\n        //mrIcon1/2\n        {\n            // mricon 1\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // mricon 2\n            role: 'combined',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power2',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                        text: {\n                            value: {\n                                type: 'state',\n                                dp: '0_userdata.0.example_state_number',\n                            },\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                },\n            },\n        },\n    ],\n};\n\nexport const Testconfig: Partial<panelConfigPartial>[] = [\n    {\n        pages: [\n            pagePowerTest1,\n            pageScreensaverTest,\n            pageAbfall,\n            pageAbfallTemplate,\n            pageGridMain,\n            pageGridTueren,\n            pageGridFenster1,\n            pageGridFenster2,\n            pageGridLicht1,\n            pageGridLicht2,\n            pageGridLicht3,\n            pageGridLicht4,\n            pageEntitiesFahrplan,\n            pageEntitiesFahrplanTemplate,\n        ],\n        // override by password.ts\n        navigation: [\n            {\n                name: 'main', //main ist die erste Seite\n                page: 'main',\n                left: { single: '5' }, // Die 4 bezieht sich auf den name: 4\n                right: { single: '1', double: 'main' },\n            },\n            {\n                name: '11',\n                left: { single: 'main' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: 'main' },\n                page: 'tuer', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '12',\n                left: { single: 'main' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: '13' },\n                page: 'fenster1', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '13',\n                left: { single: '12' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: 'main' },\n                page: 'fenster2', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '14',\n                left: { single: 'main' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: '15' },\n                page: 'licht1', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '15',\n                left: { single: '14' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: '16' },\n                page: 'licht2', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '16',\n                left: { single: '15' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: '17' },\n                page: 'licht3', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '17',\n                left: { single: '16' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: 'main' },\n                page: 'licht4', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '1',\n                left: { single: 'main' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: '4' },\n                page: 'abfall', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '2',\n                left: { single: '4' },\n                right: { single: '3' },\n                page: 'power1',\n            },\n            {\n                name: '3',\n                left: { single: '2' },\n                right: { single: '5' },\n                page: 'fahrplan',\n            },\n            {\n                name: '4',\n                left: { single: '1' }, // Die 0 bezieht sich auf den name: 0\n                right: { single: '2' },\n                page: 'abfall1', // das grid1 bezieht sich auf die uniqueID oben in pages\n            },\n            {\n                name: '5',\n                left: { single: '3' },\n                right: { single: 'main' },\n                page: 'fahrplan1',\n            },\n        ],\n        topic: 'SmartHome/NSPanel_1',\n        name: 'B\u00FCro',\n        config: {\n            // dat hier hat noch keine bedeutung glaube ich :)\n            momentLocale: '',\n            locale: 'de-DE',\n            iconBig1: false,\n            iconBig2: false,\n        },\n        timeout: 30, // dat kommt vom Admin\n        dimLow: 20,\n        dimHigh: 90,\n    },\n];\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,YAAuB;AAGvB,MAAM,eAAqC;AAAA,EAEvC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,MAAM;AAAA,UACN,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,cAAc;AAAA,YAChD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,MAAM;AAAA,UACN,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,MAAM;AAAA,UACN,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,OAAO;AAAA,YACzC,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,iBAAuC;AAAA,EAEzC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,cAAc;AAAA,YAChD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,cAAc;AAAA,YAChD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,mBAAyC;AAAA,EAE3C,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,mBAAyC;AAAA,EAE3C,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,iBAAuC;AAAA,EAEzC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,iCAAiC;AAAA,MACrE;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,oCAAiC;AAAA,MACrE;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,0CAAuC;AAAA,MAC3E;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,+BAA+B;AAAA,MACnE;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,iBAAuC;AAAA,EAEzC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,kCAA+B;AAAA,MACnE;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,gDAAgD;AAAA,MACpF;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,WAAW,EAAE,MAAM,SAAS,IAAI,+BAA+B;AAAA,MACnE;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,iBAAuC;AAAA,EAEzC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,iBAAuC;AAAA,EAEzC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MAER,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,OAAO;AAAA,UACnD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,aAAmC;AAAA,EAErC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACtE;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,SAAS,UAAU,KAAK;AAAA,QAC3C;AAAA,QACA,MAAM;AAAA,UACF,MAAM,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACjE,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM,EAAE,MAAM,SAAS,IAAI,qCAAqC;AAAA,UAChE,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACtE;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,SAAS,UAAU,KAAK;AAAA,QAC3C;AAAA,QACA,MAAM;AAAA,UACF,MAAM,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACjE,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM,EAAE,MAAM,SAAS,IAAI,qCAAqC;AAAA,UAChE,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACtE;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,SAAS,UAAU,KAAK;AAAA,QAC3C;AAAA,QACA,MAAM;AAAA,UACF,MAAM,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACjE,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM,EAAE,MAAM,SAAS,IAAI,qCAAqC;AAAA,UAChE,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACtE;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,SAAS,UAAU,KAAK;AAAA,QAC3C;AAAA,QACA,MAAM;AAAA,UACF,MAAM,EAAE,MAAM,SAAS,IAAI,sCAAsC;AAAA,UACjE,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM,EAAE,MAAM,SAAS,IAAI,qCAAqC;AAAA,UAChE,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,qBAA2C;AAAA,EAE7C,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AACd;AACA,MAAM,iBAAuC;AAAA,EAEzC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,WAAW,CAAC;AAAA,EACZ,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU,EAAE,MAAM,SAAS,UAAU,kBAAkB;AAAA,MACvD,UAAU;AAAA,QACN,MAAM;AAAA,UACF,OAAO,EAAE,MAAM,SAAS,UAAU,8BAA8B;AAAA,UAChE,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,cAAc;AAAA,MACd,cAAc;AAAA,QACV,OAAO,EAAE,MAAM,YAAY,IAAI,qBAAqB;AAAA,QACpD,MAAM,EAAE,MAAM,SAAS,UAAU,eAAe;AAAA,MACpD;AAAA,MACA,SAAS;AAAA,MACT,YAAY;AAAA,QACR,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,8BAA8B;AAAA,YAChE,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,QAAQ;AAAA,YAChD,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,YAC9C,MAAM;AAAA,UACV;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,EAAE,SAAS,GAAG,SAAS,KAAK,UAAU,IAAI,EAAE;AAAA,QAClF;AAAA,QACA,OAAO;AAAA,UACH,OAAO,EAAE,MAAM,aAAa,IAAI,oBAAoB;AAAA,UACpD,SAAS,EAAE,MAAM,SAAS,UAAU,EAAE;AAAA,UACtC,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,QACzC;AAAA,QACA,OAAO;AAAA,UACH,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,UAKV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,eAAe;AAAA,YACjD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,QAAQ;AAAA,YAChD,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,YAC9C,MAAM;AAAA,UACV;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,EAAE,SAAS,GAAG,SAAS,KAAM,UAAU,EAAE,EAAE;AAAA,QACjF;AAAA,QACA,OAAO;AAAA,UACH,OAAO,EAAE,MAAM,aAAa,IAAI,4BAA4B;AAAA,UAC5D,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,QACzC;AAAA,QACA,OAAO;AAAA,UACH,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,UAKV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,QACN,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,kBAAkB;AAAA,YACpD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,QAAQ;AAAA,YAChD,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,YAC9C,MAAM;AAAA,UACV;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,EAAE,SAAS,GAAG,SAAS,KAAM,UAAU,EAAE,EAAE;AAAA,QACjF;AAAA,QACA,OAAO;AAAA,UACH,OAAO,EAAE,MAAM,aAAa,IAAI,uBAAuB;AAAA,UACvD,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,QACzC;AAAA,QACA,OAAO;AAAA,UACH,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,UAKV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,aAAa;AAAA,QACT,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,qBAAqB;AAAA,YACvD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,QAAQ;AAAA,YAChD,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,YAC9C,MAAM;AAAA,UACV;AAAA,UACA,OAAO,EAAE,MAAM,SAAS,UAAU,EAAE,SAAS,GAAG,SAAS,KAAM,UAAU,EAAE,EAAE;AAAA,QACjF;AAAA,QACA,OAAO;AAAA,UACH,OAAO,EAAE,MAAM,aAAa,IAAI,sCAAsC;AAAA,UACtE,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI;AAAA,QACzC;AAAA,QACA,OAAO;AAAA,UACH,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,UAKV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,aAAa;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,OAAO;AACX;AACA,MAAM,uBAA6C;AAAA,EAC/C,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACF,UAAU;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,QACF,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,IAAI,MAAM,QAAQ,MAAM,SAAS,IAAI,WAAW;AAAA,YAE/D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACH,MAAM;AAAA,YACF,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,UACV;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,MAAM,+BAAqD;AAAA,EACvD,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AACd;AAEA,MAAM,sBAA4C;AAAA,EAC9C,MAAM;AAAA,EAEN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,IACd,OAAO;AAAA,IACP,MAAM;AAAA,EACV;AAAA,EAGA,WAAW;AAAA,IAEP;AAAA,MACI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,gBACJ,SAAS;AAAA,gBACT,OAAO;AAAA,gBACP,MAAM;AAAA,gBACN,KAAK;AAAA,cACT;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA;AAAA,MACI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,oCAAoC;AAAA,UACpE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cAUN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA6EN,IAAI;AAAA,YACR;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwEV;AAAA,UACJ;AAAA,UACA,OAAO,EAAE,OAAO,QAAW,OAAO,OAAU;AAAA,QAChD;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,QACT,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU,EAAE,SAAS,GAAG,SAAS,IAAI,UAAU,GAAG;AAAA,UACtD;AAAA,UACA,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,QACT,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU,EAAE,SAAS,GAAG,SAAS,IAAK;AAAA,UAC1C;AAAA,UACA,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,QACT,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,gBACJ,OAAO;AAAA,gBACP,MAAM;AAAA,gBACN,KAAK;AAAA,cACT;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,YACR;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,QACT,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,WAAW;AAAA,UACf;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,YACJ,MAAM;AAAA,YACN,UAAU,MAAO;AAAA,UACrB;AAAA,UACA,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,YACJ,MAAM;AAAA,YACN,UAAU,MAAO;AAAA,UACrB;AAAA,UACA,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU,EAAE,SAAS,GAAG,SAAS,IAAI;AAAA,UACzC;AAAA,UACA,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAGI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,YACJ,MAAM;AAAA,YACN,UAAU,MAAO;AAAA,UACrB;AAAA,UACA,MAAM;AAAA,QACV;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,YACJ,MAAM;AAAA,YACN,UAAU,MAAO;AAAA,UACrB;AAAA,UACA,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU,EAAE,SAAS,GAAG,SAAS,GAAG;AAAA,UACxC;AAAA,UACA,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,UACX;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,MAAM;AAAA,YACN,UAAU,EAAE,SAAS,GAAG,SAAS,KAAK,UAAU,GAAG;AAAA,UACvD;AAAA,UACA,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,QACT,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,WAAW;AAAA,UACf;AAAA,UACA,YAAY;AAAA,YACR,MAAM;AAAA,YACN,UAAU,EAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW,QAAQ,UAAU,EAAE;AAAA,UAC5E;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAGI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cAUN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4EN,IAAI;AAAA,YACR;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwEV;AAAA,UACJ;AAAA,UACA,OAAO,EAAE,OAAO,QAAW,OAAO,OAAU;AAAA,QAChD;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cAUN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4EN,IAAI;AAAA,YACR;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwEV;AAAA,UACJ;AAAA,UACA,OAAO,EAAE,OAAO,QAAW,OAAO,OAAU;AAAA,QAChD;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cAUN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4EN,IAAI;AAAA,YACR;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwEV;AAAA,UACJ;AAAA,UACA,OAAO,EAAE,OAAO,QAAW,OAAO,OAAU;AAAA,QAChD;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cAUN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4EN,IAAI;AAAA,YACR;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwEV;AAAA,UACJ;AAAA,UACA,OAAO,EAAE,OAAO,QAAW,OAAO,OAAU;AAAA,QAChD;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL,OAAO,EAAE,MAAM,aAAa,IAAI,mCAAmC;AAAA,UACnE,SAAS;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cAUN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4EN,IAAI;AAAA,YACR;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwEV;AAAA,UACJ;AAAA,UACA,OAAO,EAAE,OAAO,QAAW,OAAO,OAAU;AAAA,QAChD;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IAGA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,sBAAsB;AAAA,YACxD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,YAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,cAAc;AAAA,YAChD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,oBAAoB;AAAA,YACtD,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,OAAO;AAAA,YACzC,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,UACA,OAAO;AAAA,YACH,OAAO,EAAE,MAAM,SAAS,UAAU,YAAY;AAAA,YAC9C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO,EAAE,MAAM,SAAS,UAAU,UAAU;AAAA,YAC5C,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,UAClD;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,YACP,OAAO,EAAE,MAAM,SAAS,UAAU,MAAM,IAAI;AAAA,UAChD;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,MAAM;AAAA,YACN,UAAU;AAAA,UACd;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IAGA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACZ;AAAA,QAEA,MAAM;AAAA,UACF,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MAEI,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,QACF,SAAS;AAAA,UACL,OAAO;AAAA,YACH,MAAM;AAAA,YACN,IAAI;AAAA,UACR;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAA,YACF,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,YACA,MAAM;AAAA,cACF,OAAO;AAAA,gBACH,MAAM;AAAA,gBACN,IAAI;AAAA,cACR;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,OAAO;AAAA,YACH,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACH,MAAM;AAAA,cACN,UAAU,MAAM;AAAA,YACpB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAEO,MAAM,aAA4C;AAAA,EACrD;AAAA,IACI,OAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAEA,YAAY;AAAA,MACR;AAAA,QACI,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,IAAI;AAAA,QACpB,OAAO,EAAE,QAAQ,KAAK,QAAQ,OAAO;AAAA,MACzC;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,OAAO;AAAA,QACvB,OAAO,EAAE,QAAQ,OAAO;AAAA,QACxB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,OAAO;AAAA,QACvB,OAAO,EAAE,QAAQ,KAAK;AAAA,QACtB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,KAAK;AAAA,QACrB,OAAO,EAAE,QAAQ,OAAO;AAAA,QACxB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,OAAO;AAAA,QACvB,OAAO,EAAE,QAAQ,KAAK;AAAA,QACtB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,KAAK;AAAA,QACrB,OAAO,EAAE,QAAQ,KAAK;AAAA,QACtB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,KAAK;AAAA,QACrB,OAAO,EAAE,QAAQ,KAAK;AAAA,QACtB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,KAAK;AAAA,QACrB,OAAO,EAAE,QAAQ,OAAO;AAAA,QACxB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,OAAO;AAAA,QACvB,OAAO,EAAE,QAAQ,IAAI;AAAA,QACrB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,IAAI;AAAA,QACpB,OAAO,EAAE,QAAQ,IAAI;AAAA,QACrB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,IAAI;AAAA,QACpB,OAAO,EAAE,QAAQ,IAAI;AAAA,QACrB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,IAAI;AAAA,QACpB,OAAO,EAAE,QAAQ,IAAI;AAAA,QACrB,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,MAAM,EAAE,QAAQ,IAAI;AAAA,QACpB,OAAO,EAAE,QAAQ,OAAO;AAAA,QACxB,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,MAEJ,cAAc;AAAA,MACd,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,SAAS;AAAA,EACb;AACJ;",
  "names": []
}
