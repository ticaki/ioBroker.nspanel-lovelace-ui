{
  "version": 3,
  "sources": ["../../src/lib/config-custom.ts"],
  "sourcesContent": ["import type * as pages from './types/pages';\nimport type { panelConfigPartial } from './controller/panel';\nimport { Color } from './const/Color';\n\nconst pageGridMain: pages.PageBaseConfig = {\n    alwaysOn: 'none',\n    uniqueID: 'main',\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCbersicht',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Anzahl_offene',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 12,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Status_offene',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Anzahl_offene',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'T\u00FCren',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 11,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Status_Ein',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Anzahl_Ein',\n                    },\n                    false: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: 14,\n                },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lock' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lock-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCrschloss.state',\n                    },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCrschlo\u00DF',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n};\n\nconst pagenEntitiesAdapter: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'adapter',\n    config: {\n        card: 'cardEntities',\n        cardRole: 'AdapterStopped',\n        scrollType: 'page',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'Adapter',\n            },\n        },\n    },\n    pageItems: [],\n    items: undefined,\n};\n\nconst pageScreensaverTest: pages.PageBaseConfig = {\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'scr',\n    useColor: false,\n    config: {\n        card: 'screensaver2',\n        mode: 'advanced',\n        rotationTime: 10,\n        model: 'eu',\n        data: undefined,\n    },\n\n    // Config of Entitys\n    pageItems: [\n        //Datum und Zeit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'time',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///time',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: { local: 'de', format: { hour: '2-digit', minute: '2-digit' } },\n                    },\n                },\n            },\n        },\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'date',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'internal',\n                        dp: '///date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                weekday: 'long',\n                                month: 'short',\n                                year: 'numeric',\n                                day: 'numeric',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        //Favorit\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'favorit',\n            data: {\n                entity2: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Current.Temperature' },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        //left\n        {\n            // Left 1 - temperatur flur Panel\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.NSPanel.Flur.Sensor.ANALOG.Temperature.ACTUAL',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'thermometer',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 35, val_best: 20 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n            },\n        },\n        {\n            // Left 2 - W\u00E4rmeverbrauch\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Heizung.W\u00E4rmeTagesVerbrauch.ACTUAL',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'kWh',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'counter',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 5000 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n            },\n        },\n        {\n            // Left 3 - M\u00FClltermin\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'left',\n            data: {\n                entity1: undefined,\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.Abfallkalender.1.date',\n                    },\n                    dateFormat: {\n                        type: 'const',\n                        constVal: {\n                            local: 'de',\n                            format: {\n                                month: '2-digit',\n                                year: 'numeric',\n                                day: '2-digit',\n                            },\n                        },\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'trash-can',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: '0_userdata.0.Abfallkalender.1.color',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n            },\n        },\n        //Bottom\n        // Bottom 1 - Sonenaufgang\n        {\n            template: 'text.accuweather.sunriseset',\n            dpInit: '/^accuweather.0.Daily.+/',\n            modeScr: 'bottom',\n        },\n        // Bottom 2 - Wind\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 120 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 3 - B\u00F6en\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: undefined,\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 4 - Windrichtung\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.White,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 5 - Feuchte\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'water-percent',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 100, val_best: 65 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Feuchte',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 6 - UV-Index\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'bottom',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.UVIndex',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '',\n                    },\n                },\n                entity2: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'accuweather.0.Current.UVIndex',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'solar-power',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSGreen,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.MSRed,\n                        },\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 9, val_best: 0 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'UV Index',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        // Bottom 7 - Wettervorschau morgen\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d1$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 8 - Wettervorschau \u00FCbermorgen\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d2$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 9 - Wettervorschau + 3 Tage\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d3$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 10 - Wettervorschau + 4 Tage\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d4$/',\n            modeScr: 'bottom',\n        },\n        // Bottom 11 - Wettervorschau + 5 Tage\n        {\n            template: 'text.accuweather.bot2values',\n            dpInit: '/^accuweather\\\\.0.+?d5$/',\n            modeScr: 'bottom',\n        },\n\n        //Indicator\n        //indicator 1\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Fenster',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 2\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCren.Status_offene',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'door-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'door-closed' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCren',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 3\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Licht.Status_Ein',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 4\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.T\u00FCrschloss.state',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lock' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lock-open' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'T\u00FCrschloss',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 5\n        {\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'indicator',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'vw-connect.0.TMBLE7NS2K8033846.status.isCarLocked',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'car-key' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Auto',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        //indicator 6\n        {\n            role: 'battery',\n            template: 'text.battery',\n            dpInit: '0_userdata.0',\n            modeScr: 'indicator',\n        },\n        //indicator 7\n        {\n            role: 'text',\n            type: 'text',\n            dpInit: '',\n            modeScr: 'indicator',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open-variant' },\n                        color: { type: 'const', constVal: Color.open },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-closed-variant' },\n                        color: { type: 'const', constVal: Color.close },\n                    },\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.NSPanel.Allgemein.Fenster.Status_offene',\n                    },\n                },\n                text: {\n                    true: { type: 'const', constVal: 'window' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'opened' },\n                    false: { type: 'const', constVal: 'closed' },\n                },\n            },\n        },\n\n        //mrIcon1/2\n        {\n            // mricon 1\n            role: 'text',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: 'alias.0.Steckdosen.Schreibtisch.Control.Power',\n                    },\n                },\n\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n        {\n            // mricon 2\n            role: 'combined',\n            dpInit: '',\n            type: 'text',\n            modeScr: 'mricon',\n            data: {\n                entity1: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power2',\n                    },\n                },\n                icon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                        text: {\n                            value: {\n                                type: 'state',\n                                dp: '0_userdata.0.example_state_number',\n                            },\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                },\n            },\n        },\n    ],\n};\n\nexport const Testconfig: Partial<panelConfigPartial>[] = [\n    {\n        pages: [pageGridMain, pageScreensaverTest, pagenEntitiesAdapter],\n        // override by password.ts\n        navigation: [\n            {\n                name: 'main', //main ist die erste Seite\n                left: { single: '2' }, // arrow-top-left-bold-outline\n                right: { single: '1' },\n                page: 'main',\n            },\n            {\n                name: '1',\n                left: { single: 'main' },\n                right: { single: '2' },\n                page: 'adapter',\n            },\n            {\n                name: '2',\n                left: { single: '1' },\n                right: { single: 'main' },\n                page: 'fahrplanrouten',\n            },\n        ],\n        topic: 'SmartHome/NSPanel_1',\n        name: 'Buero',\n        config: {\n            // dat hier hat noch keine bedeutung glaube ich :)\n            momentLocale: '',\n            locale: 'de-DE',\n            iconBig1: false,\n            iconBig2: false,\n        },\n        timeout: 30, // dat kommt vom Admin\n        dimLow: 20,\n        dimHigh: 90,\n    },\n];\n"],
  "mappings": "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",
  "names": []
}
