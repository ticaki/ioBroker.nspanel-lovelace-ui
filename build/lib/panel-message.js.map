{
  "version": 3,
  "sources": ["../../src/lib/panel-message.ts"],
  "sourcesContent": ["import { AdapterClassDefinition, BaseClass } from './library';\nimport { MQTTClientClass } from './mqtt';\nimport { BaseClassTriggerd } from './states-controler';\n\nexport class BaseClassPanelSend extends BaseClassTriggerd {\n    protected readonly panelSend: PanelSend;\n    readonly sendToPanel: (payload: string) => void;\n\n    constructor(adapter: AdapterClassDefinition, panelSend: PanelSend, name: string) {\n        super(adapter, name);\n        this.panelSend = panelSend;\n        this.sendToPanel = panelSend.addMessage;\n    }\n}\n\nexport class PanelSend extends BaseClass {\n    private messageDb: string[] = [];\n    private messageTimeout: ioBroker.Timeout | undefined;\n    private mqttClient: MQTTClientClass;\n    private topic: string = '';\n    readonly panel: any;\n    constructor(\n        adapter: AdapterClassDefinition,\n        config: { panel: any; name: string; mqttClient: MQTTClientClass; topic: string },\n    ) {\n        super(adapter, config.name);\n        this.panel = config.panel;\n        this.mqttClient = config.mqttClient;\n        this.topic = config.topic;\n    }\n    readonly addMessage = (payload: string): void => {\n        this.messageDb.push(payload);\n        if (this.messageTimeout === undefined) {\n            this.messageTimeout = this.adapter.setTimeout(this.sendMessageLoop, 20);\n        }\n    };\n\n    private readonly sendMessageLoop = (): void => {\n        const msg = this.messageDb.shift();\n        if (msg === undefined || this.unload) {\n            this.messageTimeout = undefined;\n            return;\n        }\n        this.log.debug(`send payload: ${msg} to panel.`);\n        this.mqttClient.publish(this.topic, msg);\n        this.messageTimeout = this.adapter.setTimeout(this.sendMessageLoop, 20);\n    };\n\n    async delete(): Promise<void> {\n        await super.delete();\n        if (this.messageTimeout) this.adapter.clearTimeout(this.messageTimeout);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkD;AAElD,8BAAkC;AAE3B,MAAM,2BAA2B,0CAAkB;AAAA,EACnC;AAAA,EACV;AAAA,EAET,YAAY,SAAiC,WAAsB,MAAc;AAC7E,UAAM,SAAS,IAAI;AACnB,SAAK,YAAY;AACjB,SAAK,cAAc,UAAU;AAAA,EACjC;AACJ;AAEO,MAAM,kBAAkB,yBAAU;AAAA,EAC7B,YAAsB,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA,QAAgB;AAAA,EACf;AAAA,EACT,YACI,SACA,QACF;AACE,UAAM,SAAS,OAAO,IAAI;AAC1B,SAAK,QAAQ,OAAO;AACpB,SAAK,aAAa,OAAO;AACzB,SAAK,QAAQ,OAAO;AAAA,EACxB;AAAA,EACS,aAAa,CAAC,YAA0B;AAC7C,SAAK,UAAU,KAAK,OAAO;AAC3B,QAAI,KAAK,mBAAmB,QAAW;AACnC,WAAK,iBAAiB,KAAK,QAAQ,WAAW,KAAK,iBAAiB,EAAE;AAAA,IAC1E;AAAA,EACJ;AAAA,EAEiB,kBAAkB,MAAY;AAC3C,UAAM,MAAM,KAAK,UAAU,MAAM;AACjC,QAAI,QAAQ,UAAa,KAAK,QAAQ;AAClC,WAAK,iBAAiB;AACtB;AAAA,IACJ;AACA,SAAK,IAAI,MAAM,iBAAiB,eAAe;AAC/C,SAAK,WAAW,QAAQ,KAAK,OAAO,GAAG;AACvC,SAAK,iBAAiB,KAAK,QAAQ,WAAW,KAAK,iBAAiB,EAAE;AAAA,EAC1E;AAAA,EAEA,MAAM,SAAwB;AAC1B,UAAM,MAAM,OAAO;AACnB,QAAI,KAAK;AAAgB,WAAK,QAAQ,aAAa,KAAK,cAAc;AAAA,EAC1E;AACJ;",
  "names": []
}
